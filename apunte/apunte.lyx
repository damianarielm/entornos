#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass lyx
\options dvipsnames
\use_default_options true
\begin_modules
theorems-ams
theorems-chap
multicol
customHeadersFooters
\end_modules
\maintain_unincluded_children no
\language spanish
\language_package default
\inputencoding auto-legacy
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement class
\float_alignment class
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 1
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Cover
\begin_inset Note Note
status open

\begin_layout Plain Layout
Estandarizar tipografías:
\end_layout

\begin_layout Itemize
Comandos.
\end_layout

\begin_layout Itemize
Sustantivos propios.
\end_layout

\begin_layout Itemize
Expresiones en ingles.
\end_layout

\begin_layout Itemize
Palabras encomilladas.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset VSpace vfill*
\end_inset


\end_layout

\begin_layout Title
Entorno de Programación
\end_layout

\begin_layout Author
Tecnicatura Universitaria en Inteligencia Artificial
\begin_inset VSpace vfill*
\end_inset


\end_layout

\begin_layout Date
17 de enero de 2025
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill*
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Aquellos temas señalados en color 
\color gray
gris
\color inherit
,
 no serán evaluados 
\emph on
durante los exámenes
\emph default
.
\end_layout

\end_inset


\end_layout

\begin_layout Introduccion
\begin_inset Quotes fld
\end_inset


\emph on
Una computadora es para mí la herramienta más sorprendente que hayamos ideado.
 Es el equivalente a una bicicleta para nuestras mentes
\emph default

\begin_inset Quotes frd
\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space \hfill{}
\end_inset

Steve Jobs
\end_layout

\begin_layout Part
Fundamentos
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Eliminar todos los comandos.
\end_layout

\begin_layout Plain Layout
Agregar preguntas teoricas.
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Historia
\end_layout

\begin_layout Section
Orígenes de la computadora
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/pascal.jpg
	display false
	scale 8

\end_inset


\end_layout

\end_inset

 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Blaise_Pascal"
literal "true"

\end_inset

 
\emph on
Blaise Pascal
\emph default
 había desarrollado en 1642 una de las primeras calculadoras mecánicas de la historia,
 conocida como la 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=3h71HAJWnVU"
literal "true"

\end_inset

 Pascalina
\begin_inset Quotes frd
\end_inset

.
 Esta máquina,
 capaz de realizar sumas mediante el uso de engranajes y ruedas dentadas,
 fue un importante avance en el campo de la mecánica y la automatización,
 y sentó las bases para el desarrollo de las máquinas calculadoras modernas.
 La 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Pascalina"
literal "true"

\end_inset

 Pascalina fue utilizada por matemáticos y científicos de la época,
 y su diseño influyó en el desarrollo de posteriores calculadoras mecánicas.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/pascalina.png
	lyxscale 17
	scale 15

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Pascalina
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=BlbQsKpq3Ak"
literal "true"

\end_inset

 máquina analítica
\begin_inset Quotes frd
\end_inset

 fue un proyecto desarrollado por 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/babbage.jpg
	display false
	scale 14

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Charles_Babbage"
literal "true"

\end_inset

 
\emph on
Charles Babbage
\emph default
 en 1837,
 considerado como el primer prototipo de una computadora moderna.
 La máquina analítica tenía la capacidad de almacenar programas y realizar operaciones matemáticas complejas.
 Es considerada el primer prototipo de sistema de procesamiento de datos automático.
\end_layout

\begin_layout Standard
Aunque Babbage nunca logró construir la máquina completa debido a problemas financieros y técnicos,
 su proyecto sentó las bases para el desarrollo de las computadoras modernas.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/diferencial.jpg
	lyxscale 15
	scale 7

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Máquina diferencial
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar información sobre el telegrafo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=2XLZ4Z8LpEE"
literal "true"

\end_inset

 teletipo fue una invención que utilizaba un sistema de impresión automática para la transmisión de texto a través de una red telegráfica.
 Fue inventado a finales del sigo XIX,
 y su desarrollo permitió una comunicación más rápida y eficiente que el telégrafo de 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Samuel_Morse"
literal "true"

\end_inset

 
\emph on
Samuel Morse
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/teletipo.png
	lyxscale 20
	scale 13

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Teletipo Siemens t37h
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las terminales de teletipo (TTY) se usaron también como terminales de computadoras en las primeras décadas de su historia.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Avances de la guerra
\end_layout

\begin_layout Standard
La computadora 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=aUXnhVrT4CI"
literal "true"

\end_inset

 Z3
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/zuse.jpg
	display false
	scale 15

\end_inset


\end_layout

\end_inset

,
 construida en 1941 por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Konrad_Zuse"
literal "true"

\end_inset

 
\emph on
Konrad Zuse
\emph default
,
 era una máquina electromecánica basada en 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Rel%C3%A9"
literal "true"

\end_inset

 relés
\begin_inset Quotes frd
\end_inset

,
 que utilizaba un sistema binario para representar los datos y los cálculos.
 El Z3 contaba con una memoria programable,
 lo que permitía al usuario programar la máquina para llevar a cabo diferentes tareas.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/z3.png
	lyxscale 25
	scale 18

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Réplica del Zuse Z3 exhibida en Múnich
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/aiken.jpg
	display false
	scale 38

\end_inset


\end_layout

\end_inset

 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=bN7AdQmd8So"
literal "true"

\end_inset

 Harvard Mark I,
 una computadora electromecánica construida en 1944 por IBM y patrocinada por el gobierno de los Estados Unidos,
 fue diseñada por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Howard_Aiken"
literal "true"

\end_inset

 
\emph on
Howard Aiken
\emph default
 y se encuentra en el Museo de la historia de la computación en la Universidad de Harvard.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/mark1.png
	lyxscale 33
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Harvard Mark I
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para programar la Mark I se utilizaban 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Tablero_de_conexiones"
literal "true"

\end_inset

 
\emph on
plugboards
\emph default

\begin_inset Quotes frd
\end_inset

 o paneles de conexiones.
 Estos eran paneles con enchufes y cables que permitían a los operadores configurar la función de la máquina de manera física,
 estableciendo conexiones entre diferentes componentes.
 Los operadores debían conectar cables en los enchufes correspondientes para definir la ruta de los datos y las operaciones que la máquina debía realizar.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/plugboard.jpg
	lyxscale 33
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Panel de conexiones de la IBM 402.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Además,
 para leer los datos de entrada se utilizaban 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=YnnGbcM-H8c"
literal "true"

\end_inset

 tarjetas perforadas
\begin_inset Quotes frd
\end_inset

,
 un medio de almacenamiento de datos utilizado históricamente en la informática.
 Estas tarjetas son cartulinas rectangulares que contienen información codificada mediante perforaciones ubicadas en filas y columnas.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/punchcard.jpg
	lyxscale 33
	scale 13

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Tarjeta perforada de 20 filas y 80 columnas.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=32o4qcYbWMA"
literal "true"

\end_inset

 ENIAC (Electronic Numerical Integrator And Computer) fue una computadora electrónica programable construida por el gobierno de los Estados Unidos en 1946.
 Utilizaba tecnología de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/V%C3%A1lvula_termoi%C3%B3nica"
literal "true"

\end_inset

 válvulas electrónicas
\begin_inset Quotes frd
\end_inset

 y era capaz de realizar cálculos numéricos complejos a alta velocidad.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/eniac.png
	lyxscale 25
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Electronic Numerical Integrator And Computer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Aunque la tecnología de válvulas era superior a la de relés,
 el verdadero salto en el poder de cómputo se logró con la invención del 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Transistor"
literal "true"

\end_inset

 transistor en 1947.
\end_layout

\end_inset


\end_layout

\begin_layout Section
La informática moderna
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://fortran-lang.org/"
literal "true"

\end_inset

 FORTRAN
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/backus.jpg
	display false
	scale 18

\end_inset


\end_layout

\end_inset

 (Formula Translation) fue uno de los primeros lenguajes de programación.
 Fue desarrollado en 1957 por un equipo de ingenieros de IBM liderado por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/John_Backus"
literal "true"

\end_inset

 
\emph on
John Backus
\emph default
.
 El objetivo de FORTRAN era proporcionar un lenguaje de programación que permitiese a los científicos y matemáticos escribir programas de manera eficiente y fácilmente para ser utilizado en las computadoras de ese entonces.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=1EWQYAfuMYw"
literal "true"

\end_inset

 PDP-1 (Programmed Data Processor-1) es un ordenador construido por la compañía Digital Equipment Corporation (DEC) en 1959.
 El PDP-1 fue un ordenador de tiempo compartido,
 lo que significa que varios usuarios podían acceder al sistema al mismo tiempo y compartir los recursos del ordenador.
 Esto fue un gran avance en comparación con los ordenadores anteriores,
 que solían ser utilizados por un solo usuario a la vez.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/pdp1.jpg
	lyxscale 13
	scale 15

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Programmed Data Processor-1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/BASIC"
literal "true"

\end_inset

 BASIC (Beginners All-Purpose Symbolic Instruction Code) es un lenguaje de programación creado en el verano de 1964,
 con el objetivo de desarrollar un lenguaje de programación fácil de aprender y usar para estudiantes no especialistas y principiantes en la programación.
\end_layout

\begin_layout Standard
El sistema 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=JQ8ZiT1sn88"
literal "true"

\end_inset

 NLS
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/engelbart.jpg
	display false
	scale 57

\end_inset


\end_layout

\end_inset

 (oN-Line System) fue un sistema desarrollado en 1968 por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Douglas_Engelbart"
literal "true"

\end_inset

 
\emph on
Douglas Engelbart
\emph default
.
 Fue una de las primeras demostraciones de una interfaz gráfica de usuario,
 con un puntero del ratón,
 sistema de hipertexto y ventanas.
 También introdujo varias características que se consideran fundamentales en la computación moderna,
 como el procesamiento de textos,
 el correo electrónico,
 la videoconferencia y la colaboración en tiempo real.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/nls.png
	lyxscale 70
	scale 38

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
NLS (oN-Line System)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Multics"
literal "true"

\end_inset

 MULTICS fue un sistema operativo desarrollado en 1969 por un equipo liderado por el MIT y Bell Labs.
 El objetivo de MULTICS era crear un sistema operativo de tiempo compartido que pudiera ser utilizado por varios usuarios simultáneamente y ofrecer servicios avanzados,
 como el procesamiento de archivos,
 el manejo de bases de datos,
 manejo de permisos y el procesamiento de informes.
 A pesar de sus avances,
 MULTICS tuvo problemas financieros y técnicos que retrasaron su desarrollo y limitaron su adopción.
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/thompsonritchie.jpg
	display false
	scale 35

\end_inset


\end_layout

\end_inset

Tras haber participado en el desarrollo de MULTICS,
 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Ken_Thompson"
literal "true"

\end_inset

 
\emph on
Ken Thompson
\emph default
 y 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Dennis_Ritchie"
literal "true"

\end_inset

 
\emph on
Dennis Ritchie
\emph default
 iniciaron en 1970 la creación de un nuevo sistema operativo.
 El proyecto fue bautizado originalmente como UNICS e inicialmente no tuvo apoyo económico por parte de los laboratorios Bell.
 Al año siguiente,
 Dennis Ritchie desarrolla el lenguaje de programación C,
 un sistema diseñado para ser eficiente en términos de tiempo de ejecución y uso de recursos,
 y fácil de portar a diferentes plataformas de hardware.
\end_layout

\begin_layout Standard
Los sistemas operativos existentes hasta el momento eran propietarios y solo funcionaban en una plataforma específica,
 es por esto que en 1972,
 Ken Thompson y Dennis Ritchie decidieron reescribir el código de UNICS pero esta vez en lenguaje C,
 dando así origen a UNIX.
 Este cambio significaba que UNIX podría ser fácilmente modificado para funcionar en otras computadoras y así otras variaciones podían ser desarrolladas por otros programadores.
\end_layout

\begin_layout Standard
En 1973 se desarrolló el 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=9H79_kKzmFs"
literal "true"

\end_inset

 Xerox Alto:
 un ordenador de tipo personal,
 con una interfaz gráfica de usuario,
 soporte para ventanas y un mouse.
 Además,
 Alto también tenía un sistema de gestión de archivos,
 un procesador de texto,
 una herramienta de dibujo y soporte para redes de computadoras.
 Aunque el Xerox Alto nunca fue comercializado,
 muchas de sus características y conceptos se convirtieron en estándar en la industria de los ordenadores personales.
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/alto.png
	lyxscale 10
	scale 7

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Xerox Alto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Primeras computadoras personales
\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=qv5b1Xowxdk"
literal "true"

\end_inset

 Altair 8800 fue una de las primeras computadoras personales en ser comercializadas,
 lanzada en 1974.
 Fue un éxito de ventas y sentó las bases para el desarrollo de las computadoras personales que conocemos hoy en día.
 La Altair 8800 se vendía en kit y los usuarios debían armarla ellos mismos.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/altair8800.png
	lyxscale 30
	scale 13
	BoundingBox 0bp 200bp 2000bp 1150bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Altair 8800
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En los primeros años del sistema Unix los Laboratorios Bell autorizaron a las universidades,
 a utilizar el código fuente y adaptarlo a sus necesidades.
 A partir de dicha iniciativa,
 en 1977 nace en la universidad de Berkley el sistema operativo BSD (Berkeley Software Distribution).
\end_layout

\begin_layout Standard
La IBM PC fue una de las computadoras más importantes en la historia de la informática,
 ya que sentó las bases para el estándar de computadora personal que se utiliza en la actualidad.
 Fue introducida en 1981 y se convirtió rápidamente en el estándar de la industria para las computadoras personales.
 Una de las características más importantes de la IBM PC fue su arquitectura abierta.
 A diferencia de otras computadoras personales de la época,
 la IBM PC tenía un diseño abierto que permitía a los usuarios y terceros desarrollar sus propios productos y programas para ella.
 Esto ayudó a impulsar un gran ecosistema de desarrolladores y fabricantes de periféricos que crearon una gran variedad de software y hardware para la computadora.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/pc.jpg
	lyxscale 20
	scale 4
	BoundingBox 0bp 100bp 3840bp 2300bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
IBM PC
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/System_V"
literal "true"

\end_inset

 System V es una versión del sistema operativo UNIX desarrollado por Bell Labs en 1983.
 Fue una de las primeras versiones de UNIX en ser comercializada y distribuida ampliamente,
 y tuvo un gran impacto en el desarrollo de los sistemas operativos tipo UNIX.
 Aunque UNIX se convirtió en un estándar en la industria de la computación,
 no se consideraba 
\begin_inset Quotes fld
\end_inset

libre
\begin_inset Quotes frd
\end_inset

 debido a las restricciones en su uso y distribución impuestas por AT&T.
\end_layout

\begin_layout Standard
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/stallman.jpg
	display false
	scale 25

\end_inset


\end_layout

\end_inset

Ese mismo año fue fundado el movimiento 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.gnu.org/"
literal "true"

\end_inset

 GNU por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Richard_Stallman"
literal "true"

\end_inset

 
\emph on
Richard Stallman
\emph default
,
 un programador y defensor de la libertad de software.
 El objetivo principal del movimiento GNU es desarrollar un sistema operativo completo y gratuito basado en el estándar UNIX,
 de manera que cualquier persona pueda usar,
 estudiar,
 compartir y modificar el software sin restricciones.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El movimiento de software privativo había sido fundado con anterioridad en 1976 por Bill Gates a través de la denominada 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Carta_abierta_a_los_aficionados"
literal "true"

\end_inset

 carta abierta a los aficionados
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Sistema_de_ventanas_X"
literal "true"

\end_inset

 X Windows es un sistema de ventanas para sistemas tipo UNIX.
 Fue desarrollado en el Massachusetts Institute of Technology (MIT) en 1984.
 El objetivo principal de X Windows era proporcionar una interfaz gráfica que pudiera ser utilizado en una variedad de sistemas.
\end_layout

\begin_layout Standard
Minix
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/tanenbaum.jpg
	display false
	scale 13

\end_inset


\end_layout

\end_inset

 fue un sistema operativo educativo desarrollado en 1987 por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Andrew_S._Tanenbaum"
literal "true"

\end_inset

 
\emph on
Andrew Tanenbaum
\emph default
,
 para enseñar diseño y funcionamiento de sistemas operativos a estudiantes universitarios.
 Originalmente diseñado para ser utilizado en computadoras IBM PC y compatibles,
 Minix tenía un diseño similar al de UNIX,
 pero con un conjunto reducido de herramientas y utilidades.
\end_layout

\begin_layout Section
La era de la información
\end_layout

\begin_layout Standard
La década de 1990 marcó la comercialización de Internet
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/berners.jpg
	display false
	scale 9

\end_inset


\end_layout

\end_inset

 y la expansión global.
 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Tim_Berners-Lee"
literal "true"

\end_inset

 
\emph on
Tim Berners-Lee
\emph default
 propuso la World Wide Web en 1989,
 y la adopción de navegadores web facilitó la navegación.
 Se establecieron empresas de tecnología,
 y se desarrollaron servicios como correo electrónico,
 motores de búsqueda y comercio en línea.
\end_layout

\begin_layout Standard
Mientras
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/linus.jpg
	display false
	scale 16

\end_inset


\end_layout

\end_inset

 estudiaba informática en la Universidad de Helsinki en 1991,
 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Linus_Torvalds"
literal "true"

\end_inset

 
\emph on
Linus Torvalds
\emph default
 desarrolla un núcleo de sistema operativo (llamado Linux) como proyecto personal,
 basándose en el diseño de Minix.
 Hasta el momento el proyecto GNU había desarrollado una amplia gama de software,
 incluyendo un compilador,
 un intérprete de línea de comandos y diversas herramientas de programación.
 Sin embargo,
 faltaba un kernel,
 que es la parte del sistema operativo que administra los recursos del sistema,
 como la memoria y los procesos.
 Con el tiempo Linux se convirtió en una parte fundamental del proyecto GNU y en uno de los sistemas operativos de código abierto más utilizados y respetados de la industria tecnológica.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.python.org/"
literal "true"

\end_inset

 Python,
 creado por 
\begin_inset CommandInset href
LatexCommand href
name "\\faUser"
target "https://es.wikipedia.org/wiki/Guido_van_Rossum"
literal "true"

\end_inset

 
\emph on
Guido van Rossum
\emph default

\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/guido.jpg
	display false
	scale 1.9

\end_inset


\end_layout

\end_inset

,
 fue concebido como un lenguaje de programación de alto nivel con un enfoque en la legibilidad del código y la facilidad de uso.
 Fue lanzado en febrero de 1991 y a lo largo de los años,
 ha ganado popularidad debido a su sintaxis clara y concisa,
 su versatilidad y su amplia gama de aplicaciones.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=Wu_gE8gQLIc"
literal "true"

\end_inset

 Windows 95,
 desarrollado por Microsoft y lanzado en agosto de 1995,
 fue un sistema operativo que marcó un hito significativo en la evolución de los sistemas operativos de Microsoft.
 Introdujo una interfaz gráfica de usuario más intuitiva,
 con elementos icónicos como el botón 
\begin_inset Quotes fld
\end_inset

Inicio
\begin_inset Quotes frd
\end_inset

,
 la barra de tareas,
 tecnología Plug and Play e Internet Explorer como navegador web.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/windows95.jpg
	lyxscale 50
	scale 27

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Windows 95
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Deep_Blue_(computadora)"
literal "true"

\end_inset

 Deep Blue fue una supercomputadora desarrollada por IBM que se hizo famosa por su capacidad para jugar al ajedrez.
 Fue especialmente conocida por su enfrentamiento contra el campeón mundial de ajedrez,
 Garry Kasparov,
 en 1996 y 1997.
 La victoria de Deep Blue marcó un hito en la historia de la inteligencia artificial y la computación,
 ya que fue la primera vez que una máquina derrotó a un campeón mundial de ajedrez.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.google.com/"
literal "true"

\end_inset

 Google es un motor de búsqueda en línea desarrollado por la empresa Alphabet Inc.
 Funciona como una herramienta que permite a los usuarios buscar información en la vasta cantidad de contenido disponible en la web.
 Fue fundada en 1998 por Larry Page y Sergey Brin,
 estudiantes de posgrado en la Universidad de Stanford.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://es.wikipedia.org/wiki/Wikipedia:Portada"
literal "true"

\end_inset

 Wikipedia es una enciclopedia en línea gratuita y colaborativa que permite a los usuarios crear,
 editar y actualizar contenido.
 Fue lanzada en 2001 y se basa en el principio,
 que permite la edición colaborativa de artículos por parte de usuarios de todo el mundo.
 Aunque la plataforma depende de la contribución voluntaria de sus usuarios,
 ha llegado a ser conocida por su vasta cantidad de información y su acceso abierto a la misma.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://ubuntu.com/"
literal "true"

\end_inset

 Ubuntu es una distribución de Linux basada en 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.debian.org/index.es.html"
literal "true"

\end_inset

 Debian y desarrollada por Canonical Ltd.
 Fue lanzada por primera vez en octubre de 2004 y desde entonces se ha convertido en una de las distribuciones de Linux más populares y ampliamente utilizadas en todo el mundo.
 Ubuntu se enfoca en ofrecer una experiencia de usuario amigable y accesible,
 con una amplia gama de software preinstalado y una interfaz gráfica intuitiva.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/ubuntu.png
	lyxscale 50
	scale 22

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Ubuntu 22.10
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.youtube.com/"
literal "true"

\end_inset

 YouTube es una plataforma de compartición de videos en línea.
 Fundada en 2005,
 permite a los usuarios cargar,
 ver y compartir videos.
 Los usuarios pueden interactuar con los videos mediante comentarios,
 likes y suscripciones a canales.
 La plataforma se ha convertido en una fuente importante de contenido visual en línea y ha dado lugar a la creación de comunidades de creadores de contenido.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.android.com/"
literal "true"

\end_inset

 Android es un sistema operativo móvil que fue inicialmente creado en 2003 y adquirido por Google en 2005.
 Android se ha convertido en el sistema operativo dominante para dispositivos móviles.
 Además de los teléfonos inteligentes,
 Android se utiliza en tabletas,
 televisores inteligentes,
 relojes inteligentes y otros dispositivos electrónicos.
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://chat.openai.com/"
literal "true"

\end_inset

 GPT-3,
 o Generative Pre-trained Transformer 3,
 es un modelo de lenguaje desarrollado por OpenAI a mitad de 2020.
 Es la tercera iteración de la serie GPT y representa uno de los modelos de lenguaje más grandes y avanzados hasta la fecha.
\end_layout

\begin_layout Standard
Lo distintivo de GPT-3 es su capacidad para generar texto coherente y contextuado en respuesta a instrucciones dadas en lenguaje natural.
 Con 175 mil millones de parámetros,
 GPT-3 es notable por su enorme escala,
 lo que le permite abordar tareas diversas,
 como traducción de idiomas,
 redacción de textos,
 resolución de problemas matemáticos y más,
 sin una tarea específica de entrenamiento.
\end_layout

\begin_layout Chapter
Arquitectura de la computadora
\end_layout

\begin_layout Section
Gabinete 
\end_layout

\begin_layout Standard
El 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Caja_de_computadora"
literal "true"

\end_inset

 gabinete de la PC es una carcasa que cubre y protege los componentes de una computadora.
 Sus principales funciones son:
\end_layout

\begin_layout Description
Protección Protege los componentes de la computadora de daños físicos,
 polvo y otros factores ambientales que pueden dañarlos.
\end_layout

\begin_layout Description
Organización Los gabinetes de PC están diseñados para mantener todos los componentes en su lugar y organizados de manera eficiente.
 Esto facilita el trabajo del usuario y las tareas de mejora o reparación.
\end_layout

\begin_layout Description
Refrigeración Ayudan a mantener los componentes frescos mediante la circulación de aire a través de la carcasa.
 Muchos gabinetes tienen ventiladores y otros sistemas de enfriamiento integrados para evitar el sobrecalentamiento de la computadora.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/gabinete.png
	lyxscale 20
	scale 18
	BoundingBox 100bp 100bp 900bp 900bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Gabinete Phobos Tg Xtech
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Placa madre
\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Placa_base"
literal "true"

\end_inset

 placa madre es la pieza central de una computadora,
 encargada de conectar y comunicar todos los componentes esenciales del sistema.
 A través de sus conectores,
 la placa madre une la CPU,
 la memoria RAM,
 las unidades de almacenamiento,
 la tarjeta gráfica y otros dispositivos.
\end_layout

\begin_layout Standard
Además,
 distribuye la energía eléctrica necesaria a todos los componentes a través de los conectores de alimentación,
 y controla los puertos de entrada/salida que permiten la comunicación de la computadora con dispositivos externos,
 como los puertos USB,
 de audio y de red.
\end_layout

\begin_layout Standard
También incluye un chip de memoria ROM donde se almacena la BIOS,
 un programa que se encarga de configurar la computadora al encenderla y realizar pruebas iniciales del hardware.
\end_layout

\begin_layout Standard
La mayoría de las placas madre tienen un chip de audio integrado que proporciona capacidades de audio.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/motherboard.png
	lyxscale 20
	scale 23

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Placa madre
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Fuente de alimentación
\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Placa_base"
literal "true"

\end_inset

 PSU (Power Supply Unit) o fuente de alimentación se encarga de convertir la corriente que recibe de la toma eléctrica en los diferentes voltajes necesarios para alimentar los componentes internos de la computadora.
\end_layout

\begin_layout Standard
Además protege los componentes de la computadora de sobretensiones,
 cortocircuitos y otros problemas eléctricos que pueden ocurrir.
 En caso de que se detecte una sobrecarga o falla,
 la PSU puede cortar el suministro de energía para proteger los componentes de la computadora.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/psu.jpg
	lyxscale 20
	scale 13

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Fuente de Alimentación
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Microprocesador
\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Unidad_central_de_procesamiento"
literal "true"

\end_inset

 CPU (Unidad Central de Procesamiento) es el componente principal de una computadora.
 Es un chip integrado que se coloca en el zócalo de la placa madre y está compuesto por varios núcleos (o cores) que trabajan en conjunto.
\end_layout

\begin_layout Standard
Es responsable de procesar y ejecutar los programas,
 manejar la entrada y salida de datos,
 y controlar los componentes del sistema,
 como la memoria RAM,
 el disco duro y las tarjetas de expansión.
 La velocidad y la capacidad de la CPU son factores clave que determinan el rendimiento general de una computadora.
\end_layout

\begin_layout Standard
Algunos procesadores modernos tienen gráficos integrados en su diseño.
 Estos gráficos integrados se denominan iGPU (unidad de procesamiento de gráficos integrados) y están diseñados para proporcionar capacidades gráficas básicas para aplicaciones informáticas y de juegos de baja exigencia.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/cpu.jpg
	lyxscale 30
	scale 14

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Intel Core i9
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Memoria RAM
\end_layout

\begin_layout Standard
La memoria 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Memoria_de_acceso_aleatorio"
literal "true"

\end_inset

 RAM (Random Access Memory o Memoria de Acceso Aleatorio) es un tipo de memoria que se utiliza para almacenar temporalmente los datos y programas que están en uso.
 Es un componente clave en el rendimiento de una computadora,
 ya que proporciona un acceso rápido a los datos y programas que el procesador necesita para operar.
\end_layout

\begin_layout Standard
Cuando un programa se ejecuta,
 los datos y las instrucciones necesarios se cargan en la RAM desde el disco duro.
 La RAM permite que el procesador acceda rápidamente a estos datos y programas,
 lo que acelera el tiempo de ejecución y la velocidad de la computadora en general.
\end_layout

\begin_layout Standard
Es una memoria 
\emph on
volátil
\emph default
,
 lo que significa que pierde todos los datos almacenados en ella cuando se apaga la computadora.
 Por lo tanto,
 es importante guardar los archivos y datos importantes en el disco duro o en otro dispositivo de almacenamiento persistente.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/ram.jpg
	lyxscale 20
	scale 15
	BoundingBox 0bp 350bp 2000bp 1650bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Memoria RAM Corsair Vengance DDR4
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Aunque el microprocesador también tiene una memoria volátil llamada 
\emph on
registros
\emph default
,
 estos son mucho mas caros y,
 en consecuencia,
 pequeños.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Memoria secundaria
\end_layout

\begin_layout Standard
Un 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://www.youtube.com/watch?v=3owqvmMf6No"
literal "true"

\end_inset

 disco duro es un dispositivo de almacenamiento de datos magnético que se utiliza para almacenar permanentemente archivos y programas.
 A diferencia de la memoria RAM,
 que es una memoria volátil,
 el disco duro los mantiene incluso después del apagado de la computadora.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/disk.jpg
	lyxscale 20
	scale 15
	BoundingBox 0bp 100bp 1500bp 1400bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Disco rígido Seagate Barracuda 1TB
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una de las principales diferencias entre el disco duro y la memoria RAM es la velocidad.
 Los discos duros son mucho más lentos en términos de velocidad de acceso,
 pues el brazo de lectura/escritura necesita moverse físicamente para acceder a los datos en los platos.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/jerarquia.png
	lyxscale 70
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Jerarqu%C3%ADa_de_memoria"
literal "true"

\end_inset

 Jerarquía de la memoria
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Unidad_de_estado_s%C3%B3lido"
literal "true"

\end_inset

 SSD (Solid State Drive) es un dispositivo de almacenamiento de datos que utiliza memoria flash para almacenar permanentemente archivos y programas en la computadora.
\end_layout

\begin_layout Standard
A diferencia de un disco duro tradicional,
 que utiliza platos magnéticos giratorios y cabezas de lectura/escritura para acceder a los datos,
 una SSD no tiene partes móviles.
 Como resultado,
 las SSD tienen un mejor rendimiento en términos de velocidad de lectura/escritura y tiempo de acceso.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/ssd.jpg
	lyxscale 20
	scale 5

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
SSD Kingston
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Placa de video
\end_layout

\begin_layout Standard
Una 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Tarjeta_gr%C3%A1fica"
literal "true"

\end_inset

 placa de video,
 también conocida como tarjeta gráfica o GPU,
 es un componente de hardware que tiene como objetivo procesar y generar imágenes en la pantalla.
 Su función es liberar a la CPU de la tarea del procesamiento gráfico,
 permitiéndole concentrarse en otras tareas.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/gpu.jpg
	lyxscale 30
	scale 18

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Tarjeta Gráfica NVIDIA RTX 2080 Ti
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Además de su uso en gráficos,
 en el campo de la I.
 A.
 se utilizan para entrenar y ejecutar redes neuronales debido a su arquitectura altamente paralela que les permite procesar grandes cantidades de datos de manera eficiente.
\end_layout

\end_inset


\end_layout

\begin_layout Section

\color lightgray
Teclado
\end_layout

\begin_layout Standard
El teclado es un dispositivo de entrada que permite a los usuarios introducir texto,
 números y comandos en una computadora.
 Es como una máquina de escribir moderna,
 pero con muchas más funciones.
\end_layout

\begin_layout Paragraph
Teclas
\begin_inset space ~
\end_inset

especiales
\end_layout

\begin_layout Standard
Las teclas especiales,
 a diferencia de las alfanuméricas,
 no introducen caracteres,
 sino que realizan funciones específicas o modifican el comportamiento de otras teclas.
 Alguna de ellas son:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Inicio:
 Generalmente,
 lleva el cursor al principio de la línea actual.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Fin:
 Sirve para llevar el cursor al final de la línea actual.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Re Pág:
 Desplaza la pantalla hacia arriba de a una página.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Av Pág:
 Análogo a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Re Pág.
\end_layout

\begin_layout Paragraph
Distribuciones
\end_layout

\begin_layout Standard
Una distribución de teclado se refiere a la disposición de las teclas en un teclado,
 determinando qué carácter o función se asigna a cada tecla física.
\end_layout

\begin_layout Standard
Pueede pensarse como un mapa que define la relación entre las teclas que se pulsan y lo que aparece en la pantalla.
 Diferentes distribuciones se han diseñado para adaptarse a distintos idiomas,
 necesidades de escritura y preferencias de los usuarios.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/us.png
	lyxscale 40
	scale 16

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Distribución de teclado estadounidense
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/la.png
	lyxscale 30
	scale 12

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Distribución de teclado latinoamericana
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Representación de la información
\end_layout

\begin_layout Section
Unidades de información
\end_layout

\begin_layout Standard
Las unidades de información son medidas utilizadas en informática para cuantificar la cantidad de datos o información que se pueden almacenar o procesar.
 Estas unidades se basan en el sistema binario,
 ya que las computadoras trabajan con 0s y 1s.
\end_layout

\begin_layout Standard
El bit (b) es la unidad más pequeña de información en un sistema digital.
 Representa un estado binario:
 0 o 1.
 Un byte (B) está compuesto por 8 bits y es la únidad básica de información.
\end_layout

\begin_layout Standard
Además de las únidades báscias,
 también son de uso frecuente las unidades mayores,
 que representan cantidades más grandes de información.
 Cada una es una potencia de 2 (en el sistema binario) o de 10 (en el sistema decimal).
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nombre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Símbolo
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Equivalencia
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kilobyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
kB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{3}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.000$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Megabyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{6}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.000.000$
\end_inset

 bytes (
\begin_inset Formula $1.000$
\end_inset

 kB)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gigabyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{9}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.000.000.000$
\end_inset

 bytes (
\begin_inset Formula $1.000$
\end_inset

 MB)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Terabyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{12}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.000$
\end_inset

 GB
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Petabyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{15}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.000$
\end_inset

 TB
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Múltiplos de bytes en decimal
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nombre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Símbolo
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Equivalencia
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kibibyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
KiB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2^{10}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.024$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mebibyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MiB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2^{20}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.048.576$
\end_inset

 bytes (
\begin_inset Formula $1.024$
\end_inset

 kB)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gibibyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GiB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2^{30}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.073.741.824$
\end_inset

 bytes (
\begin_inset Formula $1.024$
\end_inset

 MB)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tebibyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TiB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2^{40}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.024$
\end_inset

 GB
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pebibyte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PiB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2^{50}$
\end_inset

 bytes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.024$
\end_inset

 TB
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Múltiplos de bytes en binario
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El sistema decimal se utiliza más frecuentemente en el almacenamiento comercial,
 ya que las empresas suelen usarlo para expresar capacidades más 
\begin_inset Quotes fld
\end_inset

redondas
\begin_inset Quotes frd
\end_inset

 y comprensibles.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Un disco duro anunciado como 500 GB (en sistema decimal) tendrá aproximadamente 465.66 GiB (en sistema binario).
\end_layout

\begin_layout Section
Sistemas de numeración
\end_layout

\begin_layout Standard
Los sistemas de numeración son conjuntos de reglas y símbolos utilizados para representar cantidades o números.
 Cada sistema se basa en un conjunto específico de símbolos diferentes que se usan y se agrupan para formar números mayores.
 Cada sistema tiene sus propias aplicaciones y es útil en diferentes contextos,
 como la matemática,
 la computación y la ingeniería.
\end_layout

\begin_layout Subsection*
Sistemas no posicionales
\end_layout

\begin_layout Standard
Los sistemas de numeración no posicionales son aquellos en los que el valor de cada símbolo o dígito no depende de su posición dentro del número.
 En estos sistemas,
 cada símbolo tiene un valor fijo y constante,
 y los números se representan mediante la repetición o combinación de símbolos según ciertas reglas.
\end_layout

\begin_layout Example
El sistema de numeración unario es un sistema no posicional en el que los números se representan mediante la repetición de un único símbolo o marca.
 Cada símbolo representa una unidad,
 y el valor total del número es igual al número de símbolos presentes.
 Por ejemplo el número 3 se representaría como 
\begin_inset Formula $|||$
\end_inset

 y el 7 como 
\begin_inset Formula $|||||||$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
El sistema de numeración romano es un sistema no posicional utilizado en la antigua Roma para representar números.
 Se basa en un conjunto de símbolos con valores fijos que se combinan siguiendo reglas específicas para formar números.
 Por ejemplo el número 19 se representa como 
\begin_inset Formula $XIX$
\end_inset

 y el 3999 como 
\begin_inset Formula $MMMCMXCIX$
\end_inset

.
\end_layout

\begin_layout Subsection*
Sistemas posicionales
\end_layout

\begin_layout Standard
Los sistemas de numeración posicionales son aquellos en los que el valor de un dígito depende tanto de su valor intrínseco como de la posición que ocupa dentro del número.
 En estos sistemas,
 se utiliza una base que determina cuántos símbolos se usan.
\end_layout

\begin_layout Standard
Fijada una base 
\begin_inset Quotes fld
\end_inset


\begin_inset Formula $b$
\end_inset


\begin_inset Quotes frd
\end_inset

,
 un número se expresa como una combinación de dígitos (
\begin_inset Formula $d_{i}$
\end_inset

) multiplicados por potencias de la base.
 La posición más a la derecha tiene el peso 
\begin_inset Formula $b^{0}$
\end_inset

,
 la siguiente 
\begin_inset Formula $b^{1}$
\end_inset

,
 luego 
\begin_inset Formula $b^{2}$
\end_inset

 y así sucesivamente.
\end_layout

\begin_layout Standard
La fórmula general para un número entero 
\begin_inset Formula $N$
\end_inset

 de 
\begin_inset Formula $n$
\end_inset

 dígitos es:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N=d_{n-1}\cdot b^{n-1}+d_{n-2}\cdot b^{n-2}+\cdots+d_{1}\cdot b^{1}+d_{0}\cdot b^{0}
\]

\end_inset


\end_layout

\begin_layout Standard
Para números con parte decimal,
 los pesos de las posiciones a la derecha del punto decimal son potencias negativas de la base,
 es decir:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N=d_{n-1}\cdot b^{n-1}+d_{n-2}\cdot b^{n-2}+\cdots+d_{1}\cdot b^{1}+d_{0}\cdot b^{0}+d_{-1}\cdot b^{-1}+d_{-2}\cdot b^{-2}+\cdots
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Cuando expresemos un número en una base que no sea 10,
 lo escribiremos entre paréntesis indicando la base como subindice.
 Así,
 el número 
\begin_inset Formula $\left(101\right)_{2}$
\end_inset

 no representa al número 101 en base 10,
 sino en base 2.
\end_layout

\end_inset


\end_layout

\begin_layout Example
El sistema decimal tiene base 10 (usa los dígitos 0 a 9).
 El número 
\begin_inset Formula $345,67$
\end_inset

 se descompone como:
 
\begin_inset Formula $3\cdot10^{2}+4\cdot10^{1}+5\cdot10^{0}+6\cdot10^{-1}+7\cdot10^{-2}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
El sistema binario tiene como base 2 (usa los dígitos 0 y 1).
 El número 
\begin_inset Formula $\left(1011,01\right)_{2}$
\end_inset

 se descompone como:
\end_layout

\begin_layout Example
\begin_inset Formula 
\[
\left(1011,01\right)_{2}=1\cdot2^{3}+0\cdot2^{2}+1\cdot2^{1}+1\cdot2^{0}+0\cdot2^{-1}+1\cdot2^{-2}=
\]

\end_inset


\end_layout

\begin_layout Example
\begin_inset Formula 
\[
=8+0+2+1+0+0,25=11,25
\]

\end_inset


\end_layout

\begin_layout Section
Codificación de caracteres
\end_layout

\begin_layout Standard
Las codificaciones de caracteres son sistemas que asignan un valor numérico (código) a cada carácter en un conjunto de caracteres,
 permitiendo que los textos sean representados,
 almacenados y transmitidos en forma digital.
\end_layout

\begin_layout Standard
Hay algunos símbolos en un sistema de codificación de caracteres que no tienen una representación visual directa en pantalla o en papel,
 pero que desempeñan funciones específicas dentro de un texto o sistema.
 Estos caracteres se usan para controlar el formato,
 la estructura o el flujo de los datos,
 en lugar de ser representados como texto legible.
\end_layout

\begin_layout Subsection*
ASCII
\end_layout

\begin_layout Standard
El código ASCII (American Standard Code for Information Interchange):
 fue una de las primeras codificaciones y se usa para representar caracteres básicos del inglés.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
alignment center
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="18" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Decimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Caracter Nulo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comienzo de Cabecera
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comienzo del texto
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fin del texto
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fin de la transmisión
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Acuse de recibo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Timbre
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tabulación
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nueva Linea (Line Feed)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Retorno de carro
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Caracteres ASCII no imprimibles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Conceptos de programación
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás haya que definir 
\begin_inset Quotes fld
\end_inset

Hardware
\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset

Software
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
La programación es el proceso de diseñar,
 escribir,
 probar y mantener el código informático.
 En términos más simples,
 la programación es la forma en que los desarrolladores crean software,
 aplicaciones y sistemas.
\end_layout

\begin_layout Standard
Este proceso implica varios pasos,
 que incluyen la definición del problema a resolver,
 la identificación de los requisitos y especificaciones necesarias para crear la solución,
 la escritura del código en un lenguaje de programación,
 la realización de pruebas para asegurars el correcto funcionamiento del software y la documentación del código para que otros desarrolladores puedan entenderlo y trabajar en él.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/flujo.png
	lyxscale 30
	scale 13

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diagrama del flujo de un programa
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Lenguaje de programación
\end_layout

\begin_layout Standard
Un lenguaje de programación es un conjunto de reglas,
 símbolos y palabras clave que se utilizan para comunicar instrucciones a una computadora.
 Estos lenguajes permiten a los programadores crear software,
 aplicaciones y sistemas,
 al proporcionar un medio para escribir código en un formato que la máquina pueda entender y ejecutar.
\end_layout

\begin_layout Standard
Los lenguajes de programación se utilizan para describir las acciones que una computadora debe realizar,
 como efectuar cálculos matemáticos,
 interactuar con periféricos,
 almacenar y recuperar datos,
 y responder a las entradas del usuario.
 Pueden variar en complejidad y enfoque,
 y algunos se centran en tareas específicas,
 mientras que otros son más generales y versátiles.
\end_layout

\begin_layout Standard
En esencia,
 un lenguaje de programación es una herramienta para crear software,
 permitiendo transformar ideas en código ejecutable.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En esta materia aprenderemos el lenguaje de programación de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Bash"
literal "true"

\end_inset


\family typewriter
 bash
\family default

\begin_inset Quotes frd
\end_inset

.
 A lo largo de la carrera también aprenderán el lenguaje 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Python"
literal "true"

\end_inset


\family typewriter
 python
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Niveles de lenguajes
\end_layout

\begin_layout Standard
Los lenguajes de programación se pueden clasificar en tres niveles:
 alto,
 bajo y binario.
\end_layout

\begin_layout Description
Alto Estos lenguajes son más cercanos al lenguaje natural humano y se utilizan para escribir programas complejos de manera más fácil y rápida,
 abstrayéndose de muchos detalles.
 Ejemplos de lenguajes de programación de alto nivel incluyen Python,
 Java,
 C++,
 Ruby,
 PHP,
 entre otros.
 Estos lenguajes tienen una sintaxis más amigable para el programador y se encargan de muchos de los detalles de bajo nivel,
 como la administración de memoria y el manejo de errores.
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hola mundo!
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Bajo Estos lenguajes con cercanos al lenguaje de la máquina y se utilizan para escribir programas que interactúan directamente con el hardware de la computadora.
 
\end_layout

\begin_deeper
\begin_layout Standard
Ejemplos de lenguajes de programación de bajo nivel incluyen el lenguaje ensamblador y el lenguaje C.
 Estos lenguajes requieren que el programador tenga un conocimiento más detallado del hardware y de la forma en que se maneja la memoria.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=make,fontsize={\small}"
inline false
status open

\begin_layout Plain Layout

.global _start              # gcc -nostdlib hola.s
\end_layout

\begin_layout Plain Layout

.text
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

mensaje:
 .ascii  "Hola mundo!
\backslash
n"
\end_layout

\begin_layout Plain Layout

_start:
\end_layout

\begin_layout Plain Layout

    mov $1,
 %rax            # La llamada a sistema 1 es write
\end_layout

\begin_layout Plain Layout

    mov $1,
 %rdi            # El descriptor 1 es la salida estándar
\end_layout

\begin_layout Plain Layout

    lea mensaje(%rip),
 %rsi # Direccion de memoria del mensaje
\end_layout

\begin_layout Plain Layout

    mov $12,
 %rdx           # Cantidad de bytes
\end_layout

\begin_layout Plain Layout

    syscall                 # write(1,
 mensaje,
 12)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    mov $60,
 %rax           # La llamada a sistema 60 es exit
\end_layout

\begin_layout Plain Layout

    mov $0,
 %rdi            # Queremos devolver el numero 0
\end_layout

\begin_layout Plain Layout

    syscall                 # exit(0)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
binario El lenguaje binario es el lenguaje de máquina utilizado por las computadoras para ejecutar programas.
 Este lenguaje está compuesto de ceros y unos,
 que representan instrucciones que el procesador puede entender y ejecutar directamente.
 Es muy difícil y tedioso para los programadores escribir directamente en lenguaje binario,
 por lo que se utilizan los lenguajes de programación de nivel alto y bajo para crear programas que luego se traducen a lenguaje binario.
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=S,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

  401000:
    48 6f 6c 6c          # H o l a
\end_layout

\begin_layout Plain Layout

  401004:
    20 6d 75 6e 64 6f    #   m u n d o
\end_layout

\begin_layout Plain Layout

  40100a:
    21 0a                # !
 
\backslash
n
\end_layout

\begin_layout Plain Layout

  40100c:
    48 c7 c0 01 00 00 00 # mov $1,
 %rax
\end_layout

\begin_layout Plain Layout

  401013:
    48 c7 c7 01 00 00 00 # mov $1,
 %rdi
\end_layout

\begin_layout Plain Layout

  40101a:
    48 c7 c6 00 10 40 00 # mov $mensaje,
 %rsi
\end_layout

\begin_layout Plain Layout

  401021:
    48 c7 c2 0c 00 00 00 # mov $12,
 %rdx
\end_layout

\begin_layout Plain Layout

  401028:
    0f 05                # syscall
\end_layout

\begin_layout Plain Layout

  40102a:
    48 c7 c0 3c 00 00 00 # mov $60,
 %rax
\end_layout

\begin_layout Plain Layout

  401031:
    48 c7 c7 00 00 00 00 # mov $0,
 %rdi
\end_layout

\begin_layout Plain Layout

  401038:
    0f 05                # syscall
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Compiladores e intérpretes
\end_layout

\begin_layout Standard
Un 
\begin_inset CommandInset href
LatexCommand href
name "\\faYoutubePlay"
target "https://youtu.be/fQpmyan9dOs?t=180"
literal "true"

\end_inset

 intérprete y un compilador son dos tipos de programas que se utilizan para convertir el código fuente escrito por un programador en instrucciones ejecutables por una computadora.
 
\end_layout

\begin_layout Description
Interprete Un intérprete es un programa que lee el código fuente de un programa y lo traduce en instrucciones ejecutables en tiempo real.
 El intérprete lee una línea de código fuente,
 la traduce a lenguaje de máquina y la ejecuta antes de pasar a la siguiente línea.
 Debido a que el intérprete realiza la traducción y la ejecución de cada línea a medida que se lee el código,
 puede ser más lento que un compilador.
 Sin embargo,
 el intérprete tiene la ventaja de que el programador puede ejecutar el código directamente sin necesidad de compilarlo previamente.
\end_layout

\begin_layout Description
Compilador Un compilador,
 por otro lado,
 es un programa que traduce todo el código fuente a lenguaje de máquina en un solo paso,
 generando un archivo ejecutable que puede ser utilizado por la computadora sin necesidad de leer el código original nuevamente.
 El compilador lee todo el código fuente del programa y lo traduce en un archivo ejecutable que puede ser utilizado por la computadora sin necesidad de leer el código fuente original nuevamente.
 Debido a que el código fuente se traduce y compila solo una vez,
 el código compilado se ejecuta generalmente más rápido que el código interpretado.
 Sin embargo,
 el proceso de compilación puede llevar más tiempo que el proceso de interpretación.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/ejecucion.png
	lyxscale 70
	scale 41

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Tiempo de traducción y ejecución
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En los lenguajes compilados,
 los tiempos de traducción son computados por el desarrollador.
 En cambio en los lenguajes interpretados,
 son computados por el usuario final.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Otros conceptos
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Se podría hablar de programas interactivos y servicios.
\end_layout

\end_inset


\end_layout

\begin_layout Description
Código
\begin_inset space ~
\end_inset

fuente El código fuente de un programa es el conjunto de instrucciones escritas por un programador en un lenguaje de programación determinado;
 es el 
\begin_inset Quotes fld
\end_inset

texto
\begin_inset Quotes frd
\end_inset

 legible por humanos que se escribe en un archivo de código fuente y que debe ser traducido o compilado en lenguaje de máquina para que la computadora pueda entenderlo y ejecutar el programa.
\end_layout

\begin_layout Description
Código
\begin_inset space ~
\end_inset

abierto 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/opensource.png
	display false
	scale 3.5

\end_inset


\end_layout

\end_inset

El término 
\begin_inset Quotes fld
\end_inset

código abierto
\begin_inset Quotes frd
\end_inset

 se refiere a un tipo de software en el cual el código fuente está disponible públicamente y puede ser modificado por cualquier persona.
 En el modelo de código abierto,
 los desarrolladores de software pueden trabajar para mejorar y expandir el software existente.
\end_layout

\begin_layout Description
Software
\begin_inset space ~
\end_inset

libre 
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/fsf.png
	display false
	scale 5.5

\end_inset


\end_layout

\end_inset

El software libre es aquel que se distribuye con una 
\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.m.wikipedia.org/wiki/Licencia_de_software_libre"
literal "true"

\end_inset

 licencia que permite a los usuarios tener acceso al código fuente del programa y redistribuir versiones modificadas del mismo sin tener que pagar regalías o cargos adicionales.
 En general,
 dicha licencia establece los términos y condiciones bajo los cuales se puede usar,
 modificar y distribuir el software.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/libre.png
	lyxscale 75
	scale 29

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Mapa conceptual del software libre
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El software libre suele estar disponible gratuitamente,
 pero no es obligatorio que sea así;
 por lo tanto no hay que asociar software «libre» a «gratuito» ya que,
 conservando su carácter de libre,
 puede ser distribuido comercialmente.
\end_layout

\end_inset


\end_layout

\begin_layout Description
IDE Un IDE (Integrated Development Environment) es un conjunto de herramientas y características que se combinan en una única aplicación para hacer más fácil y eficiente el proceso de desarrollo de software.
\end_layout

\begin_deeper
\begin_layout Standard
Típicamente incluye un editor de código que proporciona herramientas de resaltado de sintaxis y autocompletado,
 para facilitar la escritura de código.
 Además,
 un IDE suele incluir un depurador que ayuda a identificar y corregir errores en el código.
\end_layout

\begin_layout Standard
También puede tener herramientas de compilación y construcción,
 que permiten compilar y empaquetar el código en un archivo ejecutable o en otro formato adecuado para su distribución.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/visualstudio.png
	lyxscale 30
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Visual Studio Code
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Chapter
Sistemas Operativos
\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
Un sistema operativo es un conjunto de programas y herramientas que controlan y coordinan las actividades de una computadora o dispositivo electrónico,
 y permiten a los usuarios interactuar con el hardware y el software de manera sencilla y eficiente.
 Está compuesto por un núcleo (o 
\emph on
kernel
\emph default
) que tiene control total sobre el hardware en el que corre,
 y una serie de programas utilitarios que se comunican con el.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/kernel.png
	lyxscale 30
	scale 24

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Comunicación entre aplicaciones,
 núcleo y hardware
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las funcionalidades principales de un sistema operativo incluyen:
\end_layout

\begin_layout Description
Abstracción
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

hardware El sistema operativo oculta los detalles específicos del hardware de la computadora a las aplicaciones y los usuarios.
 Esto permite permite a las aplicaciones interactuar con el hardware de manera consistente y simplificada,
 sin tener que preocuparse por los detalles internos del hardware subyacente.
\end_layout

\begin_layout Description
Gestión
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

hardware El sistema operativo es responsable de gestionar el hardware,
 como el procesador,
 la memoria,
 el disco duro,
 la tarjeta gráfica,
 entre otros.
 Controla cómo se utilizan estos recursos y asigna la cantidad adecuada de memoria y procesador a cada aplicación.
\end_layout

\begin_layout Description
Interfaz
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

usuario El sistema operativo proporciona una interfaz de usuario que permite a los usuarios interactuar con la computadora y ejecutar aplicaciones.
\end_layout

\begin_layout Description
Gestión
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

archivos El sistema operativo se encarga de gestionar los archivos y carpetas,
 permitiendo a los usuarios crearlos,
 modificarlos,
 copiarlos y eliminarlos.
\end_layout

\begin_layout Description
Multitarea Un sistema operativo permite que varias aplicaciones se ejecuten al mismo tiempo y asigna los recursos necesarios para que funcionen correctamente,
 dando la ilusión de paralelismo.
\end_layout

\begin_layout Description
Multiusuario Un sistema operativo puede ser utilizado por varios usuarios al mismo tiempo y garantiza que cada usuario tenga sus propios archivos y configuraciones.
\end_layout

\begin_layout Section
Núcleo
\end_layout

\begin_layout Standard
El 
\emph on
kernel
\emph default
 (o núcleo) de un sistema operativo es la parte central y más fundamental del mismo.
 Es responsable de controlar el acceso a los recursos del hardware,
 gestionar los procesos,
 la memoria y la entrada/salida.
 Además proporciona una interfaz para que las aplicaciones interactúen con el hardware del sistema.
\end_layout

\begin_layout Standard
El núcleo se ejecuta en modo privilegiado,
 lo que significa que tiene acceso directo al hardware y puede ejecutar instrucciones que otros programas no pueden.
\end_layout

\begin_layout Standard
Para casi cualquier tarea las aplicaciones de usuario necesitan pedirle permiso al kernel,
 mediante una instrucción denominada 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Llamada_al_sistema"
literal "true"

\end_inset


\emph on
 llamada a sistema
\emph default

\begin_inset Quotes frd
\end_inset

.
 Cuando ocurre una llamada a sistema,
 el CPU detiene la ejecución del programa y comienza a ejecutar la funcionalidad del núcleo requerida,
 luego de la cual se reanuda el flujo original del programa.
\end_layout

\begin_layout Section
Proceso de arranque
\end_layout

\begin_layout Standard
Durante el arranque de una PC,
 ocurren varios pasos importantes que permiten que el sistema operativo se inicie correctamente y la computadora esté lista para su uso.
\end_layout

\begin_layout Standard
Al presionarse el botón de arranque se activa la fuente de alimentación de la computadora,
 la cual suministra la energía necesaria para que la placa madre comience a funcionar.
 A partir de aquí,
 comienza un proceso que consiste en varias etapas:
\end_layout

\begin_layout Description
POST
\begin_inset space ~
\end_inset

(Power
\begin_inset space ~
\end_inset

On
\begin_inset space ~
\end_inset

Self
\begin_inset space ~
\end_inset

Test) La placa madre realiza un autodiagnóstico para verificar que todos los componentes de hardware de la computadora estén funcionando correctamente.
 Si detecta algún problema,
 emitirá un mensaje de error y detendrá el proceso de arranque.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/post.jpg
	lyxscale 20
	scale 13

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Etapa de Autodiagnóstico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Boot
\begin_inset space ~
\end_inset

Loader A continuación la placa madre debe cargar un programa llamado 
\begin_inset Quotes fld
\end_inset


\emph on
cargador de arranque
\emph default

\begin_inset Quotes frd
\end_inset

,
 el cual tiene como objetivo principal cargar el núcleo del sistema operativo.
 En los sistemas Linux el mas utilizado es 
\begin_inset Quotes fld
\end_inset


\emph on

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\backslash
;
\end_layout

\end_inset

GRUB
\emph default

\begin_inset Quotes frd
\end_inset

;
 y 
\begin_inset Quotes fld
\end_inset


\emph on

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faWindows 
\backslash
;
\end_layout

\end_inset

bootmgr
\emph default

\begin_inset Quotes frd
\end_inset

 es el proporcionado por los sistemas modernos de Windows.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/grub.png
	lyxscale 40
	scale 24

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

GRUB
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/bootmgr.png
	lyxscale 50
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faWindows 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

bootmgr
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Description
Núcleo A continuación,
 el núcleo del sistema operativo toma el control de la computadora.
 Durante sus tareas iniciales se encargará de identificar el hardware disponible,
 cargar los controladores necesarios y montar el sistema de archivos del sistema.
 Finalmente dará comienzo al primer programa de usuario,
 a partir del cual se ejecutaran todos los demás programas.
\end_layout

\begin_layout Description
Init En los sistemas Linux,
 el programa inicial del sistema operativo se llama 
\begin_inset Quotes fld
\end_inset


\emph on
init
\emph default

\begin_inset Quotes frd
\end_inset

.
 Init se encargará de cargar los scripts de arranque del sistema,
 así como también ejecutar los servicios esenciales para el funcionamiento del mismo,
 y proveer al usuario de un entorno gráfico o de linea de comandos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En la actualidad se desarrolló 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Systemd"
literal "true"

\end_inset

 
\emph on
systemd
\emph default

\begin_inset Quotes frd
\end_inset

 para reemplazar el sistema de inicio (
\family typewriter
init
\family default
) heredado de los sistemas operativos estilo UNIX System V y Berkeley Software Distribution (BSD).
\end_layout

\end_inset


\end_layout

\begin_layout Section
Interfaz de usuario
\end_layout

\begin_layout Standard
En términos generales,
 la interfaz de usuario (UI) es el punto de interacción y comunicación entre un ser humano y un programa.
 Una buena interfaz de usuario facilita la interacción de forma intuitiva,
 eficiente y satisfactoria,
 permitiendo al usuario realizar sus tareas y alcanzar sus objetivos de manera efectiva.
\end_layout

\begin_layout Standard
Existen principalmente tres tipos de interfaz:
\end_layout

\begin_layout Description
GUI Una interfaz gráfica de usuario (
\begin_inset Quotes fld
\end_inset

GUI
\begin_inset Quotes frd
\end_inset

 por sus siglas en inglés 
\begin_inset Quotes fld
\end_inset


\emph on
Graphical User Interface
\emph default

\begin_inset Quotes frd
\end_inset

),
 es una forma de interactuar con un programa o sistema operativo mediante el uso de elementos gráficos,
 como ventanas,
 iconos,
 botones y menús.
\end_layout

\begin_deeper
\begin_layout Standard
Están diseñadas para ser fáciles de aprender y usar,
 incluso para usuarios sin experiencia en informática.
 Esto permite a los usuarios realizar acciones de forma intuitiva,
 haciendo clic,
 arrastrando y soltando objetos en la pantalla.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante notar que las interfaces gráficas en Linux son un programa de usuario opcional.
\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/kde.png
	lyxscale 35
	scale 21

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

KDE Plasma
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/fluent.png
	lyxscale 50
	scale 37

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faWindows 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Fluent Design
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Description
CLI Una 
\begin_inset Quotes fld
\end_inset

CLI
\begin_inset Quotes frd
\end_inset

 (Command-Line Interface - Interfaz de Línea de Comandos) es una interfaz basada en texto,
 donde el usuario interactúa con el sistema operativo escribiendo comandos específicos en una línea de comandos.
 
\end_layout

\begin_deeper
\begin_layout Standard
Requieren un mayor conocimiento técnico y la memorización de comandos,
 pero consumen menos recursos del sistema en comparación con las GUIs.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En esta materia estudiaremos principalmente una CLI.
\end_layout

\end_inset


\end_layout

\begin_layout Description
TUI TUI (Text-based User Interface - Interfaz de Usuario Basada en Texto):
 Es una interfaz híbrida que combina elementos de las CLIs y las GUIs.
 Se ejecuta en un entorno de texto,
 pero utiliza caracteres y colores para crear una apariencia más visual y estructurada,
 con elementos como menús,
 cuadros de diálogo y ventanas de texto.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/htop.jpg
	lyxscale 60
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset


\family typewriter
htop
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Terminal
\end_layout

\begin_layout Standard
A menudo se utilizan términos como 
\begin_inset Quotes fld
\end_inset

terminal
\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset

consola virtual
\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset

emulador de terminal
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

intérprete de línea de comandos
\begin_inset Quotes frd
\end_inset

 de forma indistinta,
 lo que puede llevar a cierta confusión.
 A continuación,
 se explican las diferencias entre estos términos:
\end_layout

\begin_layout Description
Terminal Se refiere a el o los dispositivos físicos que se utilizan para interactuar con un ordenador mediante la entrada y salida de texto.
 En la actualidad está compuesta principalmente por el teclado y el monitor.
\end_layout

\begin_layout Description
Consola
\begin_inset space ~
\end_inset

virtual Es una aplicación implementada dentro del núcleo que provee acceso al sistema simulando una terminal de teletipo.
 En los sistemas tipo Unix 
\emph on
con entorno gráfico
\emph default
 se puede acceder a ellas presionando 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Ctrl+Alt+F1,
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Ctrl+Alt+F2,
 etc.
 En los sistemas 
\emph on
sin entorno gráfico
\emph default
 la combinación de teclas es 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Alt+F1,
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Alt+F2,
 etc.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Aunque el entorno gráfico ha ganado popularidad frente a las interfaces de texto,
 las consolas virtuales siguen siendo utilizadas por varias razones como el uso eficiente de recursos,
 acceso remoto,
 tareas de mantenimiento y recuperación.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/vconsole.png
	scale 44

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Consola virtual en Ubuntu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Emulador
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

terminal Es un programa de usuario que permite interactuar con un sistema operativo a través de una ventana en un entorno gráfico.
 Los emuladores de terminal son comúnmente utilizados para acceder a sistemas remotos o para ejecutar aplicaciones de línea de comandos en sistemas operativos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En un emulador de terminal las combinaciones de teclas habituales para copiar y pegar no funcionan.
 Debemos usar en su lugar 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Ctrl+Shift+C (para copiar) y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 Ctrl+Shift+V (para pegar).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/qterminal.png
	lyxscale 50
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Qterminal en Lubuntu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Shell También llamado 
\begin_inset Quotes fld
\end_inset

interprete de linea de comandos
\begin_inset Quotes frd
\end_inset

,
 es un programa que permite a un usuario interactuar con el sistema operativo mediante la ejecución de comandos a través de una interfaz de línea de comandos.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Alguno de los interpretes de linea de comandos mas populares en los sistemas Linux son:
 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Bourne_Shell"
literal "true"

\end_inset

 
\family typewriter
sh
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.gnu.org/software/bash/"
literal "true"

\end_inset

 
\family typewriter
bash
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.zsh.org/"
literal "true"

\end_inset

 
\family typewriter
zsh
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://fishshell.com/"
literal "true"

\end_inset

 
\family typewriter
fish
\family default

\begin_inset Quotes frd
\end_inset

.
 En los sistemas operativos de Miscrosoft se destacan:
 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/COMMAND.COM"
literal "true"

\end_inset

 
\family typewriter
COMMAND
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/S%C3%ADmbolo_del_sistema_de_Windows"
literal "true"

\end_inset

 
\family typewriter
cmd
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://learn.microsoft.com/en-us/powershell/"
literal "true"

\end_inset

 
\family typewriter
PowerShell
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Procesos
\end_layout

\begin_layout Standard
Un proceso es una instancia de un programa en ejecución.
 Durante su ciclo de vida,
 atraviesa diferentes etapas las cuales incluyen:
\end_layout

\begin_layout Description
Creación En esta etapa,
 el sistema operativo crea un nuevo proceso cuando se inicia un programa o se solicita mediante una llamada al sistema.
 Durante la creación,
 se asignan recursos como espacio de memoria,
 identificadores de proceso y otros atributos necesarios para la ejecución.
\end_layout

\begin_layout Description
Listo En este estado,
 el proceso está cargado en memoria a la espera de ser seleccionado por el planificador del sistema operativo para su ejecución.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Description
Ejecución Cuando un proceso es seleccionado por el planificador del sistema,
 se mueve al estado de 
\begin_inset Quotes fld
\end_inset

ejecución
\begin_inset Quotes frd
\end_inset

.
 En esta etapa,
 el procesador ejecuta las instrucciones del programa y realiza las tareas definidas por el proceso.
 El proceso continúa en este estado hasta que le toque ejecutar a otro programa o se bloquee esperando alguna operación de entrada/salida.
\end_layout

\begin_layout Description
Bloqueado Un proceso puede entrar en el estado 
\begin_inset Quotes fld
\end_inset

bloqueado
\begin_inset Quotes frd
\end_inset

 si necesita esperar por alguna operación de entrada/salida,
 como leer datos de un archivo o esperar una respuesta de red.
 Cuando esto ocurre,
 el proceso se suspende temporalmente y se libera el uso del procesador.
\end_layout

\begin_layout Description
Finalización Cuando un proceso ha terminado de ejecutar todas sus instrucciones,
 o ha sido terminado de manera forzada por el sistema operativo,
 entra en el estado de 
\begin_inset Quotes fld
\end_inset

finalización
\begin_inset Quotes frd
\end_inset

,
 liberando los recursos asignados realizando la limpieza necesaria.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/etapas.png
	scale 64

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Etapas de un proceso
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cabe destacar que el sistema operativo puede realizar transiciones entre los diferentes estados del proceso según las decisiones del planificador y los eventos que ocurren durante la ejecución.
\end_layout

\begin_layout Section
Distribuciones
\end_layout

\begin_layout Standard
Las distribuciones de Linux son sistemas operativos basados en el kernel de Linux,
 que están compuestos por una combinación de software libre y de código abierto,
 como aplicaciones,
 controladores,
 herramientas de gestión de paquetes,
 etc.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Existen muchas distribuciones de Linux diferentes,
 como 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.debian.org/index.es.html"
literal "true"

\end_inset

 Debian,
 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://ubuntu.com/"
literal "true"

\end_inset

 Ubuntu,
 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.redhat.com/es"
literal "true"

\end_inset

 Red Hat,
 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://archlinux.org/"
literal "true"

\end_inset

 Arch Linux,
 entre otras.
 Cada distribución tiene sus propias características,
 objetivos y filosofía,
 y están diseñadas para satisfacer las necesidades de diferentes usuarios y aplicaciones.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El concepto de distribución de Linux se hereda de los sistemas operativos estilo UNIX donde las universidades comenzaron a desarrollar sus propias versiones,
 como System V y BSD.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las distribuciones de Linux existen porque el software de código abierto permite a los usuarios y desarrolladores acceder,
 modificar y distribuir el código fuente del software.
 Esto ha permitido que muchas personas y comunidades puedan desarrollar y distribuir sus propias versiones personalizadas de Linux.
 Además,
 al ser un sistema operativo altamente personalizable y adaptable,
 cada distribución puede estar diseñada para satisfacer las necesidades específicas de diferentes usuarios,
 como por ejemplo para usuarios de servidores,
 programadores,
 usuarios de escritorio,
 entre otros.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/distributions.png
	lyxscale 30
	scale 19

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\backslash
;
\end_layout

\end_inset

Linea de tiempo de distribuciones de Linux
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Proceso de apagado
\end_layout

\begin_layout Standard
Antes de finalizar la ejecución del sistema operativo,
 se inicia un proceso que cierra todos los programas y servicios que se están ejecutando.
 Luego,
 se guardan todos los datos pendientes y se asegura que todos los dispositivos de almacenamiento estén en un estado seguro antes de apagar la alimentación.
 Finalmente,
 se envía una señal al hardware para que se apague por completo y se desconecte la alimentación en caso de ser necesario.
 
\end_layout

\begin_layout Standard
Hay varias opciones disponibles para 
\begin_inset Quotes fld
\end_inset

apagar
\begin_inset Quotes frd
\end_inset

 una computadora,
 cada una con diferentes efectos.
\end_layout

\begin_layout Description
Apagado Cuando se selecciona la opción de 
\begin_inset Quotes fld
\end_inset

apagar
\begin_inset Quotes frd
\end_inset

,
 la computadora cierra todos los programas y procesos en ejecución y se apaga completamente.
 La próxima vez que se encienda la computadora,
 se iniciará el proceso de arranque completo.
\end_layout

\begin_layout Description
Reinicio Al seleccionar la opción 
\begin_inset Quotes fld
\end_inset

reiniciar
\begin_inset Quotes frd
\end_inset

,
 la computadora cierra todos los programas y procesos en ejecución,
 se apaga brevemente y luego se reinicia automáticamente.
 Esta opción es útil para solucionar problemas de hardware o software y para actualizar el sistema operativo.
\end_layout

\begin_layout Description
Hibernación La opción de 
\begin_inset Quotes fld
\end_inset

hibernar
\begin_inset Quotes frd
\end_inset

 guarda todos los datos y configuraciones del sistema en el disco duro y luego apaga la computadora.
 Cuando se vuelve a encender la computadora,
 el sistema restaura automáticamente los datos y la configuración de la sesión anterior.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La información almacenada en la memoria RAM se guarda en un archivo o en una partición exclusiva dedicada a tal propósito.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Suspensión La opción 
\begin_inset Quotes fld
\end_inset

suspender
\begin_inset Quotes frd
\end_inset

 pone la computadora en un estado de bajo consumo de energía,
 dejando alimentada solamente la memoria RAM.
 De esta manera los programas y procesos en ejecución se conservan y la computadora puede volver a su estado anterior cuando se reanude la actividad.
 Esta opción es útil para ahorrar energía y reanudar rápidamente el trabajo en curso.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si se llega a producir un corte en el suministro eléctrico,
 el estado de la computadora se pierde pues la RAM será incapaz de retener su información.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Chapter
Sistema de archivos
\end_layout

\begin_layout Standard
Aunque la 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Memoria_principal"
literal "true"

\end_inset

 memoria principal
\begin_inset Quotes frd
\end_inset

 es esencial para el funcionamiento de una computadora,
 esta es de acceso volátil,
 lo que significa que se borra cuando se apaga la computadora.
 Por lo tanto,
 la memoria RAM solo puede almacenar temporalmente los programas y datos que están en uso en ese momento.
\end_layout

\begin_layout Standard
En este capítulo explicaremos como funcionan las llamadas 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Memoria_secundaria"
literal "true"

\end_inset

 memorias secundarias
\begin_inset Quotes frd
\end_inset

 de la computadora,
 como el disco rígido o una unidad de estado solido.
\end_layout

\begin_layout Section
Acceso aleatorio y secuencial
\end_layout

\begin_layout Standard
Un dispositivo de acceso aleatorio,
 como una unidad de estado sólido o USB,
 permite el acceso directo a cualquier ubicación en el medio de almacenamiento.
 Esto significa que se puede acceder a cualquier archivo o dato almacenado en el dispositivo sin tener que pasar por los datos que están almacenados 
\begin_inset Quotes fld
\end_inset

antes
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

después
\begin_inset Quotes frd
\end_inset

 en el dispositivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Puesto que los dispositivos de acceso aleatorio son muy rápidos,
 son ideales para almacenar programas y mejorar el rendimiento general de la computadora.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por otro lado,
 un dispositivo de acceso secuencial,
 como un disco rígido o DVD,
 requiere que los datos se lean en secuencia,
 desde el principio del medio de almacenamiento hasta el final.
 Esto significa que para acceder a un archivo o dato específico,
 el dispositivo debe leer los datos almacenados antes de llegar al archivo o dato deseado.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="65text%">
<column alignment="center" valignment="middle" width="25text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/chr.png
	lyxscale 50
	scale 22
	BoundingBox 150bp 50bp 900bp 1000bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Description
A Pista
\end_layout

\begin_layout Description
B Sector geométrico
\end_layout

\begin_layout Description
C Sector de pista
\end_layout

\begin_layout Description
D Grupo
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Estructura de un disco
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las arquitecturas de computadora modernas suelen utilizar además de una memoria de acceso directo,
 otra de acceso secuencial.
 Esto es puesto que pese a son mas lentas,
 son mas baratas y de mayor capacidad,
 lo que los hace ideales como medios de respaldo.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
Un sistema de archivos es una estructura lógica y organizada de datos que se utiliza para almacenar y recuperar información en un medio de almacenamiento.
 Sin un sistema de archivos,
 los datos colocados en un medio de almacenamiento serían un gran cuerpo de datos sin manera de saber dónde termina un dato y comienza el siguiente.
\end_layout

\begin_layout Standard
Sus principales funciones son:
\end_layout

\begin_layout Description
Gestión
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

espacio El sistema de archivos se encarga de gestionar la manera en que los archivos son almacenados en un dispositivo de almacenamiento de datos.
 Esto incluye entre otras cosas,
 la asignación de espacio en disco para cada archivo,
 la administración del espacio libre y la organización de los datos de manera eficiente.
\end_layout

\begin_layout Description
Organización El sistema de archivos organiza los archivos en una jerarquía de directorios y subdirectorios,
 lo que facilita su búsqueda y recuperación.
\end_layout

\begin_layout Description
Permisos El sistema de archivos puede incluir medidas de seguridad para proteger los datos almacenados en el medio de almacenamiento,
 como permisos de acceso,
 y encriptación de datos.
\end_layout

\begin_layout Description
Metadatos Un sistema de archivos almacena una variedad de metadatos que proporcionan información sobre los archivos y directorios que se almacenan en el dispositivo de almacenamiento.
 Algunos de los metadatos más comunes que se almacenan en un sistema de archivos son el nombre del archivo,
 su tamaño,
 fecha de creación y modificación,
 etc.
\end_layout

\begin_layout Description
Integridad Un sistema de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Journaling"
literal "true"

\end_inset

 
\emph on
journaling
\emph default

\begin_inset Quotes frd
\end_inset

 (o diario) es una técnica utilizada para proteger la integridad de los datos.
 Este sistema funciona registrando todos los cambios que se realizan en el sistema de archivos en un registro o diario antes de que los cambios sean efectuados en el sistema de archivos.
 En caso de un fallo del sistema o un corte de energía,
 el sistema de journaling puede utilizar la información en el registro para volver al estado anterior del sistema de archivos,
 evitando así la pérdida de datos o la corrupción del sistema de archivos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En los sistemas Linux,
 el sistema de archivos mas utilizados es 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Ext4"
literal "true"

\end_inset

 
\emph on
ext4
\emph default

\begin_inset Quotes frd
\end_inset

,
 mientras que en los sistemas Windows se utiliza 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/NTFS"
literal "true"

\end_inset

 
\emph on
NTFS
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Particiones
\end_layout

\begin_layout Standard
Una partición es una sección lógica de un disco duro u otro dispositivo de almacenamiento que se trata como si fuera un disco separado.
 Una partición se crea mediante la división del espacio de almacenamiento disponible en el dispositivo en secciones separadas.
 Cada partición debe tener su propio sistema de archivos y puede contener archivos y datos independientes de las demás particiones.
\end_layout

\begin_layout Standard
Las particiones se utilizan para varios fines,
 como separar el sistema operativo y los archivos del usuario,
 o para crear diferentes áreas de almacenamiento para diferentes propósitos,
 como la música,
 los documentos y las imágenes.
 También se pueden utilizar para instalar varios sistemas operativos en una sola unidad de disco duro.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/particiones.png
	lyxscale 40
	scale 26

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Particionado de un dispositivo de almacenamiento
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Para observar los discos y particiones de un sistema podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

lsblk
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Estructura de directorios
\end_layout

\begin_layout Standard
Los sistemas operativos utilizan archivos y directorios para organizar y almacenar información en un dispositivo de almacenamiento.
 Los archivos contienen los datos que los usuarios crean y manipulan,
 mientras que los directorios proporcionan una forma de organizar y acceder a los archivos de manera lógica y fácil de entender.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los términos carpeta y directorio tienen el mismo significado.
 Estos son en realidad,
 un tipo de archivo especial.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La jerarquía de directorios en un sistema de archivos se llama árbol de directorios.
 El nivel superior del árbol de directorios se llama directorio raíz,
 que contiene todos los demás directorios y archivos en el sistema de archivos.
 A medida que se desciende por el árbol de directorios,
 los nombres de los directorios y los archivos se combinan para formar rutas de acceso a los archivos y directorios individuales.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En los sistemas Linux existe un solo directorio raíz llamado 
\begin_inset Quotes fld
\end_inset

/
\begin_inset Quotes frd
\end_inset

,
 en donde luego se 
\begin_inset Quotes fld
\end_inset

montan
\begin_inset Quotes frd
\end_inset

 el resto de los dispositivos.
 En los sistemas Windows cada partición tiene su propio directorio raíz llamado 
\begin_inset Quotes fld
\end_inset


\backslash

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para navegar a través de los directorios del sistema en un entorno gráfico,
 utilizamos un programa denominado 
\begin_inset Quotes fld
\end_inset

administrador de archivos
\begin_inset Quotes frd
\end_inset

.
 En dicho programa podemos recorrer la estructura del sistema de archivos mediante una serie de clicks de mouse en iconos,
 botones y menúes.
\end_layout

\begin_layout Standard
En esta sección aprenderemos a llevar a cabo esas mismas acciones,
 pero desde una ventana de terminal.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/pcmanfm.png
	lyxscale 40
	scale 39

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

PCManFM
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/explorador.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faWindows 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Explorador de archivos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
En la barra de dirección del administrador de archivos,
 podemos observar en que posición de la estructura de directorios nos encontramos en este momento.
 Esa misma información podemos obtenerla en una terminal con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

pwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset

 recibe su nombre de las siglas en ingles 
\begin_inset Quotes fld
\end_inset


\emph on
Print Working Directory
\emph default

\begin_inset Quotes frd
\end_inset

 (mostrar directorio de trabajo).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El administrador de archivos nos muestra también en su ventana el contenido del directorio de trabajo actual.
 Para lograr lo mismo desde la consola escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para cambiar la carpeta en la que estamos desde el entorno gráfico simplemente hacemos doble click en la carpeta que pretendemos.
 Para cambiar de carpeta desde una terminal disponemos del siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cd carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el entorno gráfico para acceder al directorio padre del directorio actual hacemos click en la flecha hacia arriba.
 El comando para lograr lo mismo es:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cd ..
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si queremos observar el árbol de directorios desde la posición actual,
 podemos escribir lo siguiente en la consola:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

tree
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Existen dos tipos de rutas que se utilizan para referirse a la ubicación de un archivo o directorio en un sistema de archivos:
 rutas absolutas y rutas relativas.
\end_layout

\begin_layout Description
Ruta
\begin_inset space ~
\end_inset

absoluta Una ruta absoluta es una ruta que especifica la ubicación completa de un archivo o directorio,
 desde el directorio raíz hasta el archivo o directorio en cuestión.
 En otras palabras,
 una ruta absoluta es la ruta completa que describe la ubicación exacta de un archivo o directorio,
 independientemente de la ubicación del usuario o del directorio de trabajo actual.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es fácil reconocer a una ruta absoluta,
 pues siempre comienza con 
\begin_inset Quotes fld
\end_inset


\family typewriter
/
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
La ruta absoluta donde se ubica el interprete de linea de comandos bash suele ser:
 
\begin_inset Quotes fld
\end_inset


\family typewriter
/usr/bin/bash
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Ruta
\begin_inset space ~
\end_inset

relativa Una ruta relativa es una ruta que describe la ubicación de un archivo o directorio en relación con el directorio de trabajo actual.
 En otras palabras,
 una ruta relativa es una ruta que se especifica desde el directorio actual hasta el archivo o directorio en cuestión.
\end_layout

\begin_deeper
\begin_layout Example
Si actualmente nos encontramos en 
\begin_inset Quotes fld
\end_inset


\family typewriter
/usr
\family default

\begin_inset Quotes frd
\end_inset

,
 la ruta relativa hacia bash es:
 
\begin_inset Quotes fld
\end_inset


\family typewriter
bin/bash
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Section
El sistema de archivos de Linux
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Hay que aclarar que Linux distingue entre mayúsculas y minúsculas y que los archivos que comienzan con punto son ocultos.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Esquema de particionado
\end_layout

\begin_layout Standard
Linux puede instalarse en una variedad de esquemas de particionado,
 pero uno de los más comunes es el esquema de particionado convencional,
 que utiliza tres particiones para el sistema:
\end_layout

\begin_layout Itemize
Una partición en donde se instala el gestor de arranque y el núcleo del sistema operativo.
\end_layout

\begin_layout Itemize
Una partición destinada a almacenar los programas de usuario y documentos.
\end_layout

\begin_layout Itemize
Una partición de intercambio,
 reservada para ser utilizada cuando la memoria RAM se agota.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los esquemas de particionado mas antiguos no instalan el cargador de arranque en una partición separada sino en el primer sector del disco.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/gparted.png
	lyxscale 30
	scale 23

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

GParted
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nomenclatura de dispositivos
\end_layout

\begin_layout Standard
En Linux,
 los discos duros y particiones se nombran usando un esquema de nomenclatura estandarizado.
 Cada dispositivo se identifica por un nombre que se genera automáticamente y que puede estar compuesto de diferentes elementos.
\end_layout

\begin_layout Standard
El nombre asignado a un dispositivo de almacenamiento consta de tres partes:
\end_layout

\begin_layout Itemize
Una sigla identificadora del tipo de dispositivo.
 En general,
 los discos rígidos,
 unidades de estado sólido y dispositivos USB empiezan con las letras 
\begin_inset Quotes fld
\end_inset


\emph on
sd
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Una letra secuencial que identifica el dispositivo en relación con otros dispositivos del mismo tipo.
 El primer dispositivo se denominará 
\begin_inset Quotes fld
\end_inset


\emph on
sda
\emph default

\begin_inset Quotes frd
\end_inset

,
 el segundo 
\begin_inset Quotes fld
\end_inset


\emph on
sdb
\emph default

\begin_inset Quotes frd
\end_inset

 y así sucesivamente.
\end_layout

\begin_layout Itemize
Un número adicional que indica la partición específica del dispositivo.
 La primera partición en el primer dispositivo será 
\begin_inset Quotes fld
\end_inset


\emph on
sda1
\emph default

\begin_inset Quotes frd
\end_inset

,
 la segunda será 
\begin_inset Quotes fld
\end_inset


\emph on
sda2
\emph default

\begin_inset Quotes frd
\end_inset

,
 y así sucesivamente.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es muy importante notar que la denominación 
\begin_inset Quotes fld
\end_inset


\family typewriter
sda
\family default

\begin_inset Quotes frd
\end_inset

 hace referencia a todo el dispositivo,
 mientras que 
\begin_inset Quotes fld
\end_inset


\family typewriter
sda1
\family default

\begin_inset Quotes frd
\end_inset

 solo hace referencia a la primer partición del primer dispositivo.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Observemos una posible salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
lsblk
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

lsblk
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
\end_layout

\begin_layout Plain Layout

sda      8:0    0    10G  0 disk
\end_layout

\begin_layout Plain Layout

+-sda1   8:1    0   100M  0 part /boot
\end_layout

\begin_layout Plain Layout

+-sda2   8:2    0   9,9G  0 part /
\end_layout

\begin_layout Plain Layout

sdb      8:16   0   7,5G  0 disk
\end_layout

\begin_layout Plain Layout

+-sdb1   8:17   0   7,4G  0 part /mnt
\end_layout

\begin_layout Plain Layout

+-sdb2   8:20   0   100M  0 part
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Podemos observar que este sistema tiene dos unidades de almacenamiento (
\family typewriter
sda
\family default
 y 
\family typewriter
sdb
\family default
),
 cada una de ellas con dos particiones.
\end_layout

\begin_layout Itemize

\family typewriter
sda
\family default
:
 Esta unidad de almacenamiento tiene una capacidad de 10GB y se divide en dos particiones:
 
\family typewriter
sda1
\family default
 y 
\family typewriter
sda2
\family default
.
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
sda1
\family default
:
 Esta es la partición de arranque y tiene una capacidad de 100MB.
\end_layout

\begin_layout Itemize

\family typewriter
sda2
\family default
:
 Esta es la partición principal y esta montada en la raíz del sistema de archivos.
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
sdb
\family default
:
 Esta unidad de almacenamiento tiene una capacidad de 7,5GB y se divide en dos particiones:
 
\family typewriter
sdb1
\family default
 y 
\family typewriter
sdb2
\family default
.
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
sdb1
\family default
:
 Esta partición se encuentra montada en la carpeta 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize

\family typewriter
sdb2
\family default
:
 La partición 
\family typewriter
sdb2
\family default
 no se encuentra montada en el sistema de archivos.
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Jerarquía de archivos
\end_layout

\begin_layout Standard
La jerarquía de archivos en el sistema de archivos se organiza en un árbol con una estructura específica.
 El objetivo de una estructura estandarizada es que los desarrolladores de software y los administradores de sistemas puedan predecir con precisión dónde se encuentran los archivos importantes del sistema y cómo acceder a ellos.
\end_layout

\begin_layout Standard
A continuación,
 se presentan algunos de los directorios más importantes de la jerarquía de archivos:
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Description
/ Es la raíz del sistema de archivos.
 Cualquier otro directorio debe encontrarse dentro de el,
 independientemente de en cual dispositivo se encuentre.
\end_layout

\begin_layout Description
/bin Este directorio contiene los programas del sistema,
 como comandos básicos de GNU/Linux.
\end_layout

\begin_layout Description
/boot Contiene los archivos necesarios para el proceso de arranque del sistema,
 como el gestor de arranque o el núcleo.
\end_layout

\begin_layout Description
/dev En Linux,
 los dispositivos del hardware se representan como archivos especiales.
 En esta carpeta se encuentran esos archivos.
\end_layout

\begin_layout Description
/etc Este directorio contiene los archivos de configuración del sistema y de las aplicaciones instaladas en el mismo.
\end_layout

\begin_layout Description
/home Este directorio se utiliza para almacenar los directorios personales de los usuarios.
\end_layout

\begin_layout Description
/lib Contiene las bibliotecas compartidas necesarias para el funcionamiento del sistema.
\end_layout

\begin_layout Description
/mnt Este directorio se utiliza para montar sistemas de archivos externos,
 como unidades flash USB,
 discos duros externos,
 etc.
 En algunas distribuciones esto también se hace en el directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/media
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Description
/proc El directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/proc
\family default

\begin_inset Quotes frd
\end_inset

 es un directorio virtual que contiene información sobre el sistema y los procesos en ejecución.
 Es generado en tiempo real por el kernel del sistema operativo.
\end_layout

\begin_layout Description
/root Este directorio es el directorio personal del usuario 
\begin_inset Quotes fld
\end_inset


\emph on
root
\emph default

\begin_inset Quotes frd
\end_inset

.
 El usuario 
\emph on
root
\emph default
 es el único que tiene acceso completo al sistema.
\end_layout

\begin_layout Description
/sbin Contiene los programas utilizados principalmente para la administración del sistema.
\end_layout

\begin_layout Description
/tmp Este directorio se utiliza para almacenar archivos temporales creados por el sistema y los usuarios.
\end_layout

\begin_layout Description
/usr Contiene la mayoría de las utilidades y aplicaciones multiusuario,
 es decir,
 accesibles para todos los usuarios.
 En otras palabras,
 contiene los archivos compartidos,
 pero que no obstante son de sólo lectura.
\end_layout

\begin_layout Description
/var Este directorio contiene archivos que cambian frecuentemente durante la operación del sistema,
 como archivos de registro y archivos de bases de datos.
\end_layout

\begin_layout Description
/opt Se utiliza para almacenar 
\begin_inset Quotes fld
\end_inset

paquetes adicionales
\begin_inset Quotes frd
\end_inset

 o software adicional que no es parte de la distribución principal del sistema operativo.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/fhs.png
	lyxscale 25
	scale 11

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faLinux 
\end_layout

\end_inset

 
\begin_inset space ~
\end_inset

Jerarquía de directorios estándar en Linux.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Carpetas especiales
\end_layout

\begin_layout Standard
Existen tres carpetas especiales en los sistemas Linux:
\end_layout

\begin_layout Itemize
El punto (
\family typewriter
.
\family default
) es una carpeta especial que representa el directorio actual en el que se encuentra el usuario.
 Por ejemplo,
 si el usuario se encuentra en el directorio 
\family typewriter
/home/user
\family default
,
 entonces el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls .
\family default

\begin_inset Quotes frd
\end_inset

 mostrará el contenido del directorio actual,
 es decir,
 
\family typewriter
/home/user
\family default
.
\end_layout

\begin_layout Itemize
Los dos puntos (
\family typewriter
..
\family default
) representan el directorio padre del directorio actual.
 Por ejemplo,
 si el usuario se encuentra en el directorio 
\family typewriter
/home/user
\family default
,
 el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls ..
\family default

\begin_inset Quotes frd
\end_inset

 mostrará el contenido del directorio padre,
 es decir,
 
\family typewriter
/home
\family default
.
\end_layout

\begin_layout Itemize
El símbolo de tilde (
\family typewriter
~
\family default
) representa el directorio principal del usuario.
 Por ejemplo,
 si el usuario es 
\begin_inset Quotes fld
\end_inset


\family typewriter
user
\family default

\begin_inset Quotes frd
\end_inset

,
 entonces el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd ~
\family default

\begin_inset Quotes frd
\end_inset

 lo llevará al directorio 
\family typewriter
/home/user
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante notar que el carácter 
\begin_inset Quotes fld
\end_inset

~
\begin_inset Quotes frd
\end_inset

 no tiene ningún significado para el sistema operativo,
 y es trabajo del shell reemplazarlo por el directorio correspondiente.
 Así como esta,
 existen muchas otras funcionalidades que son labor del interprete de linea de comandos (no del S.
 O.) y serán puntualizadas en el apunte.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Montaje
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\emph on
Montar
\emph default

\begin_inset Quotes frd
\end_inset

 significa hacer que un sistema de archivos esté disponible en un punto específico del sistema de archivos raíz.
 En otras palabras,
 montar un sistema de archivos implica hacer que el sistema operativo sea consciente de la existencia de un sistema de archivos y asignarlo a un directorio específico en la jerarquía de archivos del sistema.
\end_layout

\begin_layout Standard
El punto de montaje es un directorio en el sistema de archivos raíz,
 que se utiliza para acceder al contenido del sistema de archivos que se va a montar.
 Una vez montado,
 el contenido del sistema de archivos se vuelve accesible en el punto de montaje especificado.
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para montar un sistema de archivos en Linux.
 El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 requiere varios parámetros,
 incluyendo la ubicación del dispositivo de almacenamiento y el punto de montaje.
 Por ejemplo,
 para montar un dispositivo de almacenamiento USB en el punto de montaje 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

,
 el siguiente comando puede ser utilizado:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo mount /dev/sdb1 /mnt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El uso del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 en el principio del comando indica que se necesita permisos de administrador para montar el dispositivo de almacenamiento.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para desmontar un sistema de archivos,
 se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

.
 El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para desmontar un sistema de archivos que se encuentra actualmente en uso y liberar el punto de montaje.
 Por ejemplo,
 para desmontar el dispositivo de almacenamiento USB montado anteriormente podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo umount /mnt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Enlaces
\end_layout

\begin_layout Standard
En Linux,
 existen dos tipos de enlaces para archivos:
 enlaces suaves (también conocidos como enlaces simbólicos o 
\begin_inset Quotes fld
\end_inset


\emph on
soft links
\emph default

\begin_inset Quotes frd
\end_inset

) y enlaces duros (también conocidos como enlaces físicos o 
\begin_inset Quotes fld
\end_inset


\emph on
hard links
\emph default

\begin_inset Quotes frd
\end_inset

).
\end_layout

\begin_layout Standard
Un enlace suave es un archivo especial que apunta a otro archivo en el sistema de archivos.
 El enlace suave no contiene los datos del archivo al que apunta,
 sino simplemente la ruta del archivo.
 Si se elimina el archivo original,
 el enlace suave se vuelve inútil.
 Los enlaces suaves se utilizan comúnmente para hacer referencia a archivos en diferentes ubicaciones y para crear accesos directos en el sistema de archivos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los enlaces suaves de Linux son equivalentes a los 
\begin_inset Quotes fld
\end_inset


\emph on
accesos directos
\emph default

\begin_inset Quotes frd
\end_inset

 en los sistemas Windows.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para crear un enlace suave en Linux,
 se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

.
 El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 crea un enlace entre dos archivos y la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

 indica que se creará un enlace suave.
 Por ejemplo,
 para crear un enlace suave llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
enlace
\family default

\begin_inset Quotes frd
\end_inset

 que apunte al archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

,
 se puede usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ln -s archivo enlace
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un enlace duro es una entrada de directorio adicional que apunta al mismo archivo en el sistema de archivos.
 A diferencia de los enlaces suaves,
 los enlaces duros no son archivos independientes y no pueden apuntar a archivos en diferentes sistemas de archivos o particiones.
 Si se elimina el archivo original,
 el enlace duro sigue siendo válido y no se elimina hasta que todos los enlaces se eliminan.
\end_layout

\begin_layout Standard
Para crear un enlace duro en Linux,
 se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 sin la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

.
 Por ejemplo,
 para crear un enlace duro llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
enlace
\family default

\begin_inset Quotes frd
\end_inset

 que apunte al archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

,
 se puede usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ln archivo enlace
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Introduccion
\begin_inset Quotes fld
\end_inset


\emph on
Pensar no garantiza que no cometeremos errores.
 Pero no pensar garantiza que lo haremos
\emph default

\begin_inset Quotes frd
\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\begin_inset Newline newline
\end_inset

Leslie Lamport
\end_layout

\begin_layout Part
Manejo de bash
\end_layout

\begin_layout Chapter
Comandos básicos
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
login shell,
 interactive
\end_layout

\begin_layout Plain Layout
opciones de depuracion
\end_layout

\begin_layout Plain Layout
agregar explainshell
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
Bash es un interprete de linea de comandos y un lenguaje de programación de scripting utilizado principalmente en sistemas operativos tipo Unix.
 Es el intérprete de comandos por defecto en la mayoría de las distribuciones de Linux.
\end_layout

\begin_layout Standard
Permite a los usuarios interactuar con el sistema operativo mediante la entrada de comandos en un emulador de terminal.
 Con Bash,
 los usuarios pueden ejecutar programas,
 gestionar archivos y directorios,
 automatizar tareas y realizar una amplia variedad de operaciones de administración del sistema.
\end_layout

\begin_layout Standard
Además,
 también es un lenguaje de scripting que permite a los usuarios escribir programas para automatizar tareas repetitivas o complejas.
 Estos scripts pueden incluir una serie de comandos de Bash y se pueden ejecutar en una terminal o programarse para que se ejecuten automáticamente en momentos específicos.
\end_layout

\begin_layout Paragraph
Sintaxis
\end_layout

\begin_layout Standard
La sintaxis
\begin_inset Marginal
status open

\begin_layout Plain Layout
Es importante seguir la sintaxis correcta de un comando,
 ya que de lo contrario,
 el comando puede no funcionar como se espera o puede producir errores.
\end_layout

\end_inset

 de un comando es la estructura y el formato que se deben seguir para escribir y ejecutar correctamente un comando en un sistema operativo.
 La sintaxis incluye el nombre del comando,
 las opciones y los argumentos necesarios,
 así como la forma en que deben escribirse y ordenarse.
\end_layout

\begin_layout Standard
Cada comando tiene su propia sintaxis única,
 pero en general,
 la mayoría sigue una estructura básica:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando [opciones] [argumentos]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
El comando es el nombre del programa o acción que se desea ejecutar.
\end_layout

\begin_layout Itemize
Las opciones son indicadores adicionales que se agregan al comando para modificar su comportamiento.
 Las opciones generalmente se escriben después del comando y comienzan con un guion (
\family typewriter
-
\family default
) o dos guiones (
\family typewriter
--
\family default
).
\end_layout

\begin_layout Itemize
Los argumentos son valores adicionales que se pasan al comando para que actúe sobre ellos.
 Los argumentos generalmente se escriben después de las opciones y pueden ser nombres de archivo,
 rutas de directorio,
 nombres de usuario,
 números,
 etc.
\end_layout

\begin_layout Itemize
La mayoría de los comandos admiten la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
–-help
\family default

\begin_inset Quotes frd
\end_inset

 para consultar su ayuda.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En la sintaxis de un comando,
 los corchetes se utilizan para indicar que un elemento es opcional.
 Esto significa que puede omitirse o incluirse según sea necesario.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Además de estos lineamientos generales,
 podemos utilizar la barra invertida (
\begin_inset Quotes fld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes frd
\end_inset

) para dividir un comando largo en varias líneas para mejorar la legibilidad sin ejecutar el comando parcialmente en cada línea.
\end_layout

\begin_layout Example
Podemos escribir en pantalla una linea muy larga en varios renglones:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo Hola 
\backslash

\end_layout

\begin_layout Plain Layout

mundo
\backslash

\end_layout

\begin_layout Plain Layout

!
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola mundo!
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Prompt
\end_layout

\begin_layout Standard
El 
\begin_inset Quotes fld
\end_inset


\emph on
prompt
\emph default

\begin_inset Quotes frd
\end_inset

 es el indicador que muestra el shell para indicar que está esperando la entrada del usuario.
 Es una cadena de caracteres que puede contener información útil,
 como el nombre del usuario,
 el nombre del equipo,
 la ruta actual del directorio y otros detalles.
\end_layout

\begin_layout Example
El prompt por defecto se ve así:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

usuario@equipo:ruta$
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Historial
\end_layout

\begin_layout Standard
Cada vez que se escribe y ejecuta un comando en Bash,
 se agrega al historial de comandos.
 Esto permite acceder a los comandos previamente ejecutados para volver a ejecutarlos o modificarlos en lugar de volver a escribirlos desde cero.
 Para poder acceder fácilmente al historial,
 se pueden presionar las siguientes teclas:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Flecha hacia arriba:
 Muestra el comando anterior en el historial.
 Si se sigue presionando,
 se mostrarán comandos anteriores en el historial en orden cronológico inverso.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Flecha hacia abajo:
 Análogo pero en orden cronológico.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+R:
 Abre una búsqueda reversa en el historial de comandos.
 Al escribir una palabra clave o frase,
 se mostrarán los comandos anteriores que coinciden con la búsqueda.
\end_layout

\begin_layout Standard
Además bash permite repetir comandos anteriores fácilmente:
\end_layout

\begin_layout Itemize
Cuando se utiliza 
\begin_inset Quotes fld
\end_inset


\family typewriter
!!
\family default

\begin_inset Quotes frd
\end_inset

 en un comando,
 Bash lo interpreta como una referencia al último comando ejecutado.
 Es útil cuando deseas repetir el comando anterior rápidamente.
\end_layout

\begin_layout Itemize
El formato 
\begin_inset Quotes fld
\end_inset


\family typewriter
!n
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para ejecutar el enésimo comando en el historial de comandos.
\end_layout

\begin_layout Example
Veamos como podemos reutilizar el último comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo Hola mundo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola mundo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

!!
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
echo Hola mundo
\end_layout

\begin_layout Plain Layout

\family typewriter
Hola mundo
\end_layout

\end_inset


\end_layout

\begin_layout Example
También podemos repetir el penúltimo comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo Linea 1
\end_layout

\begin_layout Plain Layout

echo Linea 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Linea 1
\end_layout

\begin_layout Plain Layout

\family typewriter
Linea 2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

!-2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
echo Linea 1
\end_layout

\begin_layout Plain Layout

\family typewriter
Linea 1
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Autocompletado
\end_layout

\begin_layout Standard
Cuando se escribe un comando o una ruta en el terminal y se presiona la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Tab,
 Bash intenta completar automáticamente el comando o la ruta.
 Si hay una sola opción disponible,
 Bash la completará automáticamente.
 Si hay varias opciones disponibles,
 Bash mostrará una lista de opciones que coinciden con lo que se ha escrito hasta el momento.
 Si se sigue presionando la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Tab,
 Bash continuará mostrando opciones adicionales.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
man
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar información sobre info pages
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\family typewriter
man
\family default

\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset

manual
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es una herramienta de línea de comandos que proporciona información detallada sobre otros comandos,
 funciones y bibliotecas.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

man [opciones] comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Las opciones más comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

 para buscar descripciones cortas de comandos relacionados con una palabra clave.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-k
\family default

\begin_inset Quotes frd
\end_inset

 para buscar páginas del manual que contienen una palabra clave específica.
\end_layout

\begin_layout Standard
Para navegar dentro del programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

,
 se pueden usar varias teclas moverse por la página,
 buscar texto y salir del programa:
\end_layout

\begin_layout Itemize
Las teclas de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

flecha arriba y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

abajo:
 se pueden utilizar para desplazarse hacia arriba y hacia abajo por la página del manual.
\end_layout

\begin_layout Itemize
La tecla 
\begin_inset Quotes fld
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset


\family typewriter
/
\family default

\begin_inset Quotes frd
\end_inset

 seguida de un texto de búsqueda:
 se puede utilizar para buscar una palabra o frase en la página del manual actual.
\end_layout

\begin_layout Itemize
La tecla 
\begin_inset Quotes fld
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset


\family typewriter
q
\family default

\begin_inset Quotes frd
\end_inset

:
 se puede utilizar para salir del programa 
\family typewriter
man
\family default
 y volver al terminal.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las páginas del manual también pueden consultarse en internet:
 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://man.cx/"
literal "true"

\end_inset

 Linux Manpages Online
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para poder observar la documentación del comando 
\family typewriter
man
\family default
 podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

man man
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos consultar cuales comandos sirven para 
\begin_inset Quotes fld
\end_inset

listar directorios
\begin_inset Quotes frd
\end_inset

 con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

man -k 
\begin_inset Quotes fld
\end_inset

list directory
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
dir (1)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- list directory contents
\end_layout

\begin_layout Plain Layout

\family typewriter
ls (1)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- list directory contents
\end_layout

\begin_layout Plain Layout

\family typewriter
ls (1p)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- list directory contents
\end_layout

\begin_layout Plain Layout

\family typewriter
vdir (1) - list directory contents
\end_layout

\end_inset


\end_layout

\begin_layout Example
La descripción corta del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
clear
\family default

\begin_inset Quotes frd
\end_inset

 la podemos observar con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

man -f clear
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
clear (1)
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

- clear the terminal screen
\end_layout

\begin_layout Plain Layout

\family typewriter
clear (3x) - clear all or part of a curses window
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
clear
\end_layout

\begin_layout Standard
El comando 
\family typewriter
clear
\family default
 es un comando que se utiliza para limpiar la pantalla del terminal,
 eliminando todos los comandos y resultados previos que se hayan mostrado.
 Al ejecutar este comando,
 la pantalla del terminal se restablecerá,
 dejando la línea de comando en la parte superior de la pantalla.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\family typewriter
clear
\family default
 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

clear [-x]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-x
\family default

\begin_inset Quotes frd
\end_inset

 puede agregarse para evitar que se borre el historial desplazamiento del emulador de terminal.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El atajo de teclado 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+L es equivalente al comando 
\family typewriter
clear
\family default
.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para borrar el contenido de la pantalla se utiliza el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

clear
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
echo
\end_layout

\begin_layout Standard
El comando 
\family typewriter
echo
\family default
 es un comando de la línea de comandos que se utiliza para imprimir texto en la pantalla del terminal.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\family typewriter
echo
\family default
 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

echo [opciones] texto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\family typewriter
echo
\family default
 también admite varias opciones y parámetros adicionales,
 que permiten ajustar el formato de la salida y realizar otras tareas:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

:
 evita que el comando agregue un carácter de nueva línea al final de la salida.
 En otras palabras,
 la siguiente línea del terminal comenzará en la misma línea en la que termina la salida del comando 
\family typewriter
echo
\family default
.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-e
\family default

\begin_inset Quotes frd
\end_inset

:
 activa el soporte de secuencias de escape en la salida.
 Por ejemplo,
 se pueden utilizar secuencias de escape para agregar saltos de linea al texto.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La utilidad del comando 
\family typewriter
echo
\family default
 resultara mas evidente una vez que se estudien las redirecciones y los scripts.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para escribir dos palabras separadas por una linea se escribe el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo -e 
\begin_inset Quotes fld
\end_inset

Hola
\backslash
nmundo
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola
\end_layout

\begin_layout Plain Layout

\family typewriter
mundo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
history
\end_layout

\begin_layout Standard
El comando 
\family typewriter
history
\family default
 muestra una lista de los comandos que se han ejecutado anteriormente.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
history
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

history [-c]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

 para borrar el historial.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\family typewriter
history
\family default
 no es un programa de usuario,
 sino una funcionalidad que provee Bash.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver los últimos comandos ingresados se usa el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

history
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
1 cd ~
\end_layout

\begin_layout Plain Layout

\family typewriter
2 ls
\end_layout

\begin_layout Plain Layout

\family typewriter
3 history
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar el propósito y funcionamiento de los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
date
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
cal
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe cada uno de ellos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Pruebe las siguientes combinaciones de teclas de edición de linea de comandos y determine para que sirven:
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+A,
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+E,
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+K,
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Alt+D y 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+W.
\end_layout

\begin_layout Section
Sistema de archivos
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Si se sacan los comandos de la parte de fundamentos,
 habría que darles mayor profundidad aca.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
pwd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset

 son las siglas de 
\begin_inset Quotes fld
\end_inset


\emph on
Print Working Directory
\emph default

\begin_inset Quotes frd
\end_inset

 (
\begin_inset Quotes fld
\end_inset

mostrar directorio de trabajo
\begin_inset Quotes frd
\end_inset

).
\end_layout

\end_inset

 muestra la ruta completa del directorio de trabajo actual en el sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
pwd
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

pwd [-P]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-P
\family default

\begin_inset Quotes frd
\end_inset

 para mostrar el directorio sin enlaces simbólicos.
\end_layout

\begin_layout Example
Para mostrar la ruta del directorio de trabajo actual usamos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

pwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
/home/entorno
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 son las iniciales de 
\begin_inset Quotes fld
\end_inset

cambiar directorio
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para cambiar el directorio de trabajo actual en el sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cd [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Si no se especifica una ruta,
 el comando es equivalente a 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd ~
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Si se utiliza el argumento 
\begin_inset Quotes fld
\end_inset


\family typewriter
-
\family default

\begin_inset Quotes frd
\end_inset

,
 el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 vuelve al directorio de trabajo anterior.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
A diferencia de los programas anteriores,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

 es un comando interno del shell.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ir al directorio que contiene la carpeta personal del usuario actual usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cd ~/..
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos ir a la carpeta raíz del sistema escribiendo lo siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cd /
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ls
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

listar
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para listar los archivos y directorios en el directorio de trabajo actual o en una ubicación específica del sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 es simplemente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

ls [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se omite la ruta,
 se asume que se desea listar los archivos y directorios en el directorio de trabajo actual.
 Además,
 se pueden utilizar opciones para personalizar la salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

.
 Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra la lista en formato largo,
 que incluye información detallada sobre cada archivo o directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-h
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra el tamaño de los archivos en formato legible por humanos,
 como 
\begin_inset Quotes fld
\end_inset


\emph on
KB
\emph default

\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset


\emph on
MB
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra todos los archivos y directorios,
 incluyendo los que comienzan con un punto.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En el sistema de archivos de Linux,
 los archivos que comienzan con un punto se consideran archivos ocultos.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar el contenido del directorio actual usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
dsh dsh.c entornos final hola.c hola.py hola.s
\end_layout

\end_inset


\end_layout

\begin_layout Example
Agregando la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

 también veremos los archivos ocultos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls -a
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
./ ../ dsh dsh.c entornos final hola.c hola.py hola.s .oculto
\end_layout

\end_inset


\end_layout

\begin_layout Example
Si además queremos ver información adicional,
 agregamos la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls -l
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
-rwxr-xr-x 1 damian wheel 15832 abr 12 19:33 dsh
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel
\begin_inset space ~
\end_inset

 1130 abr 12 19:32 dsh.c
\end_layout

\begin_layout Plain Layout

\family typewriter
drwxr-xr-x 6 damian wheel 
\begin_inset space ~
\end_inset

4096 abr 17 13:54 entornos
\end_layout

\begin_layout Plain Layout

\family typewriter
drwxr-xr-x 4 damian wheel 
\begin_inset space ~
\end_inset

4096 abr 19 01:03 final
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

60 mar 20 15:05 hola.c
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

35 mar 28 19:06 hola.py
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 damian wheel 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

462 mar 28 19:40 hola.s
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En este formato de salida podemos ver:
 los permisos del archivo,
 cantidad de enlaces,
 usuario propietario,
 grupo propietario,
 tamaño,
 fecha de modificación y nombre.
\end_layout

\begin_layout Example
Para mostrar el contenido del directorio raíz podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls /
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
bin boot dev etc home lib lib64 lost+found mnt opt proc root run sbin srv sys tmp usr var
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tree
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tree
\family default

\begin_inset Quotes frd
\end_inset

 en sistemas Unix y Linux es una herramienta de línea de comandos que muestra la estructura de directorios y archivos en forma de árbol.
 Su uso básico es bastante simple,
 y puede proporcionar una vista jerárquica clara de la organización de archivos en un directorio y sus subdirectorios.
\end_layout

\begin_layout Standard
La sintaxis básica es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

tree [opciones] [directorio]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra solo los directorios,
 no los archivos.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-L nivel
\family default

\begin_inset Quotes frd
\end_inset

:
 Limita la profundidad del árbol al nivel especificado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra archivos y directorios ocultos.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra la ruta completa de cada archivo.
\end_layout

\begin_layout Example
Comprobemos la jerarquía de archivos de Linux usando el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tree
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

tree -L 1 /
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
/
\end_layout

\begin_layout Plain Layout

\family typewriter
├── bin -> 
\begin_inset space ~
\end_inset

usr/bin
\end_layout

\begin_layout Plain Layout

\family typewriter
├── boot
\end_layout

\begin_layout Plain Layout

\family typewriter
├── dev
\end_layout

\begin_layout Plain Layout

\family typewriter
├── etc
\end_layout

\begin_layout Plain Layout

\family typewriter
├── home
\end_layout

\begin_layout Plain Layout

\family typewriter
├── lib -> 
\begin_inset space ~
\end_inset

usr/lib
\end_layout

\begin_layout Plain Layout

\family typewriter
├── lib64 -> 
\begin_inset space ~
\end_inset

usr/lib
\end_layout

\begin_layout Plain Layout

\family typewriter
├── lost+found
\end_layout

\begin_layout Plain Layout

\family typewriter
├── mnt
\end_layout

\begin_layout Plain Layout

\family typewriter
├── opt
\end_layout

\begin_layout Plain Layout

\family typewriter
├── proc
\end_layout

\begin_layout Plain Layout

\family typewriter
├── root
\end_layout

\begin_layout Plain Layout

\family typewriter
├── run
\end_layout

\begin_layout Plain Layout

\family typewriter
├── sbin -> 
\begin_inset space ~
\end_inset

usr/bin
\end_layout

\begin_layout Plain Layout

\family typewriter
├── srv
\end_layout

\begin_layout Plain Layout

\family typewriter
├── sys
\end_layout

\begin_layout Plain Layout

\family typewriter
├── tmp
\end_layout

\begin_layout Plain Layout

\family typewriter
├── usr
\end_layout

\begin_layout Plain Layout

\family typewriter
└── var
\end_layout

\begin_layout Plain Layout

\family typewriter
20 directories,
 0 files
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
mkdir
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 significa 
\begin_inset Quotes fld
\end_inset


\emph on
make directory
\emph default

\begin_inset Quotes frd
\end_inset

 (o 
\begin_inset Quotes fld
\end_inset

crear directorio
\begin_inset Quotes frd
\end_inset

 en español).
\end_layout

\end_inset

 se utiliza para crear nuevos directorios en el sistema de archivos.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

mkdir [opciones] directorio...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Quotes fld
\end_inset

opciones
\begin_inset Quotes frd
\end_inset

 son las opciones que se pueden utilizar para personalizar la creación del directorio y 
\begin_inset Quotes fld
\end_inset

directorio
\begin_inset Quotes frd
\end_inset

 es el nombre del directorio que se desea crear.
\end_layout

\begin_layout Standard
Algunas de las opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-p
\family default

\begin_inset Quotes frd
\end_inset

:
 crea todos los directorios en la ruta especificada,
 incluso si no existen.
 Si ya existe un directorio con el mismo nombre que uno de los directorios de la ruta,
 se ignora sin dar errores.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra los detalles de la creación del directorio en la salida estándar de la terminal.
\end_layout

\begin_layout Example
Para crear un directorio llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta
\family default

\begin_inset Quotes frd
\end_inset

 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear un directorio llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta1
\family default

\begin_inset Quotes frd
\end_inset

 y otro llamdo 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta2
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar este comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta1 carpeta2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear un directorio llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta1
\family default

\begin_inset Quotes frd
\end_inset

 con una carpeta 
\begin_inset Quotes fld
\end_inset


\family typewriter
carpeta2
\family default

\begin_inset Quotes frd
\end_inset

 adentro,
 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir -p carpeta1/carpeta2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
rmdir
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 es la abreviación de 
\begin_inset Quotes fld
\end_inset

remover directorio
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es utilizado para eliminar directorios 
\emph on
vacíos
\emph default
 en el sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

rmdir [opciones] directorio...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-p
\family default

\begin_inset Quotes frd
\end_inset

:
 dada una ruta,
 elimina un directorio y sus predecesores.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra los detalles de la eliminación del directorio en la salida estándar de la terminal.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante tener en cuenta que solo se pueden eliminar directorios vacíos con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
touch
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para crear archivos vacíos o actualizar la fecha y hora de acceso o modificación de un archivo.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

touch [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

:
 actualiza sólo la fecha y hora de acceso del archivo.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

:
 actualiza sólo la fecha y hora de modificación del archivo.
\end_layout

\begin_layout Standard
Si se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 para crear un archivo que no existe,
 se crea un archivo vacío con el nombre especificado.
 Si en cambio se utiliza con un archivo existente,
 se actualiza la fecha y hora de acceso y/o modificación del archivo sin cambiar su contenido.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

 es útil en situaciones en las que se necesita establecer manualmente la fecha y hora de acceso o modificación de un archivo,
 o para crear rápidamente un archivo vacío sin tener que abrir un editor de texto y guardar un archivo vacío.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
rm
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

 es la abreviación de 
\begin_inset Quotes fld
\end_inset

remover
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es utilizado para eliminar archivos y directorios en el sistema de archivos.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

rm [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 se utiliza para eliminar directorios y su contenido de forma recursiva.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

:
 se utiliza para forzar la eliminación de un archivo si este no tiene permiso de escritura.
 Además no da error si los archivos no existen.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-
\family default
i
\begin_inset Quotes frd
\end_inset

:
 pide una confirmación antes de borrar cada archivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si se utiliza el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

 para eliminar un archivo,
 el archivo se eliminará de forma permanente del sistema de archivos;
 no se mueve a una papelera de reciclaje.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para borrar tres archivos pidiendo confirmación podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm -i archivo1 archivo2 archivo3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
rm:
 ¿borrar el fichero regular vacío 'archivo1'?
 (s/n) s
\end_layout

\begin_layout Plain Layout

\family typewriter
rm:
 ¿borrar el fichero regular vacío 'archivo2'?
 (s/n) s
\end_layout

\begin_layout Plain Layout

\family typewriter
rm:
 ¿borrar el fichero regular vacío 'archivo3'?
 (s/n) s
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para borrar un directorio no vacío junto con todo su contenido usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm -r directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cp
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

copiar
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 que se utiliza para copiar uno o más archivos o directorios de una ubicación a otra en el sistema de archivos.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cp [opciones] origen destino
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante tener en cuenta que si se copia un archivo a un directorio que ya contiene un archivo con el mismo nombre,
 el archivo existente se sobrescribirá automáticamente sin pedir confirmación.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

 incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 indica que se deben copiar los directorios y su contenido de forma recursiva.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra los detalles de la copia en la salida estándar de la terminal.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-i
\family default

\begin_inset Quotes frd
\end_inset

:
 pide confirmación antes de sobrescribir archivos existentes.
\end_layout

\begin_layout Example
Para copiar un archivo a otro directorio usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cp archivo directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear una copia de un archivo en el directorio actual podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cp archivo copia
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para copiar un directorio y su contenido a otro directorio:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cp -r directorio1 directorio2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
mv
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset

mover
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para mover o renombrar archivos o directorios.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

mv [opciones] origen destino
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset

 también ofrece algunas opciones útiles,
 entre las que se incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-i
\family default

\begin_inset Quotes frd
\end_inset

:
 Solicita confirmación antes de sobrescribir archivos existentes.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

:
 Sobrescribe archivos existentes sin preguntar.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra información detallada sobre lo que se está haciendo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si 
\family typewriter
origen
\family default
 y 
\family typewriter
destino
\family default
 se encuentran dentro de la misma ruta,
 entonces el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset

 cambia el nombre del archivo o directorio.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos cambiar el nombre de un archivo utilizando el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mv
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mv nombre_original nombre_nuevo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
df
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
df
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
df
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de "
\emph on
Disk Free
\emph default
" (disco libre en inglés)
\end_layout

\end_inset

 sirve para mostrar información sobre el espacio libre y utilizado en sistemas de archivos montados.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

df [opciones] [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
df
\family default

\begin_inset Quotes frd
\end_inset

 también ofrece algunas opciones útiles,
 entre las que se incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-h
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra los tamaños de bloque en un formato legible por humanos (por ejemplo,
 en 
\emph on
kilobytes
\emph default
,
 
\emph on
megabytes
\emph default
,
 
\emph on
gigabytes
\emph default
,
 etc.).
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-T
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra el tipo de sistema de archivos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto,
 si se ejecuta sin opciones,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
df
\family default

\begin_inset Quotes frd
\end_inset

 muestra información sobre todos los sistemas de archivos montados en el sistema,
 incluyendo el espacio total,
 el espacio utilizado,
 el espacio libre y el porcentaje de uso.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver el tipo de sistema de archivos y espacio libre en forma legible,
 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

df -Th
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
S.ficheros Tipo 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Tamaño Usados Disp Uso% Montado en
\end_layout

\begin_layout Plain Layout

\family typewriter
dev
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

devtmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

971M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 971M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0% /dev
\end_layout

\begin_layout Plain Layout

\family typewriter
run
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

644K 978M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1% /run
\end_layout

\begin_layout Plain Layout

\family typewriter
/dev/sda2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

ext4 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

9,7G 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

7,1G 2,1G 
\begin_inset space ~
\end_inset

78% /
\end_layout

\begin_layout Plain Layout

\family typewriter
tmpfs
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0% /dev/shm
\end_layout

\begin_layout Plain Layout

\family typewriter
tmpfs
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

979M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

72M 907M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

8% /tmp
\end_layout

\begin_layout Plain Layout

\family typewriter
/dev/sda1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

vfat 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

100M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

97M 2,9M 
\begin_inset space ~
\end_inset

98% /boot
\end_layout

\begin_layout Plain Layout

\family typewriter
tmpfs
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tmpfs 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

196M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

16K 196M 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1% /run/user/1000
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
du
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
du
\family default

\begin_inset Quotes frd
\end_inset

 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
du
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset


\emph on
Disk Usage
\emph default

\begin_inset Quotes frd
\end_inset

 (uso de disco en inglés)
\end_layout

\end_inset

 sirve para mostrar información sobre el espacio utilizado por directorios.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

du [opciones] [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones útiles son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-h
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra los tamaños de archivo en un formato legible por humanos.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra sólo el tamaño total de la ruta especificada,
 sin detalles de tamaño por directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra información de tamaño también para los archivos,
 no sólo para los directorios.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto,
 si se ejecuta sin opciones,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
du
\family default

\begin_inset Quotes frd
\end_inset

 muestra la cantidad de espacio utilizado por cada directorio en la ruta actual.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar el uso del directorio actual usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

du
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi1/cuartos1
\end_layout

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi1/cuartos2
\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space ~
\end_inset

./semi1
\end_layout

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi2/cuartos4
\end_layout

\begin_layout Plain Layout

\family typewriter
4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

./semi2/cuartos3
\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space ~
\end_inset

./semi2
\end_layout

\begin_layout Plain Layout

\family typewriter
28
\begin_inset space ~
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ln
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza en sistemas Linux para crear enlaces simbólicos o enlaces duros a archivos y directorios.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

ln [-s] [archivo original] [nombre del enlace]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto 
\begin_inset Quotes fld
\end_inset


\family typewriter
ln
\family default

\begin_inset Quotes frd
\end_inset

 crea enlaces duros,
 a no ser que se utilice la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
lsblk
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
lsblk
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
El nombre 
\begin_inset Quotes fld
\end_inset


\family typewriter
lsblk
\family default

\begin_inset Quotes frd
\end_inset

 proviene de 
\begin_inset Quotes fld
\end_inset


\emph on
list block devices
\emph default

\begin_inset Quotes frd
\end_inset

 (
\begin_inset Quotes fld
\end_inset

listar dispositivos de bloque
\begin_inset Quotes frd
\end_inset

).
\end_layout

\end_inset

 es utilizado para listar información sobre discos duros,
 particiones y dispositivos de almacenamiento extraíbles.
 
\end_layout

\begin_layout Standard
La sintaxis básica de 
\family typewriter
lsblk
\family default
 es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

lsblk [opciones]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra todos los dispositivos disponibles.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra solo una lista simple,
 sin detalles adicionales
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
mount
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza en sistemas operativos tipo Linux para montar sistemas de archivos en un directorio del sistema de archivos.
\end_layout

\begin_layout Standard
Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

mount [-r] dispositivo directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

 monta los sistemas de archivos en modo de lectura y escritura,
 a no ser que se use la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

 (sólo lectura).
\end_layout

\begin_layout Plain Layout
También es importante destacar que para montar un sistema de archivos,
 normalmente se necesitan privilegios de superusuario,
 por lo que se debe utilizar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 para ejecutar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mount
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Si se desea montar la partición 
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/sda1
\family default

\begin_inset Quotes frd
\end_inset

 en el directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

,
 se puede utilizar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo mount /dev/sda1 /mnt 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una vez que se ha montado la partición,
 cualquier archivo que se encuentre en la partición estará disponible en el directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
umount
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para desmontar un sistema de archivos previamente montado en un directorio.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

umount [opciones] directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones útiles son las que siguen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

:
 Forzar el desmontaje,
 aunque la partición esté siendo utilizada por otros procesos.
 El sistema puede quedar inconsistente.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

:
 Desmonta la partición permitiendo que los procesos que utilizan la partición terminen antes de desmontarla.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante destacar que para desmontar un sistema de archivos,
 normalmente se necesitan privilegios de superusuario,
 por lo que se debe utilizar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 para ejecutar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
umount
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Si se desea desmontar la partición que previamente se montó en el directorio 
\begin_inset Quotes fld
\end_inset


\family typewriter
/mnt
\family default

\begin_inset Quotes frd
\end_inset

,
 se puede utilizar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo umount /mnt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
find
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
find
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta muy útil para buscar archivos y directorios en el sistema de archivos.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

find [ruta inicial] [expresiones de busqueda]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las expresiones de búsqueda mas importantes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-type
\family default

\begin_inset Quotes frd
\end_inset

:
 Especifica el tipo de archivo que se está buscando.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-name
\family default

\begin_inset Quotes frd
\end_inset

:
 Especifica el nombre del archivo que se está buscando.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-empty
\family default

\begin_inset Quotes frd
\end_inset

:
 Busca archivos vacíos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si no se especifica una ruta de inicio,
 se buscará a partir del directorio de trabajo actual.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es posible ejecutar un comando para cada uno de los archivos o directorios encontrados.
 Para esto debemos agregar al final:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

find [ruta] [expresiones de busqueda] -exec comando {} 
\backslash
;
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Quotes fld
\end_inset


\family typewriter
{}
\family default

\begin_inset Quotes frd
\end_inset

 se reemplazará por los nombres de los archivos o directorios encontrados.
\end_layout

\begin_layout Example
Para buscar en el directorio de trabajo actual todos los 
\emph on
directorios
\emph default
 que existan se usa el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

find -type d
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
.
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos1
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos2
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos4
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos3
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para buscar en el directorio de trabajo actual todos los 
\emph on
archivos
\emph default
 que existan se usa el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

find -type f
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
./francia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/croacia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos1/holanda
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos1/argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos2/croacia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi1/cuartos2/brasil
\end_layout

\begin_layout Plain Layout

\family typewriter
./argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos4/marruecos
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos4/portugal
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/marruecos
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/francia
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos3/inglaterra
\end_layout

\begin_layout Plain Layout

\family typewriter
./semi2/cuartos3/francia
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para actualizar la fecha de modificación y accesos de todos los archivos vacíos puede usarse el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

find -type f -empty -exec touch {} 
\backslash
;
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\strikeout on
\color lightgray
locate
\end_layout

\begin_layout Subsection
Comodines
\end_layout

\begin_layout Standard
Los comodines,
 también conocidos como wildcards en inglés,
 son caracteres especiales que se utilizan para representar patrones de búsqueda en 
\emph on
nombres de archivos y directorios
\emph default
.
\end_layout

\begin_layout Standard
Los comodines pueden ser muy útiles para simplificar tareas que involucran la manipulación de muchos archivos y directorios.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La expansión de comodines,
 es otra de las tareas que llevan a cabo los interpretes de línea de comandos.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
*
\family default

\begin_inset Quotes frd
\end_inset

:
 Representa cualquier cadena de caracteres,
 incluyendo una vacía.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
?
\family default

\begin_inset Quotes frd
\end_inset

:
 Representa cualquier carácter individual.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
[]
\family default

\begin_inset Quotes frd
\end_inset

:
 Representa un conjunto de caracteres posibles.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
{}
\family default

\begin_inset Quotes frd
\end_inset

:
 Representa un producto cartesiano de caracteres.
 No se tienen en cuenta los archivos de la carpeta actual.
\end_layout

\begin_layout Example
Para borrar todos los archivos que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.txt
\family default

\begin_inset Quotes frd
\end_inset

 se puede usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm *.txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar todos los programas de usuario que tienen 
\begin_inset Quotes fld
\end_inset


\family typewriter
64
\family default

\begin_inset Quotes frd
\end_inset

 en su nombre usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls /bin/*64*
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar las segundas particiones de todas las unidades de almacenamiento podemos usar:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls /dev/sd?2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver cuando ocupan los archivos que comienzan con dos letras y terminan con un número usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

du [a-z][a-z][0-9]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para borrar todos los archivos de una sola letra,
 que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.jpg
\family default

\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset


\family typewriter
.gif
\family default

\begin_inset Quotes frd
\end_inset

 escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm [a-z].{gif,jpg}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear un archivo vacío por cada casilla de un tablero de ajedrez podemos escribir:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch {a..h}{1..8}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Investigue con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

,
 que otras opciones tiene el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe algunas de ellas.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un comando para hacer una lista de los programas del sistema.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Averigüe para que sirve el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
stat
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Considere la siguiente salida en pantalla del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls -log
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Exercise
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
total 4
\end_layout

\begin_layout Plain Layout

\family typewriter
drwxr-xr-x 2 4096 may 1 23:46 archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0 may 1 23:46 carpeta
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
¿Por qué da error el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd carpeta
\family default

\begin_inset Quotes frd
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Considere la siguiente salida en pantalla del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls -Fa
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Exercise
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
./ ../ .../ ..../ ...../ ......
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
¿Cuántas carpetas hay en el directorio de trabajo actual?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Normalmente el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd cd
\family default

\begin_inset Quotes frd
\end_inset

 da error.
 ¿En cuál caso esto no es así?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Cree un directorio vacío con 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 y luego bórrelo con 
\begin_inset Quotes fld
\end_inset


\family typewriter
rmdir
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 Escriba la siguiente secuencia de comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta
\end_layout

\begin_layout Plain Layout

touch carpeta/archivo
\end_layout

\begin_layout Plain Layout

rmdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 Escriba la siguiente secuencia de comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch carpeta
\end_layout

\begin_layout Plain Layout

rmdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 Escriba el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta1/carpeta2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Exercise
Considere la siguiente salida en pantalla del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
rm
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Exercise
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
rm:
 ¿borrar el fichero regular vacío 'archivo' protegido contra escritura?
 (s/n) s
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
¿Cuál fue el comando completo?
 ¿Cómo podría haberse omitido la comprobación de eliminación?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Manipule el sistema de archivos para que el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tree
\family default

\begin_inset Quotes frd
\end_inset

 muestre la siguiente salida:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
.
\end_layout

\begin_layout Plain Layout

\family typewriter
├── argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
├── francia
\end_layout

\begin_layout Plain Layout

\family typewriter
├── semi1
\end_layout

\begin_layout Plain Layout

\family typewriter
│   ├── argentina
\end_layout

\begin_layout Plain Layout

\family typewriter
│   └── croacia
\end_layout

\begin_layout Plain Layout

\family typewriter
└── semi2
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

├── francia
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

└── marruecos
\end_layout

\begin_layout Plain Layout

\family typewriter
3 directories,
 6 files
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Cree una copia idéntica a la estructura del ejercicio anterior en otro directorio.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 Elimine ambas estructuras de directorios.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Investigue con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

,
 las opciones 
\begin_inset Quotes fld
\end_inset


\family typewriter
-b
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
-u
\family default

\begin_inset Quotes frd
\end_inset

 del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe ambas opciones.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para aprender sobre el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
readlink
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Inserte un 
\emph on
pendrive
\emph default
 en la computadora y utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
lsblk
\family default

\begin_inset Quotes frd
\end_inset

 para ver el nombre del dispositivo.
 Intente montarlo y desmontarlo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 y averigüe como buscar con 
\begin_inset Quotes fld
\end_inset


\family typewriter
find
\family default

\begin_inset Quotes frd
\end_inset

,
 los archivos modificados durante la última semana.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
find
\family default

\begin_inset Quotes frd
\end_inset

 para crear una copia de todos los directorios vacíos del directorio de trabajo actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un comando para borrar archivos que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
~
\family default

\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes frd
\end_inset

 y tengan un punto 
\begin_inset Quotes fld
\end_inset


\family typewriter
.
\family default

\begin_inset Quotes frd
\end_inset

 en su nombre.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset

 son ejercicios que comprometen la seguridad del equipo.
 Tome las precauciones necesarias.
\end_layout

\end_inset

Describa cual es el comportamiento del siguiente comando.
 No lo ejecute.
\end_layout

\begin_layout Standard
\begin_inset Flex Peligro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm * .txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Averigüe cuales son los programas de usuario instalados en su computadora,
 que solo tienen dos letras en su nombre.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo con el nombre de cada fecha del año.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Exercise
Escriba la siguiente secuencia de comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir carpeta
\end_layout

\begin_layout Plain Layout

touch carpeta/archivo1 carpeta/.archivo2
\end_layout

\begin_layout Plain Layout

rm -rf carpeta/*
\end_layout

\begin_layout Plain Layout

rmdir carpeta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Explique por qué se produce el error.
 Proponga una forma de solucionarlo.
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Escriba un comando para mostrar los archivos ocultos de la carpeta actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Averigüe para qué sirven los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
pushd
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
popd
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
dirs
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Section
Contenido y filtros
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Definir stdin y stdout.
\end_layout

\begin_layout Plain Layout
Hay que aclarar que la mayoría de los comandos también trabajan sobre stdin.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
nano
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

 es un editor de texto de la línea de comandos que se utiliza para crear y modificar archivos en sistemas Linux.
 Su sintaxis es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

nano [archivo]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un archivo,
 se comenzará un documento nuevo.
 Una vez que se encuentra en el editor,
 se puede usar el teclado para escribir o editar el archivo de texto.
\end_layout

\begin_layout Standard
Para utilizar el programa se pueden usar varias combinaciones de teclas que se señalan en la parte inferior de la pantalla.
 Algunas de ellas son:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+O:
 Para guardar los cambios en un archivo,
 se utiliza la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl + O,
 que guarda el archivo en su ubicación actual.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Shift+flechas:
 Se puede seleccionar texto manteniendo presionada la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Shift y presionando las flechas del teclado.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+K:
 Para cortar un texto seleccionado,
 se utiliza la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+K.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+U:
 Para pegar un texto seleccionado,
 se utiliza la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+U.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Alt+U:
 Para deshacer la última acción,
 usamos la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Alt+U.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+X:
 Para salir del editor,
 se utiliza la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+X,
 lo que devuelve al usuario a la línea de comandos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al igual que 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 y al contrario que la mayoría de los comandos que veremos,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

 es un programa interactivo.
 Esto quiere decir que después de escribir el comando,
 se ingresa a un programa que espera mas entrada desde el teclado.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cat
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset

cat
\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

con
\emph on
cat
\emph default
enar
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es una herramienta que se utiliza para concatenar y mostrar el contenido de uno o más archivos de texto.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset

 es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cat [-n] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

 para enumerar las líneas emitidas.
\end_layout

\begin_layout Example
Para conocer información sobre el CPU podemos observar el contenido del archivo especial 
\begin_inset Quotes fld
\end_inset


\family typewriter
/proc/cpuinfo
\family default

\begin_inset Quotes frd
\end_inset

 con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat /proc/cpuinfo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver información sobre la memoria podemos observar el contenido del archivo especial 
\begin_inset Quotes fld
\end_inset


\family typewriter
/proc/meminfo
\family default

\begin_inset Quotes frd
\end_inset

 con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat /proc/meminfo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para mostrar información sobre la línea de comando del kernel utilizada para iniciar el sistema operativo y a continuación la versión del mismo,
 podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat /proc/cmdline /proc/version
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
less
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
El nombre del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

 deriva de 
\begin_inset Quotes fld
\end_inset


\family typewriter
more
\family default

\begin_inset Quotes frd
\end_inset

 que fue el programa que se utilizaba anteriormente para este propósito
\end_layout

\end_inset

 es una utilidad en línea de comandos que se utiliza para ver el contenido de un archivo de texto de manera paginada.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

less archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una vez que se ejecuta el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

,
 se abrirá una vista de página en la terminal que muestra el contenido del archivo.
 El programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

 se puede manejar igual que 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
less
\family default

\begin_inset Quotes frd
\end_inset

 es otro de los programas interactivos que veremos,
 junto con 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver un registro de los últimos sucesos del sistema podemos paginar el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/var/log/syslog
\family default

\begin_inset Quotes frd
\end_inset

 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

less /var/log/syslog
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
head
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
head
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para mostrar las primeras líneas de un archivo de texto.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

head [-n X] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-n X
\family default

\begin_inset Quotes frd
\end_inset

 para mostrar las primeras 
\begin_inset Quotes fld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes frd
\end_inset

 líneas del archivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
head
\family default

\begin_inset Quotes frd
\end_inset

 muestra las primeras 10 líneas de un archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para ver las primeras cuatro líneas del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/fstab
\family default

\begin_inset Quotes frd
\end_inset

 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

head -n 4 /etc/fstab
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
# Static information about the filesystems.
\end_layout

\begin_layout Plain Layout

\family typewriter
# See fstab(5) for details.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
# <file system>
\begin_inset space ~
\end_inset

<dir>
\begin_inset space ~
\end_inset

<type>
\begin_inset space ~
\end_inset

<options>
\begin_inset space ~
\end_inset

<dump>
\begin_inset space ~
\end_inset

<pass>
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tail
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tail
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para mostrar las últimas líneas de un archivo de texto.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

tail [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n X
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra las últimas 
\begin_inset Quotes fld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes frd
\end_inset

 líneas del archivo en lugar de las 10 últimas.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

:
 sigue en tiempo real los cambios que se realizan en el archivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

 puede ser especialmente útil para monitorear en tiempo real la actividad en un archivo que está siendo constantemente actualizado.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para monitorear los últimos sucesos del sistema podemos observar las últimas líneas del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/var/log/syslog
\family default

\begin_inset Quotes frd
\end_inset

 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

tail -f /var/log/syslog
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
sort
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sort
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para ordenar líneas de texto de un archivo de entrada.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

sort [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

:
 ordena las líneas en orden numérico en lugar de orden alfabético.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 ordena las líneas en orden reverso (descendente).
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

:
 fusiona archivos previamente ordenados.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
-R
\family default
\size default

\begin_inset Quotes frd
\end_inset

:
 en vez de ordenar,
 mezcla el contenido.
\end_layout

\begin_layout Example
Para ordenar alfabéticamente los shells del sistema podemos usar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sort
\family default

\begin_inset Quotes frd
\end_inset

 sobre el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/shells
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sort /etc/shells
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
# /etc/shells:
 valid login shells
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/bash
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/dash
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/rbash
\end_layout

\begin_layout Plain Layout

\family typewriter
/bin/sh
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/bash
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/dash
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/rbash
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/bin/sh
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
uniq
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
uniq
\family default
\size default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para encontrar y eliminar líneas duplicadas 
\emph on
consecutivas
\emph default
 en un archivo de entrada.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

uniq [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

:
 para contar el número de ocurrencias de cada línea en el archivo de entrada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

:
 para mostrar sólo las líneas duplicadas.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-u
\family default

\begin_inset Quotes frd
\end_inset

:
 para mostrar sólo las líneas únicas.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Puesto que el comando solo funciona con lineas duplicadas consecutivas,
 es probable que primero se deba ordenar el archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
strings
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
strings
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para imprimir las cadenas de texto legibles que se encuentran en los archivos binarios.
 Esto es útil para buscar información dentro de archivos binarios que no son legibles para un usuario común.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

strings [-n MINIMO] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
- n
\family default

\begin_inset Quotes frd
\end_inset

 para especificar el 
\emph on
MÍNIMO
\emph default
 de caracteres buscado.
\end_layout

\begin_layout Example
Para buscar las cadenas de 70 caracteres o mas dentro del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/bin/echo
\family default

\begin_inset Quotes frd
\end_inset

 escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

strings -n 70 /bin/echo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
-E disable interpretation of backslash escapes (default)
\end_layout

\begin_layout Plain Layout

\family typewriter
NOTE:
 your shell may have its own version of %s,
 which usually supersedes
\end_layout

\begin_layout Plain Layout

\family typewriter
the version described here.
 Please refer to your shell's documentation
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
wc
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
wc
\family default

\begin_inset Quotes frd
\end_inset

 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
wc
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset


\emph on
Word Count
\emph default

\begin_inset Quotes frd
\end_inset

 (contar palabras).
\end_layout

\end_inset

 se utiliza para contar el número de líneas,
 palabras y bytes en un archivo de texto.
\end_layout

\begin_layout Standard
Esta es su sintaxis:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

wc [opciones] archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A continuación,
 se describen las opciones más comunes:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

:
 cuenta el número de líneas en el archivo especificado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-w
\family default

\begin_inset Quotes frd
\end_inset

:
 cuenta el número de palabras en el archivo especificado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

:
 cuenta el número de bytes en el archivo especificado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

:
 cuenta el número de caracteres en el archivo especificado.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si no se especifican opciones,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
wc
\family default

\begin_inset Quotes frd
\end_inset

 cuenta lineas,
 palabras y caracteres.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
file
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
file
\family default

\begin_inset Quotes frd
\end_inset

 es útil para identificar el formato de un archivo cuando la extensión del archivo no es suficiente para determinar su tipo.
 La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

file archivo...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos averiguar que formato tiene una imagen con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

file imagen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
imagen:
 JPEG image data,
 JFIF standard 1.01,
 resolution (DPI),
 density 300x300,
 segment length 16,
 progressive,
 precision 8,
 739x688,
 components 3
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
cut
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cut
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta de procesamiento de texto que se utiliza para cortar secciones de líneas de texto.
 Permite seleccionar una o varias columnas de texto de un archivo de entrada separado por delimitadores como espacios,
 tabulaciones o comas.
 
\end_layout

\begin_layout Standard
La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

cut opciones archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son las siguientes:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c CANTIDAD
\family default

\begin_inset Quotes frd
\end_inset

:
 Corta una 
\emph on
CANTIDAD
\emph default
 de caracteres.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d DELIMITADOR
\family default

\begin_inset Quotes frd
\end_inset

:
 Especifica el 
\emph on
DELIMITADOR
\emph default
 de columna utilizado en el archivo de entrada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f CAMPOS
\family default

\begin_inset Quotes frd
\end_inset

:
 Selecciona 
\emph on
CAMPOS
\emph default
 específicos separados por el delimitador.
\end_layout

\begin_layout Example
Podemos consultar cuales son los shells usados por los usuarios del sistema con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cut -d :
 -f 7 /etc/passwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph off
Expresiones regulares
\end_layout

\begin_layout Standard
Las expresiones regulares son un conjunto de caracteres especiales que se utilizan para definir 
\emph on
lenguajes
\emph default
.
 Un 
\emph on
lenguaje
\emph default
 es simplemente un conjunto de palabras formado por los caracteres de un determinado 
\emph on
alfabeto
\emph default
.
 A su vez,
 un alfabeto es simplemente un conjunto de 
\emph on
caracteres
\emph default
.
\end_layout

\begin_layout Standard
Los conceptos básicos de las expresiones regulares son:
\end_layout

\begin_layout Description
Caracteres
\begin_inset space ~
\end_inset

literales Los caracteres literales son aquellos que se escriben directamente en la expresión regular.
 
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'h'
\family default

\begin_inset Quotes frd
\end_inset

 define el lenguaje 
\begin_inset Formula $\left\{ h\right\} $
\end_inset

,
 cuya única palabra es la letra 
\begin_inset Formula $h$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
El lenguaje con la palabra vacía (
\begin_inset Formula $\left\{ ''\right\} $
\end_inset

) se define mediante la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
''
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Concatenación La concatenación de lenguajes permite definir un lenguaje nuevo,
 a partir de otros dos.
 Las palabras del nuevo lenguaje se construyen teniendo como prefijos a las palabras del primero y como sufijos a las palabras del segundo.
 La concatenación de lenguajes no utiliza ningún carácter especial,
 simplemente se escribe un lenguaje a continuación de otro.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'si'
\family default

\begin_inset Quotes frd
\end_inset

 es la concatenación del lenguaje definido por las expresiones 
\begin_inset Quotes fld
\end_inset


\family typewriter
's'
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
'i'
\family default

\begin_inset Quotes frd
\end_inset

;
 formando el conjunto 
\begin_inset Formula $\left\{ si\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Union La unión de lenguajes permite definir un lenguaje con palabras de otros dos.
 La denotamos con el carácter 
\begin_inset Quotes fld
\end_inset


\family typewriter
|
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a|b|c'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ a,b,c\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Paréntesis Es posible agrupar expresiones regulares mediante la utilización de paréntesis.
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'(a|b|c)(1|2|3)'
\family default

\begin_inset Quotes frd
\end_inset

 es la concatenación de los lenguajes definidos por 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a|b|c'
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
'1|2|3'
\family default

\begin_inset Quotes frd
\end_inset

;
 en definitiva es el lenguaje 
\begin_inset Formula $\left\{ a1,a2,a3,b1,b2,b3,c1,c2,c3\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Repeticiones Es posible concatenar un lenguaje consigo mismo,
 para dar lugar a nuevos lenguajes:
\end_layout

\begin_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
?
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje a lo sumo una sola vez.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a(1)?z'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ az,a1z\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
{n,m}
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje entre 
\begin_inset Formula $n$
\end_inset

 y 
\begin_inset Formula $m$
\end_inset

 veces.
\end_layout

\begin_deeper
\begin_layout Example
Puede definirse el lenguaje 
\begin_inset Formula $\left\{ aaa,aaaa,aaaaa\right\} $
\end_inset

 con la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'a{3,5}'
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Example
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Puede omitirse el limite inferior para repetir hasta 
\begin_inset Formula $m$
\end_inset

 veces,
 o el limite superior para repetirse a partir de 
\begin_inset Formula $n$
\end_inset

 veces.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
+
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje entre una e infinitas veces.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'x+'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ x,xx,xxx,xxxx,\ldots\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
El operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
*
\family default

\begin_inset Quotes frd
\end_inset

 permite concatenar un lenguaje entre cero e infinitas veces.
\end_layout

\begin_deeper
\begin_layout Example
El lenguaje definido por la expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
'x*'
\family default

\begin_inset Quotes frd
\end_inset

 es el lenguaje 
\begin_inset Formula $\left\{ '',x,xx,xxx,xxxx,\ldots\right\} $
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Anclas Las anclas son caracteres especiales que indican el inicio o el final de una cadena.
\end_layout

\begin_deeper
\begin_layout Itemize
El ancla 
\begin_inset Quotes fld
\end_inset


\family typewriter
^
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para indicar el inicio de una cadena.
\end_layout

\begin_layout Itemize
El ancla 
\begin_inset Quotes fld
\end_inset


\family typewriter
$
\family default

\begin_inset Quotes frd
\end_inset

 indica el final de una cadena.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La utilidad de las anclas quedará en evidencia cuando las utilicemos para buscar contenido dentro de archivos.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Ademas,
 contamos con algunos lenguajes ya definidos,
 como por ejemplo:
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:digit:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter numérico.
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[::digit::]]
\family default

\begin_inset Quotes frd
\end_inset

 define el lenguaje 
\begin_inset Formula $\left\{ 0,1,2,3,4,5,6,7,8,9\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:alpha:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter alfabético.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:alnum:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter alfanumérico.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:lower:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter en minúscula.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:upper:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter en mayúscula.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[:space:]]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter en blanco.
\end_layout

\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
[d-r]
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter entre la letra 
\begin_inset Quotes fld
\end_inset


\family typewriter
d
\family default

\begin_inset Quotes frd
\end_inset

 y la 
\begin_inset Quotes fld
\end_inset


\family typewriter
r
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Example
La expresión regular 
\begin_inset Quotes fld
\end_inset


\family typewriter
[a-c]
\family default

\begin_inset Quotes frd
\end_inset

 define el lenguaje 
\begin_inset Formula $\left\{ a,b,c\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
La clase 
\begin_inset Quotes fld
\end_inset


\family typewriter
.
\family default

\begin_inset Quotes frd
\end_inset

 representa cualquier carácter.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La página web 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://regexr.com/"
literal "true"

\end_inset

 regexr
\begin_inset Quotes frd
\end_inset

 puede utilizarse para experimentar,
 construir y comprender expresiones regulares.
 Es de mucha ayuda para comprender su comportamiento.
\end_layout

\begin_layout Plain Layout
Además,
 el modulo 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://pypi.org/project/exrex/"
literal "true"

\end_inset


\family typewriter
 exrex
\family default

\begin_inset Quotes frd
\end_inset

 de Python puede utilizarse para mostrar el lenguaje generado por expresiones regulares.
 Puede instalarse con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
pip install exrex
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tr
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tr
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
tr
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset

traducir
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es una herramienta para modificar caracteres en una cadena de texto.
 El comando toma la entrada estándar y la traduce o modifica de acuerdo con los parámetros especificados,
 enviando el resultado a la salida estándar.
\end_layout

\begin_layout Standard
Se puede utilizar para realizar diversas operaciones de manipulación de texto,
 como eliminar o reemplazar caracteres,
 cambiar mayúsculas y minúsculas,
 y eliminar espacios en blanco.
 También pueden usarse clases de caracteres.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

tr [opciones] CADENA1 [CADENA2]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones mas comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

:
 sirve para eliminar los caracteres especificados en el conjunto de caracteres a traducir.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

:
 sustituye secuencias de caracteres repetidos,
 por uno solo de ellos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La utilidad de 
\begin_inset Quotes fld
\end_inset


\family typewriter
tr
\family default

\begin_inset Quotes frd
\end_inset

 resultara mas evidente cuando se estudien las redirecciones.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
grep
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset

 son las iniciales de 
\begin_inset Quotes fld
\end_inset


\emph on
Global Regular Expresion Print
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 se utiliza para buscar patrones de texto en el contenido de archivos.
 La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

grep [opciones] patrón archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-i
\family default

\begin_inset Quotes frd
\end_inset

:
 busca el patrón de forma insensible a mayúsculas y minúsculas.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra las líneas que no contienen el patrón.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra el número de líneas que contienen el patrón.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra el número de línea de cada línea que contiene el patrón.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 busca recursivamente en todos los archivos dentro de un directorio y sus subdirectorios.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-E
\family default

\begin_inset Quotes frd
\end_inset

:
 habilita el uso de expresiones regulares extendidas.
 Las expresiones regulares extendidas permiten caracteres especiales como 
\begin_inset Quotes fld
\end_inset


\family typewriter
?
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
+
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
{}
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
|
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
()
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-o
\family default

\begin_inset Quotes frd
\end_inset

:
 muestra sólo la parte de la línea que coincide con el patrón de búsqueda.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-w
\family default

\begin_inset Quotes frd
\end_inset

:
 realiza una búsqueda de palabras completas.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Por defecto,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset

 muestra toda la línea que contiene la coincidencia.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Para buscar cuantas veces aparece la palabra 
\begin_inset Quotes fld
\end_inset


\emph on
GNU
\emph default

\begin_inset Quotes frd
\end_inset

 en la documentación de Bash usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

grep -c GNU /usr/share/doc/bash/*
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/bash.html:9
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/bashref.html:49
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/CHANGES:18
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/COMPAT:0
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/FAQ:10
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/INTRO:1
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/NEWS:10
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/POSIX:0
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/RBASH:0
\end_layout

\begin_layout Plain Layout

\family typewriter
/usr/share/doc/bash/README:2
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para buscar la linea donde se encuentra definido el usuario 
\begin_inset Quotes fld
\end_inset


\family typewriter
root
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

grep root /etc/passwd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
root:x:0:0::/root:/bin/bash
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para encontrar las lineas de un archivo donde aparece la 
\emph on
palabra
\emph default
 
\begin_inset Quotes fld
\end_inset


\family typewriter
if
\family default

\begin_inset Quotes frd
\end_inset

,
 podemos escribir el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

grep -nw if archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\strikeout on
\color lightgray
sed
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
nano
\family default

\begin_inset Quotes frd
\end_inset

 para crear un archivo de texto.
 Luego visualice dicho contenido en el emulador de terminal con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
En una 
\emph on
consola virtual
\emph default
,
 utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset

 para ver el contenido de 
\begin_inset Quotes fld
\end_inset


\family typewriter
/usr/share/doc/git/copyright
\family default

\begin_inset Quotes frd
\end_inset

.
 Tome nota de las dificultades que se presentan al ver el archivo y proponga una forma de solucionarlo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar como mostrar con 
\begin_inset Quotes fld
\end_inset


\family typewriter
head
\family default

\begin_inset Quotes frd
\end_inset

 todas las líneas de un archivo,
 salvo las últimas 3.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo vacío y,
 en un emulador de terminal,
 utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
tail
\family default

\begin_inset Quotes frd
\end_inset

 para 
\emph on
monitorear
\emph default
 su contenido.
 Modifique el contenido del archivo en otra aplicación y observe como esos cambios se reflejan en el emulador de terminal.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree el siguiente archivo y explique por que el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
uniq archivo
\family default

\begin_inset Quotes frd
\end_inset

 muestra palabras repetidas:
\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
hola
\end_layout

\begin_layout Plain Layout

\family typewriter
mundo
\end_layout

\begin_layout Plain Layout

\family typewriter
chau
\end_layout

\begin_layout Plain Layout

\family typewriter
mundo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Descargue la siguiente 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://upload.wikimedia.org/wikipedia/commons/5/53/Fitz_Roy_1.jpg"
literal "true"

\end_inset

 fotografía y utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
strings
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar con que cámara se tomo dicha imagen.
 Verifique dicha información con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
file
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Cree un archivo de python con el siguiente código:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hola mundo
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
file
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar que tipo de archivo es.
\end_layout

\begin_layout Enumerate
Agregue la siguiente linea al comienzo del archivo:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

#!/bin/python
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Vuelva a averiguar el tipo del archivo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo con el siguiente contenido:
\end_layout

\begin_layout Exercise
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=TeX"
inline false
status open

\begin_layout Plain Layout

Año,Marca,Modelo,Descripción,Precio
\end_layout

\begin_layout Plain Layout

1997,Ford,E350,"ac,
 ABS,
 moon",3000.00
\end_layout

\begin_layout Plain Layout

1999,Chevy,Venture,Extended Edition,4900.00
\end_layout

\begin_layout Plain Layout

1999,Chevyr,Venture,"Extended Edition,
 Very Large",5000.00
\end_layout

\begin_layout Plain Layout

1996,Jeep,Grand Cherokee,"MUST SELL!
 air,
 moon roof",4799.00
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cut
\family default

\begin_inset Quotes frd
\end_inset

 para obtener todas las marcas.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar el propósito y funcionamiento de los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
comm
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
diff
\family default

\begin_inset Quotes frd
\end_inset

.
 Pruebe cada uno de ellos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Escriba expresiones regulares que definan los siguientes lenguajes:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left\{ xx,yx\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras compuestas solamente por una cantidad par de letras 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras compuestas solamente por una cantidad impar de letras 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras formadas solamente por letras 
\begin_inset Formula $x$
\end_inset

,
 o solamente por letras 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras que comienzan por letras 
\begin_inset Formula $x$
\end_inset

 y siguen por letras 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras donde cada letra 
\begin_inset Formula $y$
\end_inset

 se encuentra entre un par de letras 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Enumerate
Palabras que terminen en 
\begin_inset Formula $.jpg$
\end_inset

 o 
\begin_inset Formula $.jpeg$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un comando para encontrar líneas de un archivo,
 que 
\emph on
no terminen
\emph default
 en punto y coma 
\begin_inset Quotes fld
\end_inset


\family typewriter
;
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para consultar que hacen las opciones 
\begin_inset Quotes fld
\end_inset


\family typewriter
-A
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
-B
\family default

\begin_inset Quotes frd
\end_inset

 del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
grep
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para consultar que para que sirve el programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
nl
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para consultar que para que sirve el programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
fold
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Section
Secuenciación,
 redirección y tuberías
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Asociación de comandos mediante { }
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Secuenciación
\end_layout

\begin_layout Standard
La secuenciación de comandos en Bash se utiliza para ejecutar varios comandos de forma consecutiva en una sola línea.
 Se pueden utilizar diferentes operadores de secuenciación para controlar cómo se ejecutan los comandos en función de sus resultados.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los operadores de secuenciación,
 son otras de las cuestiones de las cuales se encarga el shell.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
;
\family default

\begin_inset Quotes frd
\end_inset

:
 Se utiliza para ejecutar varios comandos en secuencia,
 independientemente del resultado de cada uno de ellos.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
&&
\family default

\begin_inset Quotes frd
\end_inset

:
 Se utiliza para ejecutar el siguiente comando solo si el comando anterior tuvo éxito.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
||
\family default

\begin_inset Quotes frd
\end_inset

:
 Se utiliza para ejecutar el siguiente comando solo si el comando anterior falló.
\end_layout

\begin_layout Example
Para crear dos archivos y verificar que se hayan creado,
 podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch archivo1 archivo2;
 ls archivo1 archivo2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos crear un directorio e ingresar en el,
 en caso de éxito con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir directorio && cd directorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vale la pena observar que sucede en caso de fallo:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir .
 && cd /
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
También podemos mostrar un mensaje en caso de error:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rmdir .
 || echo 
\begin_inset Quotes fld
\end_inset

El directorio no se ha borrado.
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Redirección
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Explicar entradas y salidas
\end_layout

\begin_layout Plain Layout
Agregar ejemplo en python
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las redirecciones en Bash son una forma de cambiar la entrada y/o salida de un comando a diferentes archivos o dispositivos.
\end_layout

\begin_layout Standard
Hay varios tipos de redirecciones en Bash:
\end_layout

\begin_layout Itemize
Redirección de salida estándar 
\begin_inset Quotes fld
\end_inset


\family typewriter
>
\family default

\begin_inset Quotes frd
\end_inset

:
 esta redirección cambia la salida en pantalla del comando a un archivo.
 La sintaxis básica de la redirección de salida estándar es:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando > archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La redirección de salida estándar substituye por completo el contenido de un archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Si queremos que la salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 se guarde en el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
lista.txt
\family default

\begin_inset Quotes frd
\end_inset

,
 podemos usar la redirección de salida de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls > lista.txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Anexación de salida estándar 
\begin_inset Quotes fld
\end_inset


\family typewriter
>>
\family default

\begin_inset Quotes frd
\end_inset

:
 La redirección 
\begin_inset Quotes fld
\end_inset


\family typewriter
>>
\family default

\begin_inset Quotes frd
\end_inset

 en Bash se utiliza para redirigir la salida estándar de un comando a un archivo y agregarla al final del archivo en lugar de reemplazar su contenido,
 como hace la redirección "
\family typewriter
>
\family default
".
 La sintaxis básica de la anexación de salida estándar es:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando >> archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Si queremos crear un archivo con los textos 
\begin_inset Quotes fld
\end_inset


\emph on
Hola mundo
\emph default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\emph on
Chau mundo
\emph default

\begin_inset Quotes frd
\end_inset

 en dos líneas,
 podes usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 
\begin_inset Quotes fld
\end_inset

Hola mundo
\begin_inset Quotes frd
\end_inset

 > saludo
\end_layout

\begin_layout Plain Layout

echo 
\begin_inset Quotes fld
\end_inset

Chau mundo
\begin_inset Quotes frd
\end_inset

 >> saludo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Redirección de salida de error 
\begin_inset Quotes fld
\end_inset


\family typewriter
2>
\family default

\begin_inset Quotes frd
\end_inset

:
 Esta redirección cambia la salida de error de un comando a un archivo.
 La sintaxis básica de la redirección de salida estándar es:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando 2> archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La salida de error en sistemas Linux es una salida de información que se genera cuando un comando o programa encuentra un error durante su ejecución.
 Esta salida suele estar separada de la salida estándar;
 aunque se suele mostrar en la misma pantalla.
 
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para escribir los mensajes de error de 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 en un archivo usamos el siguiente comando:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir .
 2> error
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Redirección de salidas 
\begin_inset Quotes fld
\end_inset


\family typewriter
&>
\family default

\begin_inset Quotes frd
\end_inset

:
 La redirección 
\begin_inset Quotes fld
\end_inset


\family typewriter
&>
\family default

\begin_inset Quotes frd
\end_inset

 en Bash es una forma de redireccionar tanto la salida estándar como la salida de error estándar de un comando a un archivo o dispositivo.
 La sintaxis básica es la siguiente:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando &> archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para redirigir ambas salidas del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
mkdir
\family default

\begin_inset Quotes frd
\end_inset

 en un archivo usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir -v carpeta carpeta &> salidas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Además,
 en Linux y sistemas similares,
 la carpeta 
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev
\family default

\begin_inset Quotes frd
\end_inset

 contiene algunos archivos especiales que son útiles a la hora de combinarlos con redirecciones.
 Algunos de ellos son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset

/
\family typewriter
dev/null
\family default

\begin_inset Quotes frd
\end_inset

:
 un archivo que no almacena ningún dato,
 sino que simplemente los descarta.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/tty*
\family default

\begin_inset Quotes frd
\end_inset

:
 son archivos que representan a las consolas virtuales.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/pts/*
\family default

\begin_inset Quotes frd
\end_inset

:
 son archivos que representan a los emuladores de terminales.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/zero
\family default

\begin_inset Quotes frd
\end_inset

:
 un archivo infinito que contiene datos cero (
\begin_inset Formula $0$
\end_inset

).
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
/dev/random
\family default

\begin_inset Quotes frd
\end_inset

:
 un archivo que genera datos aleatorios.
\end_layout

\begin_layout Example
Podemos hacer una lista de todos los archivos del sistema ocultando los errores de permisos con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls / -R 2> /dev/null
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tuberías
\end_layout

\begin_layout Standard
En Bash,
 una tubería (también conocida como 
\begin_inset Quotes fld
\end_inset


\emph on
pipe
\emph default

\begin_inset Quotes frd
\end_inset

 en inglés) permite conectar la 
\emph on
salida
\emph default
 de un comando con la 
\emph on
entrada
\emph default
 de otro,
 lo que permite crear una cadena de procesos que trabajan juntos para realizar una tarea más compleja.
\end_layout

\begin_layout Standard
La sintaxis de una tubería es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

comando | comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Si queremos ver los primeros diez archivos del directorio actual podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls | head
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos contar cuantas veces aparece una 
\begin_inset Quotes fld
\end_inset

palabra
\begin_inset Quotes frd
\end_inset

 en un archivo utilizando tuberías de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat archivo | grep palabra | wc -l
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para hacer una lista de las palabras repetidas en un archivo podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat archivo | tr 
\begin_inset Quotes fld
\end_inset

 
\begin_inset Quotes fld
\end_inset

 
\begin_inset Quotes fld
\end_inset


\backslash
n
\begin_inset Quotes frd
\end_inset

 | sort | uniq -d
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
tee
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tee
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para leer desde la entrada estándar (generalmente datos de un comando anterior a través de una tubería) y escribir tanto en la salida estándar como en uno o más archivos especificados.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

tee [-a] archivo1 [archivo2 ...]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

 permite que 
\begin_inset Quotes fld
\end_inset


\family typewriter
tee
\family default

\begin_inset Quotes frd
\end_inset

 agregue contenido a los archivos en lugar de sobrescribirlos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tee
\family default

\begin_inset Quotes frd
\end_inset

 es útil cuando necesitas mostrar o almacenar la salida de un comando en un archivo y al mismo tiempo visualizarla en la pantalla.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos agregar contenido a muchos archivos usando el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 'print(
\begin_inset Quotes fld
\end_inset

Fin del programa.
\begin_inset Quotes frd
\end_inset

)' | tee -a *.py
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Si necesitamos ejecutar un programa y al mismo tiempo guardar su salida a modo de registro podemos usar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tee
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

python entrenamiento.py | tee log.txt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar ejercicio para averiguar contraseña de script de python
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar sobre los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
true
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
false
\family default

\begin_inset Quotes frd
\end_inset

.
 Utilice secuenciación para mostrar un mensaje en pantalla luego de la ejecución de cada uno de ellos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Escriba un comando para crear un archivo con el contenido de 
\emph on
todos los archivos
\emph default
 del directorio actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 Piense que ocurre tras ejecutar el siguiente comando.
 Verifíquelo.
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 2 * 3 > 10
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Busque en Internet o consulte a alguna I.
 A.
 sobre la redirección de entrada 
\begin_inset Quotes fld
\end_inset


\family typewriter
<
\family default

\begin_inset Quotes frd
\end_inset

.
 Explique que hace el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

cat < archivo1 > archivo2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
¿Cómo puede utilizarse la redirección de salida estándar para crear archivos vacíos,
 sin usar 
\begin_inset Quotes fld
\end_inset


\family typewriter
touch
\family default

\begin_inset Quotes frd
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
¿Cuanto ocupa un archivo con todas las 
\begin_inset Quotes fld
\end_inset

contraseñas
\begin_inset Quotes frd
\end_inset

 posibles de cuatro letras formadas por caracteres alfabéticos en minúscula?
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo con una lista de todos los archivos del sistema que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.jpg
\family default

\begin_inset Quotes frd
\end_inset

.
 Evite mostrar errores en pantalla.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Cree un archivo con muchos números.
 Escriba secuencias de tuberías para encontrar el máximo y el mínimo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 Escriba una secuencia de tuberías para observar la tercer linea de un archivo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Escriba una secuencia de tuberías para averiguar cual es el archivo con mayor cantidad de líneas.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para contar cuantos directorios hay en la carpeta actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para averiguar cuantos emuladores de terminal hay abiertos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para mostrar los tamaños de los archivos del directorio actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para averiguar cuantas veces se ejecutó el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para averiguar cuantos archivos en 
\begin_inset Quotes fld
\end_inset


\family typewriter
/usr/share/doc
\family default

\begin_inset Quotes frd
\end_inset

 contienen la palabra 
\begin_inset Quotes fld
\end_inset


\family typewriter
GNU
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Utilice los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
echo
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
tee
\family default

\begin_inset Quotes frd
\end_inset

 para agregar contenido al comienzo de un archivo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Considere el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

a | b | c && d || e | f
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
¿Cuántos programas ejecuta el shell si el programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
c
\family default

\begin_inset Quotes frd
\end_inset

 falla?
\end_layout

\begin_layout Enumerate
¿Cuántos programas ejecuta el shell si los programas 
\begin_inset Quotes fld
\end_inset


\family typewriter
c
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
d
\family default

\begin_inset Quotes frd
\end_inset

 tienen éxito?
\end_layout

\begin_layout Enumerate
¿Cuántos programas ejecuta el shell si 
\begin_inset Quotes fld
\end_inset


\family typewriter
c
\family default

\begin_inset Quotes frd
\end_inset

 tiene éxito y 
\begin_inset Quotes fld
\end_inset


\family typewriter
d
\family default

\begin_inset Quotes frd
\end_inset

 falla?
\end_layout

\begin_layout Chapter
Comandos avanzados
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
RUID VS EUID
\end_layout

\end_inset


\end_layout

\begin_layout Section
Usuarios,
 grupos y permisos
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
whoami
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
whoami
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
whoami
\family default

\begin_inset Quotes frd
\end_inset

 significa 
\begin_inset Quotes fld
\end_inset


\emph on
Who Am I
\emph default

\begin_inset Quotes frd
\end_inset

 (quién soy yo).
\end_layout

\end_inset

 muestra el nombre de usuario de la cuenta actualmente activa en la sesión de terminal.
 Es útil cuando se necesita saber el nombre de usuario para realizar una acción o para verificar que la cuenta activa es la deseada.
\end_layout

\begin_layout Example
Para saber cuál es el usuario activo,
 simplemente escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

whoami
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
alumno
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
id
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
id
\family default

\begin_inset Quotes frd
\end_inset

 obtiene información sobre la identidad de un usuario,
 como su nombre de usuario,
 identificador de usuario (
\emph on
UID
\emph default
),
 identificador de grupo (
\emph on
GID
\emph default
) y los grupos a los que pertenece.
 La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

id [usuario]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica el usuario,
 se considera el usuario que lo ejecuta.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Dicha información se obtiene del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/passwd
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para conocer información del usuario 
\emph on
root
\emph default
 usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

id root
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
uid=0(root) gid=0(root) grupos=0(root)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
who
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
who
\family default

\begin_inset Quotes frd
\end_inset

 muestra información acerca de los usuarios que están actualmente conectados al sistema.
 Esta información incluye el nombre de usuario,
 la consola virtual en la que están conectados,
 la fecha y hora en que iniciaron sesión y la dirección IP de la máquina desde la que se conectaron.
\end_layout

\begin_layout Example
Para saber cuáles usuarios están conectados podemos escribir:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

who
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
damian tty1 2023-05-01 04:21
\end_layout

\begin_layout Plain Layout

\family typewriter
root
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

tty2 2023-05-03 06:01 (190.2.103.252)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
su
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
su
\family default

\begin_inset Quotes frd
\end_inset

 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
su
\family default

\begin_inset Quotes frd
\end_inset

 es un acrónimo de 
\begin_inset Quotes fld
\end_inset


\emph on
substituir usuario
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 es utilizado para cambiar de usuario en una sesión de terminal.
 La básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

su [USUARIO]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un 
\emph on
USUARIO
\emph default
,
 se cambia al usuario 
\emph on
root
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al ingresar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
su
\family default

\begin_inset Quotes frd
\end_inset

,
 el sistema solicitará la contraseña 
\emph on
del usuario al que se quiere cambiar
\emph default
.
 Si la contraseña es correcta se iniciará una shell para el usuario indicado.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para empezar a utilizar la terminal como el usuario root escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

su
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
sudo
\end_layout

\begin_layout Standard
Con 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

,
 un usuario común puede obtener temporariamente los permisos de un usuario con otros privilegios,
 como el superusuario (
\emph on
root
\emph default
),
 para realizar tareas que requieren permisos especiales.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

sudo [-u USUARIO] comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un 
\emph on
USUARIO
\emph default
,
 se obtienen los privilegios del usuario 
\emph on
root
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al ingresar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

,
 el sistema solicitará la contraseña 
\emph on
del usuario que ejecuta el comando
\emph default
.
 Si la contraseña es correcta y el usuario tiene permisos para usar 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

,
 el comando especificado se ejecutará con los permisos correspondientes.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver el archivo de contraseñas de Linux podemos usar el siguiente comando:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo head -n 5 /etc/shadow
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
root:x:0:0::/root:/bin/bash
\end_layout

\begin_layout Plain Layout

\family typewriter
bin:x:1:1::/:/usr/bin/nologin
\end_layout

\begin_layout Plain Layout

\family typewriter
daemon:x:2:2::/:/usr/bin/nologin
\end_layout

\begin_layout Plain Layout

\family typewriter
mail:x:8:12::/var/spool/mail:/usr/bin/nologin
\end_layout

\begin_layout Plain Layout

\family typewriter
ftp:x:14:11::/srv/ftp:/usr/bin/nologin
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Para usar la consola como superusuario,
 pero sin saber la contraseña de 
\emph on
root
\emph default
 podemos usar:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo su
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
passwd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
passwd
\family default

\begin_inset Quotes frd
\end_inset

 es utilizado para cambiar la contraseña de un usuario.
 La básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

passwd [opciones] [usuario]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se ejecuta sin argumentos,
 se cambiará la contraseña del usuario actual.
 El comando pedirá al usuario que introduzca la contraseña 
\emph on
actual
\emph default
 y,
 a continuación,
 que introduzca la nueva contraseña dos veces para confirmarla.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las contraseñas de los usuarios en Linux están cifradas y almacenadas en un archivo protegido llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
/etc/shadow
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

:
 Bloquea la cuenta del usuario.
 Esto significa que el usuario no podrá iniciar sesión hasta que la cuenta sea desbloqueada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-u
\family default

\begin_inset Quotes frd
\end_inset

:
 Desbloquea una cuenta que ha sido bloqueada.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

:
 Elimina la contraseña del usuario.
 Esto permite que el usuario inicie sesión sin una contraseña.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-e
\family default

\begin_inset Quotes frd
\end_inset

:
 Hace que la contraseña del usuario expire.
 Esto significa que el usuario deberá cambiar su contraseña la próxima vez que inicie sesión.
\end_layout

\begin_layout Subsection
Permisos en Linux
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
En algún lugar hay que hablar del usuario root.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los permisos Linux son utilizados para proteger los archivos y directorios del sistema de accesos no autorizado.
 Cada archivo y directorio es propiedad de un usuario y un grupo;
 y el propietario del archivo o directorio puede especificar quién tiene acceso a ellos y en qué nivel.
\end_layout

\begin_layout Standard
Existen tres tipos de permisos:
 de usuario (
\emph on
u
\emph default
),
 de grupo (
\emph on
g
\emph default
) y otros (
\emph on
o
\emph default
),
 y cada uno de ellos puede tener tres permisos posibles:
 lectura (
\emph on
r
\emph default
),
 escritura (
\emph on
w
\emph default
) y ejecución (
\emph on
x
\emph default
).
\end_layout

\begin_layout Itemize
El permiso de lectura (
\emph on
r
\emph default
) permite al usuario ver el contenido de un archivo o listar los archivos de un directorio.
\end_layout

\begin_layout Itemize
El permiso de escritura (
\emph on
w
\emph default
) permite al usuario modificar el contenido de un archivo o crear,
 eliminar y renombrar archivos dentro de un directorio.
\end_layout

\begin_layout Itemize
El permiso de ejecución (
\emph on
x
\emph default
) permite al usuario ejecutar un archivo o entrar en un directorio.
\end_layout

\begin_layout Example
Observemos la salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls -l ~
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
-rwxr-xr-x 1 alumno wheel 15832 abr 12 19:33 dsh*
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 alumno wheel
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1130 abr 12 19:32 dsh.c
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Podemos observar que el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
dsh
\family default

\begin_inset Quotes frd
\end_inset

 tiene los permisos 
\begin_inset Quotes fld
\end_inset


\family typewriter
rwxr-xr-x
\family default

\begin_inset Quotes frd
\end_inset

.
 Los primeros tres permisos se corresponden con los permisos de usuario (
\emph on
u
\emph default
),
 los siguientes con los permisos del grupo (
\emph on
g
\emph default
) y los últimos son los permisos de los otros (
\emph on
o
\emph default
) usuarios.
 En definitiva el usuario 
\begin_inset Quotes fld
\end_inset


\emph on
alumno
\emph default

\begin_inset Quotes frd
\end_inset

 tiene todos los permisos,
 pero los del grupo 
\begin_inset Quotes fld
\end_inset


\emph on
wheel
\emph default

\begin_inset Quotes frd
\end_inset

 y demás usuarios no tienen permiso de escritura.
\end_layout

\begin_layout Itemize
Para el caso del archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
dsh.c
\family default

\begin_inset Quotes frd
\end_inset

,
 la única diferencia es que nadie puede ejecutarlo.
\end_layout

\end_deeper
\begin_layout Example
En ocasiones estos permisos se representan mediante un número de 3 dígitos en base 8,
 donde cada dígito representa los permisos para un grupo diferente de usuarios:
 el propietario del archivo,
 el grupo al que pertenece el archivo y otros usuarios.
 Cada dígito es una suma de valores numéricos que representan los permisos para leer,
 escribir y ejecutar.
\end_layout

\begin_layout Example
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Los valores numéricos correspondientes a cada permiso son:
\end_layout

\begin_layout Itemize
\begin_inset Formula $4$
\end_inset

 para el permiso de lectura (
\emph on
r
\emph default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $2$
\end_inset

 para el permiso de escritura (
\emph on
w
\emph default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1$
\end_inset

 para el permiso de ejecución (
\emph on
x
\emph default
).
\end_layout

\begin_layout Standard
Por lo tanto,
 la suma de los valores numéricos para los distintos permisos es:
\end_layout

\begin_layout Itemize
\begin_inset Formula $0$
\end_inset

:
 sin permisos (
\family typewriter
---
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1$
\end_inset

:
 permiso de ejecución (
\family typewriter
--x
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $2$
\end_inset

:
 permiso de escritura (
\family typewriter
-w-
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1+2=3$
\end_inset

:
 permiso de escritura y ejecución (
\family typewriter
-wx
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $4$
\end_inset

:
 permiso de lectura (
\family typewriter
r--
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1+4=5$
\end_inset

:
 permiso de lectura y ejecución (
\family typewriter
r-x
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $2+4=6$
\end_inset

:
 permiso de lectura y escritura (
\family typewriter
rw-
\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $1+2+4=7$
\end_inset

:
 permiso de lectura,
 escritura y ejecución (
\family typewriter
rwx
\family default
).
\end_layout

\begin_layout Example
Si vemos que un archivo tiene permisos 
\begin_inset Formula $644$
\end_inset

,
 esto significa que el propietario del archivo tiene permisos de lectura y escritura (
\begin_inset Formula $6$
\end_inset

),
 mientras que el grupo y otros usuarios solo tienen permiso de lectura (
\begin_inset Formula $4$
\end_inset

).
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
chown
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
chown
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
chown
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\begin_inset Quotes fld
\end_inset


\emph on
Change Owner
\emph default

\begin_inset Quotes frd
\end_inset

 (cambiar dueño).
\end_layout

\end_inset

 se utiliza para cambiar el propietario y/o grupo de un archivo o directorio.
 La sintaxis general del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

chown [-R] usuario[:grupo] archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-R
\family default

\begin_inset Quotes frd
\end_inset

 para operar recursivamente sobre los directorios.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante tener en cuenta que generalmente solo el usuario 
\emph on
root
\emph default
 puede cambiar la propiedad de un archivo o directorio.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
El usuario 
\emph on
root
\emph default
 puede apropiarse de un 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 con el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chown root archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
chmod
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
chmod
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
chmod
\family default

\begin_inset Quotes frd
\end_inset

 significa 
\begin_inset Quotes fld
\end_inset

cambiar modo
\begin_inset Quotes frd
\end_inset

 (del inglés:
 
\begin_inset Quotes fld
\end_inset


\emph on
Change Mode
\emph default

\begin_inset Quotes frd
\end_inset

).
\end_layout

\end_inset

 se utiliza para cambiar los permisos de acceso a archivos y directorios.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
chmod
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

chmod [-R] modo archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-R
\family default

\begin_inset Quotes frd
\end_inset

 para operar recursivamente sobre los directorios.
\end_layout

\begin_layout Standard
El modo puede especificarse en forma numérica o usando caracteres especiales.
 La sintaxis básica del modo simbólico es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

[ugoa][+-=][rwx]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Donde:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
u
\family default

\begin_inset Quotes frd
\end_inset

:
 representa al usuario propietario del archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
g
\family default

\begin_inset Quotes frd
\end_inset

:
 representa al grupo al que pertenece el archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
o
\family default

\begin_inset Quotes frd
\end_inset

:
 representa a otros usuarios que no son el propietario ni pertenecen al grupo.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
a
\family default

\begin_inset Quotes frd
\end_inset

:
 representa a todos los usuarios.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
+
\family default

\begin_inset Quotes frd
\end_inset

:
 agrega los permisos especificados al archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-
\family default

\begin_inset Quotes frd
\end_inset

:
 elimina los permisos especificados del archivo/directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
=
\family default

\begin_inset Quotes frd
\end_inset

:
 establece los permisos especificados y elimina cualquier otro permiso que no sea el especificado.
\end_layout

\begin_layout Example
Para agregar permiso de 
\emph on
lectura
\emph default
 al usuario propietario de 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod u+r archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para eliminar permiso de 
\emph on
escritura
\emph default
 al grupo al que pertenece 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod g-w archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para establecer permiso de 
\emph on
ejecución
\emph default
 a otros usuarios que no son propietarios de 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 ni pertenecen al grupo,
 podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod o=x archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Para darles todos los permisos a todos los usuarios sobre 
\begin_inset Quotes fld
\end_inset


\family typewriter
archivo
\family default

\begin_inset Quotes frd
\end_inset

 podemos escribir:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod =777 archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
useradd
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
useradd
\family default

\begin_inset Quotes frd
\end_inset

 es utilizado para crear una nueva cuenta de usuario en el sistema.
 A continuación se explican en detalle los aspectos más importantes del comando.
\end_layout

\begin_layout Standard
Sintaxis básica:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

useradd [opciones] usuario
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

:
 Crea automáticamente el directorio personal del usuario en 
\begin_inset Quotes fld
\end_inset


\family typewriter
/home/usuario
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-g GRUPO
\family default

\begin_inset Quotes frd
\end_inset

:
 Setea el 
\emph on
GRUPO
\emph default
 al que pertenece el usuario.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante destacar que para crear una cuenta de usuario con 
\begin_inset Quotes fld
\end_inset


\family typewriter
useradd
\family default

\begin_inset Quotes frd
\end_inset

,
 es necesario tener privilegios de superusuario en el sistema.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
userdel
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
userdel
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para eliminar una cuenta de usuario existente.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
userdel
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

userdel [opciones] usuario
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 esta opción se utiliza para eliminar la cuenta de usuario y sus archivos personales.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

:
 esta opción se utiliza para forzar la eliminación de la cuenta de usuario,
 incluso si está actualmente en uso o si tiene procesos en ejecución.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al igual que 
\begin_inset Quotes fld
\end_inset


\family typewriter
useradd
\family default

\begin_inset Quotes frd
\end_inset

,
 para usar 
\begin_inset Quotes fld
\end_inset


\family typewriter
userdel
\family default

\begin_inset Quotes frd
\end_inset

 es necesario tener privilegios de superusuario en el sistema.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
usermod
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
usermod
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para realizar cambios en la información de un usuario existente en el sistema.
 Puede utilizarse para modificar el nombre de usuario,
 el directorio de inicio,
 el grupo principal,
 los grupos secundarios,
 la información del usuario,
 entre otros aspectos relacionados con la configuración del usuario.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
usermod
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

usermod [opciones] usuario
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-l NOMBRE
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite cambiar el 
\emph on
NOMBRE
\emph default
 de usuario.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d DIRECTORIO
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite cambiar el 
\emph on
DIRECTORIO
\emph default
 de personal del usuario.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La ruta al 
\emph on
DIRECTORIO
\emph default
 debe ser una ruta absoluta.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-m
\family default

\begin_inset Quotes frd
\end_inset

:
 Mueve el contenido del directorio personal a una nueva ubicación.
 Sólo válida si se usa con 
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-g GRUPO
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite cambiar el 
\emph on
GRUPO
\emph default
 principal del usuario.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-G GRUPOS
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite 
\emph on
establecer
\emph default
 los 
\emph on
GRUPOS
\emph default
 a los que pertenece el usuario.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a GRUPO
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite 
\emph on
añadir
\emph default
 un 
\emph on
GRUPO
\emph default
 secundario al usuario.
 Sólo válida si se usa con 
\begin_inset Quotes fld
\end_inset


\family typewriter
-G
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-s SHELL
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite cambiar el 
\emph on
SHELL
\emph default
 del usuario.
\end_layout

\begin_layout Example
Para agregar al usuario 
\begin_inset Quotes fld
\end_inset


\family typewriter
nuevo
\family default

\begin_inset Quotes frd
\end_inset

 al grupo 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

usermod -a -G sudo nuevo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Escriba un comando para 
\emph on
quitar
\emph default
 permiso de ejecución a todos los usuarios para cada uno de los archivos del directorio actual que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.py
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Escriba un comando para que todos los usuarios puedan leer el contenido de los archivos que terminen en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.txt
\family default

\begin_inset Quotes frd
\end_inset

 dentro de la carpeta actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un comando para que 
\emph on
ningún usuario
\emph default
 tenga 
\emph on
ningún permiso
\emph default
 en los archivos que terminan en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.key
\family default

\begin_inset Quotes frd
\end_inset

 de la carpeta actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Cree el usuario 
\begin_inset Quotes fld
\end_inset


\family typewriter
visiante
\family default

\begin_inset Quotes frd
\end_inset

 mediante el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
useradd visitante
\family default

\begin_inset Quotes frd
\end_inset

.
 Intente identificarse como dicho usuario en una consola virtual.
 Explique por que no es posible,
 y solucione el problema.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 El shell por defecto de 
\begin_inset Quotes fld
\end_inset


\family typewriter
visitante
\family default

\begin_inset Quotes frd
\end_inset

 es sh.
 Modifique el usuario para que utilice por defecto bash.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una secuencia de tuberías para determinar en que lugares del sistema de archivo,
 el usuario 
\begin_inset Quotes fld
\end_inset


\family typewriter
visitante
\family default

\begin_inset Quotes frd
\end_inset

 puede escribir.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Cree y establezca un directorio personal para el usuario 
\begin_inset Quotes fld
\end_inset


\family typewriter
visitante
\family default

\begin_inset Quotes frd
\end_inset

.
 Asegúrese de que el usuario tenga los permisos correspondientes para poder trabajar en su carpeta personal.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba una expresión regular que defina el lenguaje de los permisos en Linux,
 tal como pueden observarse en la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-l
\family default

\begin_inset Quotes frd
\end_inset

 del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Section
Procesos y tareas
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
ps
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ps
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
ps
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset


\emph on
Process Status
\emph default

\begin_inset Quotes frd
\end_inset

 (estado del proceso).
\end_layout

\end_inset

 se utiliza para obtener información sobre los procesos en ejecución en el sistema.
 Proporciona una visión general de los procesos activos,
 sus identificadores,
 uso de recursos y otra información relevante.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ps
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

ps [opciones]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-e
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra todos los procesos,
 incluyendo los de otros usuarios.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-f
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra información adicional sobre los procesos,
 incluyendo la lista completa de argumentos y opciones utilizadas al iniciar cada proceso.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-U USUARIO
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra todos los procesos del 
\emph on
USUARIO
\emph default
.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
–-forest
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra los procesos dibujados en un árbol.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si se utiliza sin opciones,
 el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ps
\family default

\begin_inset Quotes frd
\end_inset

 muestra los procesos asociados a la terminal actual.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para ver los procesos corriendo en la terminal actual escribimos el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ps
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

PID TTY
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

TIME CMD
\end_layout

\begin_layout Plain Layout

\family typewriter
18614 pts/0 00:00:00 bash
\end_layout

\begin_layout Plain Layout

\family typewriter
19454 pts/0 00:00:00 ps
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
nice
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
nice
\family default

\begin_inset Quotes frd
\end_inset

 permite establecer la prioridad del programa en relación con otros procesos en el sistema,
 lo que puede afectar la asignación de tiempo de CPU y los recursos disponibles.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
nice
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

nice [opciones] comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes del comando incluyen:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n NIVEL
\family default

\begin_inset Quotes frd
\end_inset

:
 Establece el 
\emph on
NIVEL
\emph default
 de prioridad del proceso,
 donde un número más bajo representa una mayor prioridad.
 El rango de valores generalmente va de -20 a 19.
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-p PID
\family default

\begin_inset Quotes frd
\end_inset

:
 Cambia la prioridad de un proceso existente identificado por su 
\emph on
PID
\emph default
.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
top
\end_layout

\begin_layout Standard
El comando top es una herramienta de monitoreo en sistemas Unix y Linux que proporciona una visión dinámica y en tiempo real de los procesos en ejecución en el sistema,
 así como información sobre la utilización de recursos del sistema,
 como la CPU y la memoria.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ps
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

top [-d n]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se especifica la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

 puede elegirse cada cuantos segundos se actualizará la información.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
top
\family default

\begin_inset Quotes frd
\end_inset

 es otro de los programas interactivos que vemos en esta materia.
 Para salir de 
\begin_inset Quotes fld
\end_inset


\family typewriter
top
\family default

\begin_inset Quotes frd
\end_inset

,
 puedes presionar la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 q.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Señales
\end_layout

\begin_layout Standard
Las señales son mecanismos utilizados para comunicar eventos o solicitudes a los procesos en un sistema.
 Las señales permiten que los procesos interactúen entre sí,
 notifiquen eventos importantes y realicen acciones específicas en respuesta a eventos del sistema.
\end_layout

\begin_layout Standard
Las señales son enviadas por el kernel del sistema operativo o por otros procesos y se utilizan para notificar eventos como:
\end_layout

\begin_layout Itemize
Interrupciones de hardware:
 Por ejemplo,
 una señal puede generarse cuando se recibe un evento de entrada/salida,
 como la llegada de datos a través de internet.
\end_layout

\begin_layout Itemize
Eventos generados por el sistema operativo:
 El kernel puede enviar señales a los procesos para notificar eventos como cambios de estado,
 finalización de procesos hijos,
 violaciones de acceso a memoria,
 etc.
\end_layout

\begin_layout Itemize
Solicitudes del usuario:
 Un proceso puede enviar una señal a otro proceso para solicitar una acción específica,
 como detener o finalizar su ejecución.
\end_layout

\begin_layout Standard
Cada señal tiene un número asociado y un nombre simbólico que se utiliza para identificarla.
 Algunas señales comunes incluyen:
\end_layout

\begin_layout Description
SIGINT
\begin_inset space ~
\end_inset

(2):
 Generalmente se utiliza para solicitar la interrupción de un programa en ejecución.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Esta señal puede enviarse mediante la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+C.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Description
SIGKILL
\begin_inset space ~
\end_inset

(9):
 Enviada para forzar la terminación inmediata de un proceso sin posibilidad de capturarla.
\end_layout

\begin_layout Description
SIGTSTP
\begin_inset space ~
\end_inset

(20):
 Enviada para detener la ejecución de un proceso.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Esta señal puede enviarse mediante la combinación de teclas 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Ctrl+Z.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Description
SIGCONT
\begin_inset space ~
\end_inset

(18):
 Enviada para reanudar la ejecución de un proceso detenido.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
kill
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
kill
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para enviar señales a procesos específicos,
 lo que permite interactuar con ellos y controlar su comportamiento.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
kill
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

kill -s SEÑAL PID...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Aunque el nombre 
\begin_inset Quotes fld
\end_inset


\family typewriter
kill
\family default

\begin_inset Quotes frd
\end_inset

 sugiere que su función principal es terminar procesos,
 en realidad puede enviar una variedad de señales a los procesos,
 incluyendo señales para finalizar,
 detener,
 reanudar,
 informar o manejar de manera personalizada.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tareas
\end_layout

\begin_layout Standard
Una tarea se refiere a la ejecución de un programa o comando en segundo plano o en primer plano dentro de una sesión de shell.
 Las tareas permiten ejecutar múltiples comandos simultáneamente y gestionar su ejecución.
\end_layout

\begin_layout Standard
En Bash,
 existen dos tipos de tareas:
\end_layout

\begin_layout Itemize
Tareas en primer plano:
 Una tarea en primer plano es aquella cuya ejecución bloquea la terminal hasta que se complete.
 Cuando ejecutas un comando sin colocar el carácter 
\begin_inset Quotes fld
\end_inset


\family typewriter
&
\family default

\begin_inset Quotes frd
\end_inset

 al final,
 se ejecuta en primer plano.
 Mientras la tarea esté en ejecución,
 el control de la terminal se mantiene en esa tarea y no se puede ejecutar ningún otro comando hasta que la tarea actual finalice o se suspenda.
\end_layout

\begin_layout Itemize
Tareas en segundo plano:
 Una tarea en segundo plano es aquella cuya ejecución no bloquea la terminal,
 lo que significa que puedes seguir interactuando con la terminal y ejecutar otros comandos mientras la tarea se ejecuta en segundo plano.
 Para ejecutar un comando en segundo plano,
 se agrega el carácter 
\begin_inset Quotes fld
\end_inset


\family typewriter
&
\family default

\begin_inset Quotes frd
\end_inset

 al final del comando.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las tareas,
 son otro de los trabajos que lleva a cabo el interprete de linea de comandos.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para ejecutar un navegador desde la terminal,
 pero sin bloquearla,
 usamos el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

firefox &
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
jobs
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
jobs
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para mostrar las tareas en ejecución en el shell actual.
 Los trabajos son procesos que se ejecutan en segundo plano (
\begin_inset Quotes fld
\end_inset


\emph on
background
\emph default

\begin_inset Quotes frd
\end_inset

) o en primer plano (
\begin_inset Quotes fld
\end_inset


\emph on
foreground
\emph default

\begin_inset Quotes frd
\end_inset

) dentro de una sesión de shell.
\end_layout

\begin_layout Standard
La sintaxis básica del comando es simplemente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

jobs [-p]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se especifica la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-p
\family default

\begin_inset Quotes frd
\end_inset

 se muestran los números de procesos en vez de numero de tareas.
\end_layout

\begin_layout Example
Ejecutemos un programa en segundo plano y observemos las tareas:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls -R / &> /dev/null & jobs
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
[1] 6486
\end_layout

\begin_layout Plain Layout

\family typewriter
[1]+ Ejecutando ls --color=auto -R / &> /dev/null &
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
bg
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
bg
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
bg
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\emph on
background
\emph default
.
\end_layout

\end_inset

 se utiliza para poner una tarea en ejecución en segundo plano.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
bg
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

bg JID
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\emph on
JID
\emph default
 es el identificador de tarea.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Generalmente el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
bg
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para reanudar un proceso en estado 
\begin_inset Quotes fld
\end_inset


\emph on
bloqueado
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
fg
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
fg
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
fg
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviación de 
\emph on
foreground
\emph default
.
\end_layout

\end_inset

 se utiliza para poner una tarea en ejecución en primer plano.
 Es análogo a 
\begin_inset Quotes fld
\end_inset


\family typewriter
bg
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
disown
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
disown
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para eliminar la asociación de una tarea con la sesión de shell actual,
 lo que permite que el trabajo continúe ejecutándose incluso después de que la sesión de shell se haya cerrado.
\end_layout

\begin_layout Standard
Cuando ejecutas un comando en segundo plano utilizando el símbolo 
\begin_inset Quotes fld
\end_inset


\family typewriter
&
\family default

\begin_inset Quotes frd
\end_inset

 al final del comando,
 el trabajo se asocia con la sesión de shell actual.
 Esto significa que si cierras la sesión de shell,
 los trabajos en segundo plano también se terminarán.
 Sin embargo,
 si deseas que un trabajo continúe su ejecución incluso después de cerrar la sesión de shell,
 puedes utilizar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
disown
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
disown
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

disown JID
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\emph on
JID
\emph default
 es el identificador de tarea.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
wait
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
wait
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para esperar a que los procesos secundarios de un proceso en ejecución terminen antes de continuar con la ejecución del siguiente comando.
 Esto es especialmente útil cuando se ejecutan procesos en segundo plano y se desea sincronizar su finalización antes de proceder.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
wait
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

wait [pid...]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un ID de proceso,
 se esperará hasta que todos los procesos hijos terminen.
\end_layout

\begin_layout Example
Podemos descargar simultáneamente varios archivos y proceder una vez que las descargas finalicen:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

wget -q http://ipv4.download.thinkbroadband.com/20MB.zip &
\end_layout

\begin_layout Plain Layout

wget -q http://speedtest.ftp.otenet.gr/files/test10Mb.db &
\end_layout

\begin_layout Plain Layout

wait && echo Descargas finalizadas.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
exec
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
exec
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para ejecutar un comando en el mismo proceso actual,
 reemplazando dicho proceso por el nuevo comando.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

exec comando [argumentos]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Puede ser utilizado para evitar la creación de un nuevo proceso cuando no es necesario.
 Al reemplazar el proceso actual,
 se puede ahorrar en recursos del sistema.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos cambiar de shell sin crear un nuevo proceso con este comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

exec sh
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para conocer sobre el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sleep
\family default

\begin_inset Quotes frd
\end_inset

,
 luego ejecute 
\begin_inset Quotes fld
\end_inset


\family typewriter
sleep 1d
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Enumerate
Utilice otra instancia del emulador de terminal y averigüe el PID del comando anterior.
\end_layout

\begin_layout Enumerate
Envíe la señal SIGTSTP al proceso identificado en el ejercicio previo.
\end_layout

\begin_layout Enumerate
Verifique el estado del proceso con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
jobs
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Enumerate
Encuentre una forma de reanudar el proceso en segundo plano y vuelva a verificar el estado del proceso.
\end_layout

\begin_layout Enumerate
Finalmente interrumpa el proceso y verifique por última vez.
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Ejecute un navegador desde el shell.
 Observe que al cerrar el emulador de terminal,
 también se cierra el navegador.
 Encuentre una forma de solucionar dicho problema.
\end_layout

\begin_layout Section
Gestión
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
uname
\end_layout

\begin_layout Plain Layout
shutdown
\end_layout

\begin_layout Plain Layout
reboot
\end_layout

\begin_layout Plain Layout
systemctl hibernate
\end_layout

\begin_layout Plain Layout
systemctl suspend
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
apt
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
apt
\family default

\begin_inset Quotes frd
\end_inset

 (Advanced Packaging Tool) es una herramienta utilizada en sistemas basados en Debian,
 (como Lubuntu) para gestionar paquetes de software.
 A través de 
\begin_inset Quotes fld
\end_inset


\family typewriter
apt
\family default

\begin_inset Quotes frd
\end_inset

,
 puedes instalar,
 actualizar y desinstalar programas de manera fácil y eficiente.
\end_layout

\begin_layout Standard
El programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
apt
\family default

\begin_inset Quotes frd
\end_inset

 puede utilizarse de diversas formas:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
apt update
\family default

\begin_inset Quotes frd
\end_inset

:
 Actualizar la lista de paquetes.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Antes de instalar o actualizar programas,
 es una buena práctica utilizar este comando.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
apt install paquete
\family default

\begin_inset Quotes frd
\end_inset

:
 Instalar un programa en el sistema.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
apt upgrade
\family default

\begin_inset Quotes frd
\end_inset

:
 Actualiza todos los programas instalados a las versiones más recientes.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
apt remove paquete
\family default

\begin_inset Quotes frd
\end_inset

:
 Desinstala un programa.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Ademas de 
\begin_inset Quotes fld
\end_inset


\family typewriter
apt
\family default

\begin_inset Quotes frd
\end_inset

,
 las distribuciones basadas en Ubuntu cuentan con otro gestor de paquetes:
 
\begin_inset Quotes fld
\end_inset


\family typewriter
snap
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Podemos instalar el shell 
\begin_inset Quotes fld
\end_inset


\family typewriter
fish
\family default

\begin_inset Quotes frd
\end_inset

 con los siguientes comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo apt update
\end_layout

\begin_layout Plain Layout

sudo apt install fish
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
free
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
free
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para mostrar información sobre el uso de la memoria del sistema,
 incluyendo la memoria física (RAM) y la memoria de intercambio.
\end_layout

\begin_layout Standard
La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

free [-h]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se especifica la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-h
\family default

\begin_inset Quotes frd
\end_inset

 se muestran los valores en un formato más legible para humanos.
\end_layout

\begin_layout Example
Esta es la salida típica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
free
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

free -h
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

total 
\begin_inset space ~
\end_inset

usado 
\begin_inset space ~
\end_inset

libre 
\begin_inset space ~
\end_inset

compartido 
\begin_inset space ~
\end_inset

búf/caché 
\begin_inset space ~
\end_inset

disponible
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Mem:
 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2,9Gi 
\begin_inset space ~
\end_inset

1,4Gi 
\begin_inset space ~
\end_inset

1,1Gi 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

202Mi 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

764Mi 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1,5Gi
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Inter:
 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0B 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0B 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0B
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Esta información también puede obtenerse leyendo el archivo 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
/proc/meminfo
\family default
\size default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
loadkeys
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
loadkeys
\family default
\size default

\begin_inset Quotes frd
\end_inset

 se utiliza para definir la configuración del teclado en la 
\emph on
consola virtual
\emph default
 del sistema.
\end_layout

\begin_layout Standard
La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

loadkeys mapa
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los mapas de teclado para consola virtual suelen estar ubicados en 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
/usr/share/kbd/keymaps/i386
\family default
\size default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para configurar la distribución de teclado en idioma español podemos usar el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

loadkeys es
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
setfont
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
setfont
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para cambiar la fuente de la consola virtual.
 Esto puede ser útil para ajustar el aspecto visual o para mejorar la legibilidad.
\end_layout

\begin_layout Standard
La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

setfont [fuente]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las tipografías de consola virtual suelen estar ubicadas en 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
/usr/share/consolefonts
\family default
\size default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para utilizar una de las fuentes mas grandes podemos usar este comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

setfont ter132b
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
setxkbmap
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
setxkbmap
\family default
\size default

\begin_inset Quotes frd
\end_inset

 se utiliza para configurar la distribución del teclado en entornos gráficos.
 Se utiliza análogamente a 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
loadkeys
\family default
\size default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los mapas de teclado para entorno gráfico suelen estar ubicados en 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
/usr/share/X11/xkb
\family default
\size default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
which
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quizás valga la pena cambiar which por type
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
which
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para mostrar la ubicación de un ejecutable en el sistema de archivos.
 Proporciona la ruta absoluta del archivo ejecutable asociado con el nombre de comando dado.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
which
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

which [-a] comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

 para listar todas las ubicaciones donde se encuentra el ejecutable en caso de que haya múltiples versiones o rutas.
\end_layout

\begin_layout Example
Para conocer la ruta del interprete de Python usamos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

which python
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
/usr/bin/python
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
startx
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
startx
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza en sistemas Unix y Linux para iniciar un entorno gráfico de usuario.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\family typewriter
startx
\family default
 es simplemente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

startx
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las distribuciones de Linux pensadas para usuario de escritorio suelen iniciar el entorno gráfico automáticamente,
 pero aun así,
 el comando puede ser útil en tareas de recuperación.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

 Use el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
which
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar la ubicación de 
\begin_inset Quotes fld
\end_inset


\family typewriter
history
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
cd
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
pushd
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
popd
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
dirs
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
jobs
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
bg
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
fg
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
disown
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
alias
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
unalias
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
source
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
trap
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
export
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
type
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
exit
\family default

\begin_inset Quotes frd
\end_inset

.
 Explique lo que sucede.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 Instale los paquetes 
\begin_inset Quotes fld
\end_inset


\family typewriter
tldr
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
shellcheck
\family default

\begin_inset Quotes frd
\end_inset

.
 Experimente su uso.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Instale el paquete 
\begin_inset Quotes fld
\end_inset


\family typewriter
neofetch
\family default

\begin_inset Quotes frd
\end_inset

 y utilice 
\begin_inset Quotes fld
\end_inset


\family typewriter
man
\family default

\begin_inset Quotes frd
\end_inset

 para averiguar su propósito.
 Pruebe el nuevo comando.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Desinstale el paquete 
\begin_inset Quotes fld
\end_inset


\family typewriter
neofecth
\family default

\begin_inset Quotes frd
\end_inset

 y verifique que ya no se encuentra en el sistema.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Averigüe que es la distribución de teclado 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Teclado_Dvorak"
literal "true"

\end_inset

 Dvorak
\begin_inset Quotes frd
\end_inset

.
 Practique esta distribución en consola virtual y entorno gráfico.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Averigüe para que sirven los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
uptime
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
uname
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Section

\color lightgray
Internet
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
ping
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ping
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para verificar la conectividad entre dos hosts,
 diagnosticar problemas de red,
 verificar la disponibilidad de un host y medir la latencia de la red.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ping
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

ping DESTINO
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\emph on
DESTINO
\emph default
 puede ser una dirección IP o un nombre de host al cual deseas enviar los paquetes de solicitud de eco.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para comprobar la conectividad local usamos el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ping localhost
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
PING localhost(localhost (::1)) 56 data bytes
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
64 bytes from localhost (::1):
 icmp_seq=1 ttl=64 time=0.085 ms
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para comprobar la conectividad externa podemos usar el comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ping google.com
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
PING google.com (142.251.133.78) 56(84) bytes of data.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
64 bytes from eze10s03-in-f14.1e100.net (142.251.133.78):
 icmp_seq=1 ttl=114 time=21.1 ms
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
ssh
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ssh
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
ssh
\family default

\begin_inset Quotes frd
\end_inset

 es una abreviatura de 
\begin_inset Quotes fld
\end_inset


\emph on
Secure Shell
\emph default

\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset

 es comúnmente utilizado para acceder a máquinas remotas,
 ejecutar comandos en esas máquinas y transferir archivos.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ssh
\family default

\begin_inset Quotes frd
\end_inset

 es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

ssh [-p puerto] usuario@equipo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica el puerto de la comunicación,
 se utilizará por defecto el puerto 22.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Cuando hayas terminado de trabajar en la máquina remota,
 puedes cerrar la conexión escribiendo 
\begin_inset Quotes fld
\end_inset


\family typewriter
exit
\family default

\begin_inset Quotes frd
\end_inset

 en la terminal de la sesión SSH o simplemente cerrando el emulador terminal.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
scp
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
scp
\family default

\begin_inset Quotes frd
\end_inset

 es una utilidad que se utiliza para copiar archivos entre equipos a través del protocolo SSH.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
La sintaxis básica del comando es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

scp [-p puerto] origen usuario@destino:ruta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esto copia el archivo 
\family typewriter
origen
\family default
 desde tu máquina local a la máquina 
\family typewriter
destino
\family default
 en la 
\family typewriter
ruta
\family default
 especificada.
 Si no se especifica el puerto de la comunicación,
 se utilizará por defecto el puerto 22.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
wget
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
wget
\family default
\size default

\begin_inset Quotes frd
\end_inset

 es una herramienta de línea de comandos que se utiliza para descargar archivos desde Internet.
 Permite descargar archivos individuales,
 así como descargar recursivamente directorios completos,
 manteniendo la estructura de directorios original.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
wget
\family default
\size default

\begin_inset Quotes frd
\end_inset

 es simplemente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

wget [opciones] URL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A continuación,
 se presentan algunas de las opciones más importantes del comando:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-O archivo
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite redirigir el contenido descargado a un archivo.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-b
\family default

\begin_inset Quotes frd
\end_inset

:
 Ejecuta la descarga en segundo plano.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 Descarga todos los archivos enlazados recursivamente desde el directorio proporcionado.
\end_layout

\begin_layout Example
Podemos descargar la última versión de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/WordPress"
literal "true"

\end_inset

 Wordpress
\begin_inset Quotes frd
\end_inset

 mediante el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

wget https://wordpress.org/latest.zip
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
curl
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
curl
\family default

\begin_inset Quotes frd
\end_inset

 en Linux es una herramienta de línea de comandos que se utiliza para transferir datos desde o hacia un servidor.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
La sintaxis básica de 
\begin_inset Quotes fld
\end_inset


\family typewriter
curl
\family default

\begin_inset Quotes frd
\end_inset

 es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

curl [-o] URL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede utilizarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-o
\family default

\begin_inset Quotes frd
\end_inset

 para descargar un archivo.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En la práctica,
 el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
curl
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza con frecuencia para acceder a aplicaciones web y consultar APIs.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
https://github.com/chubin/awesome-console-services
\end_layout

\begin_layout Plain Layout
https://github.com/public-apis/public-apis
\end_layout

\end_inset


\end_layout

\begin_layout Example
Consultemos el clima utilizando 
\begin_inset Quotes fld
\end_inset


\family typewriter
curl
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

curl wttr.in
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
También podemos buscar información sobre nuestro ISP:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

curl ipinfo.io
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Otro servicio interesante nos permite codificar información en un código QR:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

curl qrenco.de/palabra
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
w3m
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
w3m
\family default

\begin_inset Quotes frd
\end_inset

 es un navegador web de texto basado en la línea de comandos en sistemas Unix y Linux.
 A diferencia de los navegadores web gráficos como Firefox o Chrome,
 
\family typewriter
w3m
\family default
 se ejecuta en la terminal y muestra el contenido de las páginas web en formato de texto.
\end_layout

\begin_layout Standard
Su sintaxis es simplemente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

w3m URL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para navegar por la página se utilizan las siguientes teclas:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Flechas:
 Permiten desplazarte por el contenido.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Tab:
 Desplazamiento entre enlaces.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Espacio:
 Avanza una 
\begin_inset Quotes fld
\end_inset

pantalla
\begin_inset Quotes frd
\end_inset

 hacia abajo.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Enter:
 Se utiliza para seguir un enlace o introducir texto.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

U:
 Muestra la barra de direcciones.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

B:
 Sirve para regresar a la página anterior.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

s:
 Muestra los últimos enlaces visitados.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

R:
 Permite recargar la página actual.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

/:
 Busca contenido en la página.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

H:
 Muestra la ayuda.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

q:
 Salir del programa.
\end_layout

\begin_layout Subsection

\emph off
\color lightgray
Ejercicios
\end_layout

\begin_layout Exercise
Escriba un comando genere un archivo con todas las palabras que se encuentran en una URL.
 Asegúrese de que se guardan solo palabras formadas por caracteres alfabéticos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Instale el paquete 
\begin_inset Quotes fld
\end_inset


\family typewriter
jq
\family default

\begin_inset Quotes frd
\end_inset

 para procesar formato JSON,
 luego consulte una API para averiguar los principales actores de su película favorita:
\end_layout

\begin_layout Enumerate
Para consultar información sobre una película:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

curl -s https://search.imdbot.workers.dev/?q=PELICULA
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Envíe la salida del comando anterior al programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
jq '.description'
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Enumerate
Puede agregar los siguientes argumentos para filtrar los resultados:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
[0]
\family default

\begin_inset Quotes frd
\end_inset

:
 Para quedarse con el primer resultado.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
.
\begin_inset Quotes qrd
\end_inset

#ACTORS
\begin_inset Quotes qrd
\end_inset


\family default

\begin_inset Quotes frd
\end_inset

:
 Para quedarse solo con los actores.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante encerrar todos los argumentos de 
\begin_inset Quotes fld
\end_inset


\family typewriter
jq
\family default

\begin_inset Quotes frd
\end_inset

 entre comillas simples.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section

\strikeout on
\color lightgray
Servicios
\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Logging
\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Tareas programadas
\end_layout

\begin_layout Section
Compresión y backup
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
tar
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tar
\family default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
El término 
\begin_inset Quotes fld
\end_inset

tar
\begin_inset Quotes frd
\end_inset

 proviene de 
\begin_inset Quotes fld
\end_inset


\emph on
tape archiver
\emph default

\begin_inset Quotes frd
\end_inset

,
 ya que originalmente se usaba para archivar en cintas magnética
\end_layout

\end_inset

 utiliza para empaquetar y desempaquetar archivos y directorios en un solo archivo.
\end_layout

\begin_layout Standard
La sintaxis básica es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

tar [opciones] [archivos] -f archivo_tar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

:
 Crea un nuevo archivo tar.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 Agrega archivos al final de un archivo 
\family typewriter
tar
\family default
 existente.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 Agrega archivos nuevos a un archivo 
\family typewriter
tar
\family default
 existente.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-x
\family default

\begin_inset Quotes frd
\end_inset

:
 Extrae los archivos de un archivo 
\family typewriter
tar
\family default
.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-t
\family default

\begin_inset Quotes frd
\end_inset

:
 Muestra el contenido del archivo 
\family typewriter
tar
\family default
.
\end_layout

\begin_layout Example
Usemos el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
tar
\family default

\begin_inset Quotes frd
\end_inset

 para empaquetar un backup de nuestra carpeta personal:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

tar -c ~ -f backup.tar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
gzip
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
gzip
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para un único archivo.
 La compresión reduce el tamaño de los archivos,
 lo que es útil para ahorrar espacio en disco y acelerar transferencias de archivos a través de la red.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
La sintaxis básica es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

gzip [opciones] archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

:
 Esto restaurará el archivo original desde el archivo comprimido.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-k
\family default

\begin_inset Quotes frd
\end_inset

:
 Esto crea un archivo comprimido pero conserva el archivo original.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
No debe confundirse esta herramienta con el formato 
\begin_inset Quotes fld
\end_inset


\family typewriter
zip
\family default

\begin_inset Quotes frd
\end_inset

,
 con el cual no es compatible.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Comprimamos el archivo generado en el ejemplo anterior:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

gzip backup.tar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
rsync
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
rsync
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta de línea de comandos que se utiliza para sincronizar y transferir archivos entre directorios de manera eficiente,
 localmente o entre máquinas remotas.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

rsync [opciones] origen destino
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas de las opciones más comunes:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-r
\family default

\begin_inset Quotes frd
\end_inset

:
 Copia los directorios de forma recursiva.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-v
\family default

\begin_inset Quotes frd
\end_inset

:
 Proporciona una salida detallada,
 mostrando los archivos que se están copiando.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

:
 Se utiliza para realizar una simulación o prueba de la sincronización,
 sin realizar cambios reales en los archivos de destino.
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-z
\family default

\begin_inset Quotes frd
\end_inset

:
 Comprime los datos durante la transferencia para ahorrar ancho de banda.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Una de las ventajas de 
\begin_inset Quotes fld
\end_inset


\family typewriter
rsync
\family default

\begin_inset Quotes frd
\end_inset

 sobre 
\begin_inset Quotes fld
\end_inset


\family typewriter
cp
\family default

\begin_inset Quotes frd
\end_inset

 es que solo copia aquellos archivos que no se encuentren en el destino,
 o hayan sido modificados.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\strikeout on
\color lightgray
dd
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Investigue el uso de los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
zip
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
unzip
\family default

\begin_inset Quotes frd
\end_inset

.
 Puede que sea necesario instalarlos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset

 son ejercicios que comprometen la seguridad del equipo.
 Tome las precauciones necesarias.
 
\end_layout

\end_inset

 Estudie el concepto de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Bomba_zip"
literal "true"

\end_inset

 
\emph on
bomba zip
\emph default

\begin_inset Quotes frd
\end_inset

.
 En una máquina virtual aparte,
 descárguela y descomprímala.
\end_layout

\begin_layout Section
Otros comandos
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
pv
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
alias
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
alias
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para crear 
\emph on
alias
\emph default
.
 Un alias es una forma de asignar una cadena de texto a un comando,
 lo que te permite ejecutarlos rápidamente utilizando el alias en lugar de tener que escribir todo el comando.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los 
\emph on
alias
\emph default
 son otra de las competencias del interprete de linea de comandos.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
alias
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

alias [nombre=
\begin_inset Quotes frd
\end_inset

comando
\begin_inset Quotes frd
\end_inset

]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no se especifica un alias,
 el comando muestra los alias actualmente definidos.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Los alias definidos con este comando,
 solo funcionan durante la sesión actual.
 Para establecer alias que perduren durante las sesiones es necesario editar el archivo de configuración 
\begin_inset Quotes fld
\end_inset


\family typewriter
~/.bashrc
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para conocer los alias actuales escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

alias
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
alias grep='grep --color=auto'
\end_layout

\begin_layout Plain Layout

\family typewriter
alias ls='ls --color=auto'
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para crear un alias que nos loguee como root podemos escribir:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

alias ss=
\begin_inset Quotes frd
\end_inset

sudo su
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
unalias
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
unalias
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para eliminar un alias previamente definido.
 La sintaxis básica del comando es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

unalias [-a] alias
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

 para eliminar todos los alias definidos.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
bc
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
bc
\family default

\begin_inset Quotes frd
\end_inset

 es una calculadora de precisión arbitraria que se utiliza en la línea de comandos en Linux/Unix.
 Permite realizar cálculos matemáticos complejos,
 incluyendo operaciones aritméticas básicas,
 funciones matemáticas avanzadas y lógica.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\family typewriter
bc
\family default

\begin_inset Quotes frd
\end_inset

 es un programa interactivo que lee expresiones desde la entrada estándar.
 Sin embargo,
 también puede ser utilizado con tuberías.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos calcular una suma con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 3+4 | bc
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
7
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
sha256sum
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sha256sum
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para calcular la suma de verificación SHA-256 de un archivo.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Una suma de verificación (también conocida como checksum o hash) es una cadena de caracteres generado a partir de datos (como un archivo),
 con el propósito de verificar la integridad de esos datos.
 La idea fundamental es que si los datos cambian,
 incluso por un solo bit,
 la suma de verificación generada también cambiará significativamente.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
sha256sum
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

sha256sum [-c] archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se utiliza la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

 con un archivo que contiene una o más sumas de verificación generadas previamente,
 se verificaran las sumas allí presentes.
\end_layout

\begin_layout Example
Observemos la suma de verificación de una cadena de texto:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo hola mundo | sha256sum
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
41d85e0b52944ee2917adfd73a2b7ce3d3c8368533a75e54db881fac6c9ad176
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Para hacer una suma de verificación de la salida del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sha256sum /usr/bin/ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
7effe56efc49e3d252a84d8173712bad05beef4def460021a1c7865247125fee
\end_layout

\end_inset


\end_layout

\begin_layout Example
Creemos dos archivos y sus respectivas sumas de verificación:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo hola > bienvenida
\end_layout

\begin_layout Plain Layout

echo chau > despedida
\end_layout

\begin_layout Plain Layout

sha256sum bienvenida despedida > suma
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora podemos verificar la suma de ambos archivos gracias a la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-c
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sha256sum -c suma
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
bienvenida:
 La suma coincide
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
despedida:
 La suma coincide
\end_layout

\end_inset


\end_layout

\begin_layout Standard
También vale la pena observar que sucede si modificamos un archivo:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo adios > despedida
\end_layout

\begin_layout Plain Layout

sha256sum -c suma
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
bienvenida:
 La suma coincide
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
despedida:
 La suma no coincide
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
sha256sum:
 ATENCIÓN:
 1 suma calculada NO coincidió
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
time
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
time
\family default
\size default

\begin_inset Quotes frd
\end_inset

 se utiliza para medir el tiempo de ejecución de un comando o un conjunto de comandos.
 Proporciona información sobre el tiempo real transcurrido,
 el tiempo de CPU utilizado y otros datos relacionados con el rendimiento.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
time
\family default
\size default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

time comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la salida se muestran tres conjuntos de resultados:
\end_layout

\begin_layout Itemize
Tiempo real (real):
 Es el tiempo total transcurrido desde el inicio hasta la finalización del comando.
 Incluye el tiempo de espera y otros factores externos.
\end_layout

\begin_layout Itemize
Tiempo de CPU (user):
 Es la cantidad de tiempo de CPU utilizado únicamente por el comando.
 No incluye el tiempo de espera ni otros factores externos.
\end_layout

\begin_layout Itemize
Tiempo del sistema (sys):
 Es la cantidad de tiempo de CPU utilizado por el sistema operativo para ejecutar el comando.
\end_layout

\begin_layout Example
Para comprobar cuanto tiempo se ejecutó un programa escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

time sleep 5
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
real 0m5,007s
\end_layout

\begin_layout Plain Layout

\family typewriter
user 0m0,000s
\end_layout

\begin_layout Plain Layout

\family typewriter
sys 0m0,002s
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
watch
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
watch
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para ejecutar repetidamente un comando o un conjunto de comandos de forma periódica y mostrar la salida actualizada en la pantalla.
 Es útil para monitorear en tiempo real los cambios en la salida de un comando sin tener que ejecutarlo manualmente una y otra vez.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
watch
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

watch [opciones] comando
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
watch
\family default

\begin_inset Quotes frd
\end_inset

 son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n SEGUNDOS
\family default

\begin_inset Quotes frd
\end_inset

:
 Establece el intervalo de tiempo en 
\emph on
SEGUNDOS
\emph default
.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

:
 Resalta las diferencias entre las salidas sucesivas del comando.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-t
\family default

\begin_inset Quotes frd
\end_inset

:
 No muestra el encabezado con la hora actual.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
watch
\family default

\begin_inset Quotes frd
\end_inset

 ejecutará el comando especificado cada 2 segundos de manera predeterminada,
 si no se especifican opciones.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
xclip
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
xclip
\family default

\begin_inset Quotes frd
\end_inset

 es una herramienta que se utiliza para manejar el contenido del portapapeles,
 permitiendo la manipulación de texto desde la línea de comandos.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
xclip
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

xclip [opciones]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-o
\family default

\begin_inset Quotes frd
\end_inset

:
 Imprime en la salida estándar el contenido actual del portapapeles.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-se
\family default

\begin_inset Quotes frd
\end_inset

:
 Permite copiar y pegar utilizando una selección específica (
\begin_inset Quotes fld
\end_inset

p
\begin_inset Quotes frd
\end_inset

rimary o 
\begin_inset Quotes fld
\end_inset

c
\begin_inset Quotes frd
\end_inset

lipboard).
\end_layout

\begin_layout Standard
Si no se especifica ninguna opción,
 se leerá desde la entrada estándar hacia la selección primaria.
\end_layout

\begin_layout Standard
En X Window existen tres 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://en.wikipedia.org/wiki/X_Window_selection"
literal "true"

\end_inset

 
\emph on
selecciones
\emph default

\begin_inset Quotes frd
\end_inset

 que permiten el intercambio de datos entre aplicaciones.
 Estas selecciones se conocen como Primary,
 Secondary,
 y Clipboard:
\end_layout

\begin_layout Description
Primary La selección primaria,
 es la selección que generalmente se activa al seleccionar texto con el botón izquierdo del ratón.
 Puedes pegar el contenido de la selección primaria usando el botón del medio del ratón.
\end_layout

\begin_layout Description
Secondary La selección secundaria es raramente utilizada y su activación suele requerir acciones específicas de usuario o aplicaciones.
\end_layout

\begin_layout Description
Clipboard También conocida simplemente como el portapapeles,
 es la selección más comúnmente utilizada y es la que la mayoría de las aplicaciones usan para copiar y pegar.
\end_layout

\begin_layout Example
Para pegar el contenido del portapapeles tradicional usamos el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

xclip -o -se c
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos copiar texto en la selección primara de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo texto | xclip
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
xargs
\end_layout

\begin_layout Standard
La función principal de 
\begin_inset Quotes fld
\end_inset


\family typewriter
xargs
\family default

\begin_inset Quotes frd
\end_inset

 es tomar líneas de texto de la entrada estándar y utilizarlas como argumentos para ejecutar comandos.
\end_layout

\begin_layout Standard
Su sintaxis es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

xargs [opciones] [comando [argumentos iniciales]]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas Opciones Frecuentes:
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default
 
\emph on
MÁXIMO
\emph default

\begin_inset Quotes frd
\end_inset

:
 Especifica el número máximo de argumentos.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default
 
\emph on
DELIMITADOR
\emph default

\begin_inset Quotes frd
\end_inset

:
 Esto utiliza 
\emph on
DELIMITADOR
\emph default
 en lugar del espacio en blanco para leer los argumentos de la entrada estandar.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\strikeout on
\color lightgray
screen
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\strikeout on
\color lightgray
ranger
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Explique las diferencias entre un 
\emph on
alias
\emph default
 y un 
\emph on
enlace
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Investigue el funcionamiento del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
type
\family default

\begin_inset Quotes frd
\end_inset

.
 Ejecute los siguientes comandos y analice las diferencias:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

which ls
\end_layout

\begin_layout Plain Layout

type ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Cree un archivo de python llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
sleep.py
\family default

\begin_inset Quotes frd
\end_inset

 con el siguiente código:
\end_layout

\begin_layout Exercise
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

for _ in range(9 ** 9):
\end_layout

\begin_layout Plain Layout

    pass
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ejecute el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
time python sleep.py
\family default

\begin_inset Quotes frd
\end_inset

 y luego haga lo mismo con 
\begin_inset Quotes fld
\end_inset


\family typewriter
time sleep
\family default

\begin_inset Quotes frd
\end_inset

 con una duración idéntica a la del comando previo.
 Explique la diferencia en la salida de ambas ejecuciones de 
\begin_inset Quotes fld
\end_inset


\family typewriter
time
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Ya sabemos que podemos monitorizar el contenido de un archivo con el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
\size small
tail -f
\family default
\size default

\begin_inset Quotes frd
\end_inset

.
 Proponga otra forma de lograrlo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Haga una lista de todos los archivos del directorio de trabajo actual que estén repetidos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Configure 
\family typewriter
bash
\family default
 para que cada vez que se cambie de directorio,
 anuncie desde donde se produce el cambio y hacia a dónde.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Muy dificil.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Proponga una forma de reemplazar la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-exec
\family default

\begin_inset Quotes frd
\end_inset

 del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
find
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Investigue para que sirven los comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
script
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
scriptreplay
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Chapter
Shell scripting
\end_layout

\begin_layout Standard
Un script de Bash es un archivo de texto que contiene una serie de comandos de Bash.
 Dichos scripts se utilizan para automatizar tareas,
 realizar secuencias de comandos más complejas y ejecutar múltiples comandos de forma secuencial.
 Los scripts de Bash se escriben en un editor de texto y se guardan con una extensión 
\begin_inset Quotes fld
\end_inset


\family typewriter
.sh
\family default

\begin_inset Quotes frd
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Hablar sobre bashrc.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Subsection
Comentarios
\end_layout

\begin_layout Standard
Los comentarios son líneas que los intérpretes ignoran durante la ejecución de un script.
 Sirven para agregar notas,
 explicaciones o desactivar temporalmente ciertas líneas de código.
 
\end_layout

\begin_layout Standard
Para hacer comentarios se utiliza el símbolo 
\family typewriter
#
\family default
,
 el cual indica el inicio de un comentario.
 Todo lo que sigue después de 
\family typewriter
#
\family default
 en esa línea es tratado como un comentario y no se ejecutará.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La sintaxis para comentarios también puede ser utilizada en la linea de comandos.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Veamos un ejemplo de comentarios en bash:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

# Esto es un comentario de una sola línea.
\end_layout

\begin_layout Plain Layout

echo "Hola mundo!" # Este comentario también es válido.
\end_layout

\begin_layout Plain Layout

# echo "Hola mundo!"
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola mundo!
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejecución
\end_layout

\begin_layout Standard
Ejecutar un script de Bash es un proceso bastante simple:
 basta como pasárselo como argumento al interprete de bash.
\end_layout

\begin_layout Standard
Si el programa tiene permiso de ejecución podemos ejecutarlo simplemente antemponiendo los caracteres 
\begin_inset Quotes fld
\end_inset


\family typewriter
./
\family default

\begin_inset Quotes frd
\end_inset

 seguido de su nombre.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\emph on
Shebang
\emph default

\begin_inset Quotes frd
\end_inset

 es una convención en los scripts que indica que interprete debe utilizarse para ejecutar el script.
 Esta convención utiliza la secuencia de caracteres 
\begin_inset Quotes fld
\end_inset


\family typewriter
#!
\family default

\begin_inset Quotes frd
\end_inset

 seguida de la ruta al ejecutable del intérprete y debe colocarse al principio del archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos crear y ejecutar un script de bash de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo echo Hola mundo!
 > script.sh
\end_layout

\begin_layout Plain Layout

bash script.sh
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola mundo!
\end_layout

\end_inset


\end_layout

\begin_layout Example
Ejecutemos el script del ejemplo anterior dándole los permisos correspondientes:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

chmod +x script.sh
\end_layout

\begin_layout Plain Layout

./script.sh
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Escriba un script de python llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
script.py
\family default

\begin_inset Quotes frd
\end_inset

 y dele permisos de ejecución.
 Logre ejecutarlo con el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

./script.py
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Escriba el siguiente script,
 ejecútelo y explique su comportamiento:
\end_layout

\begin_layout Exercise
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

cd /
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Variables
\end_layout

\begin_layout Standard
En Bash,
 las variables son símbolos que se utilizan para almacenar valores,
 como texto o números,
 que pueden ser referenciados y manipulados en los comandos y scripts.
 Las variables en Bash son flexibles y pueden cambiar su valor durante la ejecución del programa.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Reemplazar las variables por su contenido es labor del shell y no de los programas ni del sistema operativo.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Variables locales
\end_layout

\begin_layout Standard
Las variables locales son variables definidas por el usuario y tienen un alcance local dentro de un script o función de Bash.
 Estas variables solo son accesibles desde el contexto en el que se definen.
 Para crear una variable local,
 se utiliza la sintaxis:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

NOMBRE=VALOR
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La falta de espacios alrededor del operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
=
\family default

\begin_inset Quotes frd
\end_inset

 es indispensable para el correcto funcionamiento.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El contenido de estas variables puede ser referenciado anteponiendo el símbolo 
\begin_inset Quotes fld
\end_inset


\family typewriter
$
\family default

\begin_inset Quotes frd
\end_inset

 antes de su nombre.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para setear una variable y observar su contenido,
 podemos escribir:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

NOMBRE=Damian
\end_layout

\begin_layout Plain Layout

echo Hola $NOMBRE.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola Damian.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Variables de entorno
\end_layout

\begin_layout Standard
Las variables de entorno son variables especiales que están disponibles para todos los procesos y comandos ejecutados en ese entorno.
 Proporcionan información como la configuración del sistema,
 las preferencias del usuario,
 las rutas de búsqueda de ejecutables y otras configuraciones importantes.
\end_layout

\begin_layout Standard
Algunas variables de entorno comunes en Bash incluyen:
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TERM
\end_layout

\begin_layout Plain Layout
SHELL
\end_layout

\end_inset


\end_layout

\begin_layout Description
HOME Contiene la ruta al directorio de inicio del usuario actual.
\end_layout

\begin_layout Description
PATH Especifica las rutas de búsqueda de comandos ejecutables.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Cuando se ingresa un comando en la línea de comandos,
 Bash busca en los directorios listados en esta variable para encontrar el comando correspondiente.
 Es por esta razón que podemos ejecutar 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 sin tener que escribir 
\begin_inset Quotes fld
\end_inset


\family typewriter
/usr/bin/ls
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Description
USER Almacena el nombre del usuario actualmente conectado.
\end_layout

\begin_layout Description
HOSTNAME Almacena el nombre del equipo.
\end_layout

\begin_layout Description
SHELL Contiene la ruta al intérprete de comandos actualmente utilizado.
\end_layout

\begin_layout Description
PWD Almacena la ruta completa del directorio de trabajo actual.
\end_layout

\begin_layout Description
OLDPWD Almacena la ruta del directorio de trabajo anterior.
\end_layout

\begin_layout Description
PS1 Controla el formato del prompt de la línea de comandos.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Podemos cambiar la ruta de trabajo actual al directorio raíz seteando la variable 
\family typewriter
PWD
\family default
:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

PWD=/
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Variables especiales
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar $RANDOM
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Existen varias variables especiales predefinidas que contienen información específica sobre el entorno y la ejecución del shell.
 Estas variables especiales son automáticamente actualizadas por el propio interprete de linea de comandos y proporcionan datos útiles para la manipulación de comandos y scripts.
 A continuación,
 se explican algunas de las variables especiales más comunes en Bash:
\end_layout

\begin_layout Description
$0 Contiene el nombre del script actual o el nombre del comando que se está ejecutando.
\end_layout

\begin_layout Description
$1,
\begin_inset space ~
\end_inset

$2,
\begin_inset space ~
\end_inset

$3,
\begin_inset space ~
\end_inset

...
 Representan los argumentos pasados al script o comando.
 
\begin_inset Quotes fld
\end_inset


\family typewriter
$1
\family default

\begin_inset Quotes frd
\end_inset

 se refiere al primer argumento,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
$2
\family default

\begin_inset Quotes frd
\end_inset

 al segundo,
 y así sucesivamente.
 Estas variables se utilizan principalmente en scripts para acceder a los argumentos proporcionados en la línea de comandos.
\end_layout

\begin_layout Description
$@ Contiene todos los argumentos pasados al script o comando como una lista separada por espacios.
 Es útil para iterar sobre todos los argumentos en un bucle.
\end_layout

\begin_layout Description
$# Indica el número de argumentos pasados al script o comando.
\end_layout

\begin_layout Description
$?
 Almacena el código de salida del último comando ejecutado.
 Un valor de 0 generalmente indica éxito,
 mientras que un valor distinto de 0 indica un fallo o error.
\end_layout

\begin_layout Description
$$ Contiene el PID (identificador de proceso) del shell actual.
\end_layout

\begin_layout Description
$PPID Contiene el PID del proceso padre.
\end_layout

\begin_layout Description
$!
 Almacena el PID del último proceso en segundo plano que se ejecutó.
\end_layout

\begin_layout Description
$* Contiene todos los argumentos pasados al script o comando como una sola cadena.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Investigue cual es el uso de la variable 
\emph on
CDPATH
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Imprima la variable que muestra el PID actual,
 y verifique que sea idéntico al que reporta 
\begin_inset Quotes fld
\end_inset


\family typewriter
ps
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un programa que reciba como argumento el nombre de una persona,
 y la salude cuando es ejecutado.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un programa que reciba dos argumentos y muestra su suma en la pantalla.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un programa que cierre el emulador de terminal.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset

 son ejercicios que comprometen la seguridad del equipo.
 Tome las precauciones necesarias.
\end_layout

\end_inset

 Escriba un programa llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 que muestre el mensaje 
\begin_inset Quotes fld
\end_inset


\emph on
Borrando el sistema...
\emph default

\begin_inset Quotes frd
\end_inset

 y luego demore 10 segundos.
 Modifique los permisos y la variable de entorno correspondiente para que el programa se ejecute al escribir 
\begin_inset Quotes fld
\end_inset


\family typewriter
ls
\family default

\begin_inset Quotes frd
\end_inset

 en la linea de comandos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un programa que reciba como argumento un archivo y lo mueva a un directorio llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
Papelera
\family default

\begin_inset Quotes frd
\end_inset

 dentro de la carpeta personal del usuario.
 Si el directorio no existe,
 el programa debe crearlo y si el archivo no existe,
 debe aparecer un mensaje de error.
 Finalmente si todo salió bien,
 debe leerse un mensaje de confirmación.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Explique en que contexto los siguientes comandos producen esta salida:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

VARIABLE = valor
\end_layout

\begin_layout Plain Layout

echo $VARIABLE
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola Mundo!
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Investigue como manipular la variable de entorno PS1 para lograr que el prompt del sistema solo muestre el directorio de trabajo actual junto con un indicador 
\begin_inset Quotes fld
\end_inset


\family typewriter
>
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Section
Comandos
\end_layout

\begin_layout Subsection

\family typewriter
test
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar operador -f
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
test
\family default

\begin_inset Quotes frd
\end_inset

 es utilizado para evaluar expresiones condicionales.
 La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

test EXPRESION
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
test
\family default

\begin_inset Quotes frd
\end_inset

 devuelve un código de salida que indica si la expresión es verdadera o falsa.
 Un código de salida de 0 indica que la expresión es verdadera,
 mientras que un código de salida diferente de 0 indica que la expresión es falsa.
\end_layout

\begin_layout Standard
Las 
\emph on
EXPRESIONES
\emph default
 del comando 
\family typewriter
test
\family default
 admiten varios operadores,
 entre los cuales se destacan:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
=
\family default

\begin_inset Quotes frd
\end_inset

:
 Para comprar cadenas de texto por igualdad.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-eq
\family default

\begin_inset Quotes frd
\end_inset

:
 Para comprar números por igualdad.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-e
\family default

\begin_inset Quotes frd
\end_inset

:
 Para determinar si un archivo existe.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-d
\family default

\begin_inset Quotes frd
\end_inset

:
 Para determinar si un archivo existe y es un directorio.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-gt
\family default

\begin_inset Quotes frd
\end_inset

:
 Para determinar si un número es mayor que otro.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-lt
\family default

\begin_inset Quotes frd
\end_inset

:
 Para determinar si un número es menor que otro.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

:
 Para escribir conjunciones de expresiones.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-o
\family default

\begin_inset Quotes frd
\end_inset

:
 Para escribir disyunciones de expresiones.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-n
\family default

\begin_inset Quotes frd
\end_inset

:
 Para determinar si la longitud de una cadena es distinta de cero.
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-z
\family default

\begin_inset Quotes frd
\end_inset

:
 Para determinar si la longitud de una cadena es igual a cero.
\end_layout

\begin_layout Standard
Las expresiones pueden negarse con el operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
!
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Además del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
test
\family default

\begin_inset Quotes frd
\end_inset

 hay otro comando que funciona prácticamente igual;
 este es el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
[
\family default

\begin_inset Quotes frd
\end_inset

.
 Este comando recibe obligatoriamente como argumento final el carácter 
\begin_inset Quotes fld
\end_inset


\family typewriter
]
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para comprobar si dos números son iguales escribirnos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

test 1 -eq 2 || echo Los numeros son diferentes.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Los números son diferentes.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para comprobar si dos cadenas son iguales escribirnos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

[ 
\begin_inset Quotes fld
\end_inset

hola
\begin_inset Quotes frd
\end_inset

 = 
\begin_inset Quotes fld
\end_inset

hola
\begin_inset Quotes frd
\end_inset

 ] && echo Las cadenas son iguales.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Las cadenas son iguales.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
exit
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
exit
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para finalizar la ejecución de un script o de la sesión actual del shell.
 Al llamar al comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
exit
\family default

\begin_inset Quotes frd
\end_inset

,
 se proporciona un código de salida opcional que indica el resultado o estado de finalización del programa.
\end_layout

\begin_layout Standard
La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

exit [CODIGO]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si no se proporciona ningún código de salida,
 se utiliza el código de salida del último comando ejecutado.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
source
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
source
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para ejecutar comandos o scripts en el contexto actual del shell en lugar de crear un nuevo proceso.
 La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

source ARCHIVO
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una de las aplicaciones comunes del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
source
\family default

\begin_inset Quotes frd
\end_inset

 es la carga de archivos de configuración o variables de entorno.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
source
\family default

\begin_inset Quotes frd
\end_inset

 es otro de los comandos que no son archivos binarios,
 sino responsabilidad del shell.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
read
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
read
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para leer la entrada del usuario desde la línea de comandos y asignarla a una o mas variables.
 La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

read [opciones] variable1 [variable2...]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Algunas opciones comunes que se pueden utilizar son:
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-p
\family default

\begin_inset Quotes frd
\end_inset

:
 permite mostrar un mensaje antes de leer la entrada del usuario.
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes fld
\end_inset


\family typewriter
-s
\family default

\begin_inset Quotes frd
\end_inset

:
 oculta la entrada del usuario,
 útil cuando se ingresan contraseñas u otra información sensible.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si se especifica una sola variable,
 se asigna el texto completo ingresado a esa variable.
 Si se especifican varias variables,
 se asignan los campos del texto ingresado a cada variable en orden.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Para leer dos datos por teclado y luego mostrarlos en la pantalla podemos usar el siguiente comando:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

read -p 
\begin_inset Quotes fld
\end_inset

Ingrese su primer y segundo nombre:
 
\begin_inset Quotes fld
\end_inset

 primero segundo
\end_layout

\begin_layout Plain Layout

echo Hola $primero $segundo.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection

\family typewriter
seq
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
seq == sequence
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
seq
\family default

\begin_inset Quotes frd
\end_inset

 en Bash se utiliza para generar secuencias de números.
 Su sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

seq [-s] INICIO FINAL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
seq
\family default

\begin_inset Quotes frd
\end_inset

 generará una secuencia de números desde el valor de 
\emph on
INICIO
\emph default
 hasta el valor 
\emph on
FINAL
\emph default
,
 incrementando de uno en uno de manera predeterminada.
 Los números generados se imprimirán en la salida estándar.
\end_layout

\begin_layout Standard
Puede agregarse la opción «
\family typewriter
-s
\family default
» para especificar el separador entre los números generados.
\end_layout

\begin_layout Example
Para generar la secuencia 
\begin_inset Quotes fld
\end_inset


\emph on
2,
 3,
 4,
 5
\emph default

\begin_inset Quotes frd
\end_inset

 escribimos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

seq -s 
\begin_inset Quotes fld
\end_inset

 
\begin_inset Quotes fld
\end_inset

 2 5
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
2 3 4 5
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
shift
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
shift
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para desplazar los argumentos de un comando hacia la izquierda.
 La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
shift
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

shift [n]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Quotes fld
\end_inset


\family typewriter
n
\family default

\begin_inset Quotes frd
\end_inset

 es un número opcional que indica cuántas posiciones se deben desplazar los argumentos.
 Si no se especifica,
 el valor predeterminado es 1.
\end_layout

\begin_layout Standard
Cuando se ejecuta el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
shift
\family default

\begin_inset Quotes frd
\end_inset

,
 los argumentos de línea de comandos se desplazan hacia la izquierda.
 Esto significa que el valor del argumento en la posición 2 se mueve a la posición 1,
 el valor en la posición 3 se mueve a la posición 2,
 y así sucesivamente.
 El argumento en la posición 1 se descarta.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es muy útil cuando se trabaja con scripts que toman un número variable de argumentos y se necesita procesarlos de manera iterativa.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
export
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
export
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para exportar variables.
 Estas variables estarán disponibles para todos los procesos secundarios creados a partir del proceso actual,
 lo que significa que se pueden acceder a ellas desde otros scripts,
 comandos y programas que se ejecutan en el mismo entorno.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
export
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

export VARIABLE[=valor]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las variables de entorno exportadas son heredadas por los procesos secundarios,
 pero no son visibles en el proceso padre o en otros procesos superiores.
 Además,
 cuando se cierra una sesión de Bash,
 las variables de entorno exportadas se eliminan automáticamente.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\color lightgray
trap
\end_layout

\begin_layout Standard
El comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
trap
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para establecer la acción que se debe tomar cuando se recibe una señal específica durante la ejecución de un script o programa.
 Permite manejar y responder a las señales del sistema,
 como interrupciones de teclado,
 cierre de sesión,
 errores,
 entre otras.
\end_layout

\begin_layout Standard
La sintaxis básica del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
trap
\family default

\begin_inset Quotes frd
\end_inset

 es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

trap ACCION SEÑAL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si la señal es 
\begin_inset Quotes fld
\end_inset

0
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

EXIT
\begin_inset Quotes frd
\end_inset

,
 la acción se realizará cuando termine el proceso actual.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Escriba su propia versión de 
\begin_inset Quotes fld
\end_inset


\family typewriter
true
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
false
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba el programa 
\begin_inset Quotes fld
\end_inset


\family typewriter
and
\family default

\begin_inset Quotes frd
\end_inset

 que recibe dos comandos y ejecuta el segundo solo si el primero tuvo éxito.
 Haga un comando análogo llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
or
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Proponga una forma de incluir un script dentro de otro.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un script que reciba como argumentos un archivo y una suma de verificación,
 y muestre en la pantalla un mensaje indicando si dicho archivo tiene esa suma de verificación.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un comando que añada una entrada en un archivo de registro,
 una vez que se cierre el shell.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset

 son ejercicios que comprometen la seguridad del equipo.
 Tome las precauciones necesarias.
\end_layout

\end_inset

Escriba un programa llamado 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

 que se comporte igual que 
\begin_inset Quotes fld
\end_inset


\family typewriter
sudo
\family default

\begin_inset Quotes frd
\end_inset

,
 pero que además guarde las contraseñas ingresadas en un archivo.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset

Haga un script que impida el uso de la terminal.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset

Piense cuál es el error que comete el siguiente programa y solucionelo.
 No lo ejecute.
\end_layout

\begin_layout Standard
\begin_inset Flex Peligro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo -n "Escriba el nombre de la carpeta que desea borrar:
 "
\end_layout

\begin_layout Plain Layout

read $carpeta
\end_layout

\begin_layout Plain Layout

sudo rm -rf "$carpeta/"
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Encomillados y escapes
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Subshells
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En Bash,
 existen varios tipos de encomillados que se utilizan para definir cadenas de caracteres.
 Cada tipo de encomillado tiene un propósito específico y afecta cómo se interpreta y se expande el contenido de la cadena.
\end_layout

\begin_layout Subsection
Carácter de escape
\end_layout

\begin_layout Standard
Un carácter de escape es un carácter especial que se utiliza para cambiar el significado normal de otro carácter.
 Estos caracteres de escape se representan con una barra invertida 
\begin_inset Quotes fld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes frd
\end_inset

 seguida de otro carácter.
 
\end_layout

\begin_layout Example
Si tienes un nombre de archivo o directorio que contiene espacios,
 puedes usar un carácter de escape para que el shell lo interprete correctamente:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch archivo
\backslash
 con
\backslash
 espacios
\end_layout

\begin_layout Plain Layout

ls -l
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
total 0
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
-rw-r--r-- 1 entorno wheel 0 feb 3 15:54 'archivo con espacios'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si no se hubieran utilizado los caracteres de escape,
 se hubieran creado tres archivos,
 en vez de uno.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos omitir el significado tradicional de algunos caracteres especiales de bash utilizando caracteres de escape:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 
\backslash
$USER
\end_layout

\begin_layout Plain Layout

echo 
\backslash
*
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
$USER
\end_layout

\begin_layout Plain Layout

\family typewriter
*
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Comillas simples
\end_layout

\begin_layout Standard
Las comillas simples (
\family typewriter
''
\family default
) preservan el texto literal,
 lo que significa que todo el contenido entre las comillas simples se trata como texto sin expandir variables ni caracteres especiales.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Las comillas simples preservan los espacios.
 Esto quiere decir que si escribimos 
\family typewriter
'1 2 3'
\family default
,
 bash lo interpretara como una sola cadena y no como tres cadenas diferentes.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Si escribimos la variable especial 
\family typewriter
$USER
\family default
 entre comillas simples,
 el shell no expandirá su significado:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 'Hola $USER'.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola $USER.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Observemos que sucede si queremos crear un archivo con espacios en su nombre,
 sin usar encomillados:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch archivo con espacios
\end_layout

\begin_layout Plain Layout

ls -l
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
total 0
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 entorno wheel 0 feb 3 15:26 archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 entorno wheel 0 feb 3 15:26 con
\end_layout

\begin_layout Plain Layout

\family typewriter
-rw-r--r-- 1 entorno wheel 0 feb 3 15:26 espacios
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En cambio,
 si agregamos comillas simples,
 logramos nuestro objetivo:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm archivo con espacios
\end_layout

\begin_layout Plain Layout

touch 'archivo con espacios'
\end_layout

\begin_layout Plain Layout

ls -l
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
total 0
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
-rw-r--r-- 1 damian wheel 0 feb 3 15:28 'archivo con espacios'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En este ejemplo,
 las comillas simples 
\emph on
no
\emph default
 forman parte del nombre del archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Comillas dobles
\end_layout

\begin_layout Standard
Las comillas dobles (
\family typewriter
"")
\family default
 permiten la expansión de variables y caracteres especiales dentro de la cadena.
 Las variables entre comillas dobles se expanden y su valor se incluye en la cadena resultante.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Al igual que las comillas simples,
 las dobles también preservan espacios.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Observemos como se expanden las variables aún estando entre comillas dobles:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo 
\begin_inset Quotes fld
\end_inset

Hola $USER
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola alumno.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Podemos usar algunos caracteres especiales dentro de comillas dobles:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch 
\begin_inset Quotes fld
\end_inset

archivo con 'comillas simples'
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes qld
\end_inset

archivo con 'comillas simples'
\begin_inset Quotes qrd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En este ejemplo,
 las comillas simples 
\emph on
forman
\emph default
 parte del nombre del archivo.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Encomillado ANSI-C
\end_layout

\begin_layout Standard
El encomillado ANSI-C (
\family typewriter
$''
\family default
) es una forma de encomillado especial en Bash que permite la interpretación de ciertos caracteres de escape en el estilo del lenguaje de programación C.
 
\end_layout

\begin_layout Example
Podemos usar algunos caracteres especiales dentro del encomillado ANSI-C:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo $'uno
\backslash
ndos
\backslash
ttres
\backslash
ncuatro'
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
uno
\end_layout

\begin_layout Plain Layout

\family typewriter
dos
\begin_inset space \qquad{}
\end_inset

tres
\end_layout

\begin_layout Plain Layout

\family typewriter
cuatro
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Comillas invertidas
\begin_inset Note Note
status open

\begin_layout Plain Layout
Mover junto con tuberías
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las comillas invertidas (
\family typewriter
``
\family default
) permiten la ejecución de comandos dentro de la cadena y capturan la salida de esos comandos.
 El comando dentro de las comillas invertidas se ejecuta y su salida estándar se sustituye en la cadena resultante.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
También puede utilizarse la sintaxis 
\begin_inset Quotes fld
\end_inset


\family typewriter
$(comando)
\family default

\begin_inset Quotes frd
\end_inset

 en reemplazo de las comillas invertidas.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Observemos la salida del siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

date +%B
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
febrero
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para crear una carpeta con el nombre del mes actual podemos aprovechar las comillas invertidas:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir `date +%B`
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Expresiones aritméticas
\end_layout

\begin_layout Standard
En Bash,
 se puede evaluar expresiones aritméticas utilizando la expansión de comandos 
\begin_inset Quotes fld
\end_inset


\family typewriter
$((EXPRESION))
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Example
Podemos usar las expresiones aritméticas de bash en vez de utilizar el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
bc
\family default

\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo $((5+5))
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
10
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Genere un listado de todos los directorios de la variable 
\emph on
PATH
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

Escriba un comando que muestre el tamaño del archivo mas grande de la carpeta actual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Suponga que en un directorio tiene muchos archivos,
 cada uno de ellos tiene el título de una canción y está encabezado por una primera linea señalando el artista.
 Cree una carpeta para cada artista,
 y mueva las canciones a las carpetas correspondientes en un solo comando.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un comando para terminar todas las tareas en segundo plano.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Considere la salida del siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

ls
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
'a'$'
\backslash
n''b'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
¿Cuál es el nombre del archivo?
 Escriba un comando para crearlo y luego bórrelo.
\begin_inset Note Note
status open

\begin_layout Plain Layout
EJERCICIO:
 Borrar los 3 archivos mas grandes.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Control de flujo
\end_layout

\begin_layout Standard
Las estructuras de control de flujo tradicionales de los lenguajes de programación,
 también las tenemos disponibles en el lenguaje de scripting de bash.
\end_layout

\begin_layout Subsection
if / else
\end_layout

\begin_layout Standard
El condicional 
\begin_inset Quotes fld
\end_inset


\family typewriter
if
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para tomar decisiones basadas en el resultado de la ejecución de un programa.
 La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

if comando;
 then
\end_layout

\begin_layout Plain Layout

  # Código a ejecutar si el codigo de salida del comando es 0.
\end_layout

\begin_layout Plain Layout

else
\end_layout

\begin_layout Plain Layout

  # Código a ejecutar en caso contrario.
\end_layout

\begin_layout Plain Layout

fi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando mas frecuente utilizado en un 
\begin_inset Quotes fld
\end_inset


\family typewriter
if
\family default

\begin_inset Quotes frd
\end_inset

 es 
\begin_inset Quotes fld
\end_inset


\family typewriter
test
\family default

\begin_inset Quotes frd
\end_inset

,
 o su versión abreviada 
\begin_inset Quotes fld
\end_inset


\family typewriter
[
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos informar sobre el resultado de un comando de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

if mkdir carpeta &> /dev/null;
 then
\end_layout

\begin_layout Plain Layout

  echo Se ha creado la carpeta.
\end_layout

\begin_layout Plain Layout

else
\end_layout

\begin_layout Plain Layout

  echo Ocurrio un error al crear la carpeta.
\end_layout

\begin_layout Plain Layout

fi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos validar la cantidad de argumentos con el siguiente script:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

if [ $# -eq 0 ];
 then
\end_layout

\begin_layout Plain Layout

  echo Cantidad de argumentos insuficiente.
\end_layout

\begin_layout Plain Layout

  exit 1
\end_layout

\begin_layout Plain Layout

fi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Pasar corchetes dobles al comando test
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Además de utilizar un comando como condición,
 también es posible utilizar la sintaxis especial 
\begin_inset Quotes fld
\end_inset


\family typewriter
[[]]
\family default

\begin_inset Quotes frd
\end_inset

.
 Los corchetes dobles son una característica de bash que facilitan la escritura de algunas expresiones.
 Algunas características y usos importantes de los corchetes dobles son:
\end_layout

\begin_layout Itemize
Comparaciones de cadenas y números de forma más legible:
 podemos utilizar los operadores tradicionales de los lenguajes de programación (
\begin_inset Quotes fld
\end_inset


\family typewriter
==
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
!=
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
>
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
<
\family default

\begin_inset Quotes frd
\end_inset

) para realizar comparaciones de cadenas.
\end_layout

\begin_layout Itemize
Operadores lógicos mas sencillos:
 De igual manera podemos usar 
\begin_inset Quotes fld
\end_inset


\family typewriter
&&
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
||
\family default

\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset


\family typewriter
!
\family default

\begin_inset Quotes frd
\end_inset

 como conjunción,
 disyunción y negación.
\end_layout

\begin_layout Itemize
Expresiones regulares:
 Los corchetes dobles también admiten la coincidencia de patrones utilizando expresiones regulares utilizando el operador 
\begin_inset Quotes fld
\end_inset


\family typewriter
=~
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Example
Podemos validar que el primer argumento sea un número con el siguiente programa:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

if [[ $# == 0  || !
 $1 =~ [[:digit:]]+ ]];
 then
\end_layout

\begin_layout Plain Layout

  echo Error inesperado.
\end_layout

\begin_layout Plain Layout

  exit 1
\end_layout

\begin_layout Plain Layout

fi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
for
\end_layout

\begin_layout Standard
El bucle 
\begin_inset Quotes fld
\end_inset


\family typewriter
for
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para iterar sobre una lista de elementos y ejecutar un bloque de código para cada elemento de la lista.
 La sintaxis básica del bucle 
\begin_inset Quotes fld
\end_inset


\family typewriter
for
\family default

\begin_inset Quotes frd
\end_inset

 en bash es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

for variable in lista;
 do
\end_layout

\begin_layout Plain Layout

  # Código a ejecutar para cada elemento
\end_layout

\begin_layout Plain Layout

done
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Quotes fld
\end_inset


\family typewriter
variable
\family default

\begin_inset Quotes frd
\end_inset

 es una variable que tomará el valor de cada elemento de la lista en cada iteración del bucle y 
\begin_inset Quotes fld
\end_inset


\family typewriter
lista
\family default

\begin_inset Quotes frd
\end_inset

 es una secuencia de elementos separados por espacios.
\end_layout

\begin_layout Example
Para agregar texto al final de cada archivo que termine en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.txt
\family default

\begin_inset Quotes frd
\end_inset

 podemos usar el siguiente script:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

for ARCHIVO in `ls *.txt`;
 do
\end_layout

\begin_layout Plain Layout

  echo FIN DE ARCHIVO >> $ARCHIVO
\end_layout

\begin_layout Plain Layout

done
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
while / until
\end_layout

\begin_layout Standard
El bucle 
\begin_inset Quotes fld
\end_inset


\family typewriter
while
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para repetir un bloque de código mientras el código de salida de un programa sea cero.
 La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

while comando;
 do
\end_layout

\begin_layout Plain Layout

  # Código a ejecutar mientras el codigo
\end_layout

\begin_layout Plain Layout

  # de salida del comando sea 0.
\end_layout

\begin_layout Plain Layout

done
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En bash también existe la repetición 
\begin_inset Quotes fld
\end_inset


\family typewriter
until
\family default

\begin_inset Quotes frd
\end_inset

 que repite el código 
\emph on
hasta
\emph default
 que la salida del comando sea 0.
\end_layout

\end_inset


\end_layout

\begin_layout Example
El siguiente ejemplo muestra como podría validarse una contraseña.
 La contraseña correcta es 
\begin_inset Quotes fld
\end_inset


\emph on
hola
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

SUM=b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79
\end_layout

\begin_layout Plain Layout

PASS=none
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while [ $SUM != $PASS ];
 do
\end_layout

\begin_layout Plain Layout

    echo -n "Ingrese su contraseña:
 "
\end_layout

\begin_layout Plain Layout

    read -s PASS
\end_layout

\begin_layout Plain Layout

    PASS=$(echo $PASS | tr -d "
\backslash
n" | sha256sum | cut -d " " -f1)
\end_layout

\begin_layout Plain Layout

    echo
\end_layout

\begin_layout Plain Layout

done
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

echo Contraseña correcta.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
case
\end_layout

\begin_layout Standard
La estructura de control de flujo 
\begin_inset Quotes fld
\end_inset


\family typewriter
case
\family default

\begin_inset Quotes frd
\end_inset

 se utiliza para evaluar una variable o expresión y realizar diferentes acciones según el valor coincida con uno de los patrones especificados.
 Es similar a una serie de declaraciones 
\begin_inset Quotes fld
\end_inset


\family typewriter
if else
\family default

\begin_inset Quotes frd
\end_inset

 anidadas,
 pero proporciona una forma más concisa de manejar múltiples opciones.
 La sintaxis básica del 
\begin_inset Quotes fld
\end_inset


\family typewriter
case
\family default

\begin_inset Quotes frd
\end_inset

 en Bash es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP,fontsize={\small}"
inline false
status open

\begin_layout Plain Layout

case variable in
\end_layout

\begin_layout Plain Layout

  patrón1)
\end_layout

\begin_layout Plain Layout

    # Código a ejecutar si la variable coincide con patrón1
\end_layout

\begin_layout Plain Layout

    ;;
\end_layout

\begin_layout Plain Layout

  patrón2)
\end_layout

\begin_layout Plain Layout

    # Código a ejecutar si la variable coincide con patrón2
\end_layout

\begin_layout Plain Layout

    ;;
\end_layout

\begin_layout Plain Layout

  patrón3)
\end_layout

\begin_layout Plain Layout

    # Código a ejecutar si la variable coincide con patrón3
\end_layout

\begin_layout Plain Layout

    ;;
\end_layout

\begin_layout Plain Layout

  *)
\end_layout

\begin_layout Plain Layout

    # Código a ejecutar si la variable no coincide con ninguno
\end_layout

\begin_layout Plain Layout

    # de los patrones anteriores
\end_layout

\begin_layout Plain Layout

    ;;
\end_layout

\begin_layout Plain Layout

esac
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos utilizar la estructura de control de flujo 
\begin_inset Quotes fld
\end_inset


\family typewriter
case
\family default

\begin_inset Quotes frd
\end_inset

 para manejar las opciones de un menú de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo "1) Listar directorio actual."
\end_layout

\begin_layout Plain Layout

echo "2) Listar directorio raiz."
\end_layout

\begin_layout Plain Layout

read -p "Elija una opcion:
 " OPCION
\end_layout

\begin_layout Plain Layout

case $OPCION in
\end_layout

\begin_layout Plain Layout

  1)
\end_layout

\begin_layout Plain Layout

    ls
\end_layout

\begin_layout Plain Layout

  ;;
\end_layout

\begin_layout Plain Layout

  2)
\end_layout

\begin_layout Plain Layout

    ls /
\end_layout

\begin_layout Plain Layout

  ;;
\end_layout

\begin_layout Plain Layout

  *)
\end_layout

\begin_layout Plain Layout

    echo Opcion incorrecta.
\end_layout

\begin_layout Plain Layout

  ;;
\end_layout

\begin_layout Plain Layout

esac
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph off
\color lightgray
select
\end_layout

\begin_layout Standard
En Bash,
 select se utiliza para construir menús interactivos en scripts de shell.
 Proporciona una forma conveniente de presentar opciones al usuario y permite seleccionar una de esas opciones.
\end_layout

\begin_layout Standard
Aquí está la estructura básica de un 
\family typewriter
select
\family default
:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

select variable in opcion1 opcion2 opcion3 ...
\end_layout

\begin_layout Plain Layout

do
\end_layout

\begin_layout Plain Layout

    # Cuerpo del menu
\end_layout

\begin_layout Plain Layout

done
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Cada una de las 
\begin_inset Quotes fld
\end_inset


\family typewriter
opciones
\family default

\begin_inset Quotes frd
\end_inset

 es el título con el que figurarán en el menú.
 Bash se encargará de enumerarlas.
\end_layout

\begin_layout Itemize
La 
\begin_inset Quotes fld
\end_inset


\family typewriter
variable
\family default

\begin_inset Quotes frd
\end_inset

 almacenará el título de la opción elegida.
\end_layout

\begin_layout Itemize
Puede utilizarse la variable especial 
\begin_inset Quotes fld
\end_inset


\family typewriter
REPLY
\family default

\begin_inset Quotes frd
\end_inset

 para conocer cuál fue la respuesta del usuario.
\end_layout

\begin_layout Itemize
Para establecer un 
\emph on
prompt
\emph default
 adecuado,
 puede setearse la variable 
\begin_inset Quotes fld
\end_inset


\family typewriter
PS3
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
La estructura 
\begin_inset Quotes fld
\end_inset


\family typewriter
select
\family default

\begin_inset Quotes frd
\end_inset

 se usa a menudo en combinación con 
\begin_inset Quotes fld
\end_inset


\family typewriter
case
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Podemos utilizar la estructura de control de flujo 
\begin_inset Quotes fld
\end_inset


\family typewriter
select
\family default

\begin_inset Quotes frd
\end_inset

 para crear un menú de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

PS3="Elija una opcion:
 "
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

select ITEM in "Listar directorio actual." "Listar directorio raiz."
\end_layout

\begin_layout Plain Layout

do
\end_layout

\begin_layout Plain Layout

  case $REPLY in
\end_layout

\begin_layout Plain Layout

    1)
\end_layout

\begin_layout Plain Layout

      ls;;
\end_layout

\begin_layout Plain Layout

    2)
\end_layout

\begin_layout Plain Layout

      ls /;;
\end_layout

\begin_layout Plain Layout

    *)
\end_layout

\begin_layout Plain Layout

      echo Opcion incorrecta.;;
\end_layout

\begin_layout Plain Layout

  esac
\end_layout

\begin_layout Plain Layout

done
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Funciones
\end_layout

\begin_layout Standard
Las funciones permiten agrupar un conjunto de comandos relacionados para que puedan ser reutilizados y ejecutados en diferentes partes de un script.
 Las funciones ayudan a modularizar el código y facilitan el mantenimiento y la legibilidad del mismo.
\end_layout

\begin_layout Standard
La sintaxis básica para definir una función es:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

nombre_funcion() {
\end_layout

\begin_layout Plain Layout

  # Código de la función
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las funciones pueden aceptar argumentos,
 que son valores que se pasan a la función cuando se llama.
 Puedes acceder a estos argumentos dentro de la función utilizando las variables especiales 
\begin_inset Quotes fld
\end_inset


\family typewriter
$1
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
$2
\family default

\begin_inset Quotes frd
\end_inset

,
 
\begin_inset Quotes fld
\end_inset


\family typewriter
$3
\family default

\begin_inset Quotes frd
\end_inset

,
 etc.
\end_layout

\begin_layout Standard
Para llamar a una función simplemente se escribe el nombre de la misma y a continuación sus argumentos separados por un espacio.
\end_layout

\begin_layout Example
El siguiente ejemplo ilustra el uso de funciones y argumentos en bash:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

saludar() {
\end_layout

\begin_layout Plain Layout

  echo "Hola,
 $1.
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

NOMBRE="Damian"
\end_layout

\begin_layout Plain Layout

saludar $NOMBRE
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Hola,
 Damian.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Escriba un script que descargue un archivo de internet.
 Si la descarga falla,
 debe volver a intentar hasta lograrlo.
 Agregue pausas entre cada intento.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un programa que renombre todos los archivos y carpetas a minúsculas.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un script que recibe una cantidad variable de archivos y elimine las lineas vacías de ellos.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un programa que reciba una cantidad variable de archivos y para cada uno de ellos cree otro archivo con nombre idéntico pero finalizado en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.sum
\family default

\begin_inset Quotes frd
\end_inset

 que tenga solamente la correspondiente suma de verificación.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un script que recibe un archivo de texto y un diccionario y muestre en pantalla las palabras del archivo que no están en el diccionario.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Escriba un programa que reciba un directorio y muestre en pantalla un mensaje cuando se crea o borra un archivo adentro.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Averigüe cual es el propósito de la variable especial 
\begin_inset Quotes fld
\end_inset


\family typewriter
IFS
\family default

\begin_inset Quotes frd
\end_inset

 y utilícela para iterar sobre un archivo 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Multics"
literal "true"

\end_inset

 CSV
\begin_inset Quotes frd
\end_inset

.
 Repita el ejercicio iterando sobre la variable 
\emph on
PATH
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faExclamationTriangle
\backslash
;
\end_layout

\end_inset

 son ejercicios que comprometen la seguridad del equipo.
 Tome las precauciones necesarias.
\end_layout

\end_inset

Lea atentamente el siguiente script y determine cual es su comportamiento.
 No lo ejecute.
\end_layout

\begin_layout Standard
\begin_inset Flex Peligro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

:(){ :|:&};:
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Introduccion
\begin_inset Quotes fld
\end_inset


\emph on
Me gusta ofender a las personas porque considero que una persona que se ofende,
 merece ser ofendida
\emph default

\begin_inset Quotes frd
\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\begin_inset Newline newline
\end_inset

Linus Torvalds
\end_layout

\begin_layout Part
Herramientas auxiliares
\end_layout

\begin_layout Chapter
Control de versiones
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
agregar https://learngitbranching.js.org/
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Subsection
Descripción
\end_layout

\begin_layout Standard
Un 
\begin_inset Quotes fld
\end_inset

VCS
\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset

VCS
\begin_inset Quotes frd
\end_inset

 son las siglas de 
\begin_inset Quotes fld
\end_inset


\emph on
Version Control System
\emph default

\begin_inset Quotes frd
\end_inset

 (sistema de control de versiones)
\end_layout

\end_inset

 es una herramienta que te permite gestionar y controlar los cambios en archivos y proyectos a lo largo del tiempo.
 Su propósito principal es rastrear las modificaciones realizadas en los archivos,
 permitiendo el seguimiento de quién hizo los cambios,
 que cambió,
 cuándo se realizó y qué se modificó en cada versión.
\end_layout

\begin_layout Standard
Es particularmente útil en proyectos de desarrollo de software,
 donde varias personas pueden trabajar simultáneamente en los mismos archivos y es necesario mantener un historial completo de cambios.
\end_layout

\begin_layout Standard
Algunos de los más conocidos son:
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://git-scm.com/"
literal "true"

\end_inset

 Git.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://subversion.apache.org/"
literal "true"

\end_inset

 Subversion.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.mercurial-scm.org/"
literal "true"

\end_inset

 Mercurial.
\end_layout

\begin_layout Standard
Git tiene tres áreas de trabajo fundamentales,
 que representan diferentes estados del sistema de control de versiones.
 Estas son:
\end_layout

\begin_layout Itemize
\begin_inset Marginal
status open

\begin_layout Plain Layout
En la terminología en ingles,
 es llamado 
\begin_inset Quotes fld
\end_inset


\emph on
Working tree
\emph default

\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset

Directorio de trabajo:
 Es el directorio actual donde estás trabajando en tus archivos.
 Contiene la versión actual y modificada de tus archivos.
 Los cambios realizados en el directorio de trabajo no se registran en Git hasta que se añaden al área de preparación.
\end_layout

\begin_layout Itemize
\begin_inset Marginal
status open

\begin_layout Plain Layout
En la terminología en ingles,
 es llamada 
\begin_inset Quotes fld
\end_inset


\emph on
Staging area
\emph default

\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset


\emph on
Index
\emph default

\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset

Área de preparación:
 Es un área intermedia entre el directorio de trabajo y el repositorio.
 Se utiliza para recopilar y preparar los cambios que se incluirán en la próxima confirmación.
 Los archivos en el área de preparación están listos para ser confirmados,
 pero aún no se han guardado en la base de datos del repositorio.
\end_layout

\begin_layout Itemize
\begin_inset Marginal
status open

\begin_layout Plain Layout
En este libro utilizaremos la palabra 
\begin_inset Quotes fld
\end_inset


\emph on
Confirmación
\emph default

\begin_inset Quotes frd
\end_inset

 para hacer referencia la palabra inglesa 
\begin_inset Quotes fld
\end_inset


\emph on
commit
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

Repositorio:
 Es la base de datos donde Git almacena el historial completo de cambios.
 Contiene todos los estados confirmados,
 cada uno con su conjunto de cambios y referencias a confirmaciones anteriores.
 Los cambios confirmados en el área de preparación se guardan permanentemente en el repositorio.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git.png
	lyxscale 15
	scale 15
	BoundingBox 0bp 0bp 5990bp 2777bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Áreas de trabajo de Git
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En Git,
 un archivo puede encontrarse en uno de los cuatro estados principales,
 que representan su posición en relación con el flujo de trabajo de Git.
 Estos estados son:
\end_layout

\begin_layout Enumerate
\begin_inset Marginal
status open

\begin_layout Plain Layout
En la terminología en ingles,
 se llaman 
\begin_inset Quotes fld
\end_inset


\emph on
Untracked
\emph default

\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset

No rastreado:
 Un archivo no rastreado es aquel que Git no está siguiendo.
 Puede ser un nuevo archivo que aún no ha sido añadido al repositorio o un archivo que ha sido ignorado explícitamente.
\end_layout

\begin_layout Enumerate
\begin_inset Marginal
status open

\begin_layout Plain Layout
En la terminología en ingles,
 se llaman 
\begin_inset Quotes fld
\end_inset


\emph on
Staged
\emph default

\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset

En el área de preparación:
 Un archivo en el área de preparación está listo para ser incluido en la próxima confirmación.
\end_layout

\begin_layout Enumerate
Confirmado:
 Un archivo confirmado es aquel que ha sido guardado permanentemente en el repositorio mediante un commit.
 Está en el estado más estable y forma parte del historial del proyecto.
\end_layout

\begin_layout Enumerate
Modificado:
 Un archivo modificado es un archivo que ha sido modificado en tu directorio de trabajo pero no ha sido aún añadido al área de preparación.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/tracked.png
	scale 50
	BoundingBox 100bp 0bp 700bp 453bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Estados de un archivo en Git
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Configuración
\end_layout

\begin_layout Standard
Git permite configurar opciones en tres niveles:
 local,
 global y del sistema.
 Cada nivel tiene un alcance diferente:
\end_layout

\begin_layout Itemize
Las configuraciones del sistema se aplican a todos los usuarios y repositorios en la máquina.
\end_layout

\begin_layout Itemize
Las configuraciones globales,
 se aplican a todos los repositorios para un usuario específico en la máquina.
\end_layout

\begin_layout Itemize
Las configuraciones locales,
 se aplican solo al repositorio actual.
\end_layout

\begin_layout Standard
La sintaxis básica del comando para configurar es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git config [--global | --system] configuracion valor
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La opción 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

--global
\end_layout

\end_inset

 indica que la configuración se aplicará a nivel global,
 afectando a todos los repositorios para el usuario.
 Si no se utiliza,
 la configuración se aplicará solo al repositorio actual.
 También podría utilizarse la opción 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

--system
\end_layout

\end_inset

 para aplicar las configuraciones a todo el sistema.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Aquí hay algunas opciones de configuración populares:
\end_layout

\begin_layout Description

\family typewriter
user.name
\family default
 Establece el nombre de usuario que se utilizará para las confirmaciones.
\end_layout

\begin_layout Description

\family typewriter
user.email
\family default
 Establece la dirección de correo electrónico asociada a tu cuenta de Git.
\end_layout

\begin_layout Description

\family typewriter
core.editor
\family default
 Define el editor de texto predeterminado para mensajes de confirmación y otras operaciones que abren un editor.
\end_layout

\begin_layout Description

\family typewriter
init.defaultbranch
\family default
 Configura el nombre de la rama predeterminada al inicializar un nuevo repositorio.
\end_layout

\begin_layout Standard
Después de instalar Git por primera vez deberíamos establecer nuestro nombre de usuario y correo electrónico.
 Para ello utilizamos el comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git config
\end_layout

\end_inset

 de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git config --global user.name 
\begin_inset Quotes fld
\end_inset

Damian Ariel
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Plain Layout

git config --global user.email 
\begin_inset Quotes fld
\end_inset

damarotte@gmail.com
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si deseamos ver todas las configuraciones de Git podemos usar el comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git config -l
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Configure 
\family typewriter
git
\family default
 para que utilice por defecto su editor de preferencia.
\end_layout

\begin_layout Section
Comandos básicos
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
init
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git init
\end_layout

\end_inset

 se utiliza para inicializar un nuevo repositorio Git.
 La sintaxis del comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git init
\end_layout

\end_inset

 es bastante simple:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git init [ruta]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Después de ejecutar 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git init
\end_layout

\end_inset

,
 se creará un nuevo repositorio Git en el directorio especificado o en el directorio actual,
 si no se proporciona una ruta.
 El comando establecerá la estructura inicial del repositorio,
 creando la carpeta oculta 
\family typewriter
.git
\family default
 que contiene la información necesaria para rastrear y gestionar los cambios en los archivos del proyecto.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git init
\end_layout

\end_inset

 se utiliza generalmente una sola vez al inicio de un nuevo proyecto para convertir un directorio ordinario en un repositorio Git.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Creemos una carpeta vacía y dentro de ella un repositorio vacío:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

mkdir repositorio
\end_layout

\begin_layout Plain Layout

cd repositorio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/wd.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Directorio de trabajo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git init
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Inicializado repositorio Git vacío en /home/entorno/repositorio/.git/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/init.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git init
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
status
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git status
\end_layout

\end_inset

 es utilizado para obtener información sobre el estado actual del repositorio Git.
 Proporciona detalles sobre los archivos en el directorio de trabajo en comparación con el área de preparación y la última confirmación en el repositorio.
 Aquí está la sintaxis básica del comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git status [-s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La opción 
\family typewriter
-s
\family default
 se utiliza para obtener una salida simplificada y concisa,
 mostrando únicamente información resumida sobre el estado de los archivos.
 
\end_layout

\begin_layout Example
Observemos el estado de nuestro repositorio recién creado:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
No hay commits todavía
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
no hay nada para confirmar (crea/copia archivos y usa "git add" para hacerles seguimiento)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Si agregamos un archivo al directorio de trabajo (pero no al área de preparación) observaríamos una salida como esta:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

touch archivo
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
No hay commits todavía
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Archivos sin seguimiento:
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git add <archivo>..." para incluirlo a lo que será confirmado)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\color red
archivo
\color inherit

\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa "git add" para hacerles seguimiento)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/touch.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
touch
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
add
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git add
\end_layout

\end_inset

 se utiliza para añadir 
\emph on
cambios
\emph default
 realizados en el directorio de trabajo al área de preparación.
 Esto prepara los cambios seleccionados para ser incluidos en la próxima confirmación.
 Aquí está la sintaxis básica del comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git add [opciones] archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cuando ejecutamos el comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git add
\end_layout

\end_inset

 los archivos modificados son copiados desde el directorio de trabajo al área de preparación.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Si se pretende eliminar un archivo del repositorio en la próxima confirmación,
 se puede utilizar 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

rm
\end_layout

\end_inset

 seguido de 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git add
\end_layout

\end_inset

,
 o lo que es equivalente:
 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git rm
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar información sobre .gitignore
\end_layout

\end_inset


\end_layout

\begin_layout Example
Ahora vamos a añadir el archivo de los ejemplos anteriores,
 al área de preparación:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git add archivo
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
No hay commits todavía
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Cambios a ser confirmados:
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git rm --cached <archivo>..." para sacar del área de stage)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\color green
nuevos archivos:
 archivo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/add1.png
	lyxscale 30
	scale 28
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git add
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
commit
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git commit
\end_layout

\end_inset

 se utiliza en Git para confirmar los cambios realizados en el área de preparación,
 creando un nuevo commit en el historial del repositorio.
 La sintaxis básica es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git commit [-a] [-m mensaje]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La opción 
\family typewriter
-a
\family default
 del comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git commit
\end_layout

\end_inset

 permite hacer una confirmación agregando automáticamente al área de preparación todos los archivos 
\emph on
con seguimiento
\emph default
.
\end_layout

\begin_layout Standard
Si no incluyes la opción 
\family typewriter
-m
\family default
,
 Git abrirá un editor de texto para que escribas un mensaje más largo.
 
\end_layout

\begin_layout Standard
Después de realizar una confirmación,
 los cambios confirmados se guardan de manera permanente en el historial del repositorio.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Es importante proporcionar mensajes claros y concisos para que otros desarrolladores (o tú mismo en el futuro) comprendan el propósito de la confirmación.
\end_layout

\begin_layout Plain Layout
También deberías realizar confirmaciones frecuentes y atómicas para tener un historial de cambios claro y manejable.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Finalmente veamos que sucede si confirmamos los cambios del área de preparación:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git commit -m 
\begin_inset Quotes fld
\end_inset

Primer commit.
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
[master (commit-raíz) 0287d2a] Primer commit.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
1 file changed,
 0 insertions(+),
 0 deletions(-)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
create mode 100644 archivo
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
nada para hacer commit,
 el árbol de trabajo está limpio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/commit1.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git commit
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
log
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git log
\end_layout

\end_inset

 se utiliza para visualizar el historial de confirmaciones de un repositorio.
 Proporciona información detallada sobre las confirmaciones realizados,
 como el autor,
 la fecha,
 el mensaje de la confirmación y el hash de la misma.
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git log [opciones]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las opciones mas importantes del comando son las siguientes:
\end_layout

\begin_layout Description

\family typewriter
-–oneline
\family default
 Muestra cada confirmación en una sola línea,
 resumido con el hash y el mensaje del commit.
\end_layout

\begin_layout Description

\family typewriter
-–graph 
\family default
Muestra una representación gráfica de las ramas y fusiones.
\end_layout

\begin_layout Description

\family typewriter
–n 
\family default
Limita la salida a un número específico de confirmaciones.
\end_layout

\begin_layout Example
Si observamos el registro de nuestro repositorio de prueba veremos lo siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git log
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit c78ce51fb5e7a5f57b6dca800ce6a5455f8b1aae (
\color cyan
HEAD
\color inherit
 -> 
\color green

\begin_inset space ~
\end_inset

master
\color yellow
)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Sat Jan 20 20:06:32 2024 -0300
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Primer commit.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la salida podemos observar una suma de verificación en color amarillo.
 Este,
 será un identificador único que podemos utilizar para hacer referencia a dicha confirmación.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En la salida del comando también puede observarse que esta es la última confirmación de la rama 
\emph on
master
\emph default
 (en verde) y que actualmente estamos trabajando en dicha rama (en celeste).
\end_layout

\end_inset


\end_layout

\begin_layout Example
También podemos ver la misma información en forma reducida:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git log --oneline
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
c78ce51 (
\color cyan
HEAD
\color inherit
 -> 
\color green

\begin_inset space ~
\end_inset

master
\color yellow
) 
\color inherit
Primer commit.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
restore
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git restore
\end_layout

\end_inset

 se utiliza para restaurar archivos en el directorio de trabajo a un estado específico.
 También puede revertir cambios realizados en el área de preparación y deshacer modificaciones no deseadas.
 Aquí está la sintaxis básica del comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git restore [opciones] archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las opciones mas comunes son las siguientes:
\end_layout

\begin_layout Description

\family typewriter
-S 
\family default
Restaura los archivos en el área de preparación al estado de la última confirmación.
\end_layout

\begin_layout Description

\family typewriter
-s
\family default
 Permite especificar la fuente desde la que se restauraran los archivos.
\end_layout

\begin_layout Standard
Si se utiliza sin opciones,
 se restauraran archivos en el directorio de trabajo desde el área de preparación.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git restore
\end_layout

\end_inset

 no afecta el historial de confirmaciones,
 solo revierte los cambios en el área de preparación o el directorio de trabajo.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Veamos ahora la salida de 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git status
\end_layout

\end_inset

 si borramos el archivo del directorio de trabajo:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

rm archivo
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Cambios no rastreados para el commit:
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git add/rm <archivo>..." para actualizar a lo que se le va a hacer commit)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git restore <archivo>..." para descartar los cambios en el directorio de trabajo)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\color red
borrados:
 archivo
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
sin cambios agregados al commit (usa "git add" y/o "git commit -a")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/rm.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
rm
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Si recuperamos el archivo borrado a partir de la versión confirmada en el repositorio observaremos lo siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git restore archivo
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
nada para hacer commit,
 el árbol de trabajo está limpio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/commit1.png
	lyxscale 30
	scale 26
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git restore
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Agreguemos contenido al área de preparación:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo contenido > archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/contenido.png
	lyxscale 30
	scale 26
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Agregando contenido al directorio de trabajo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git add archivo
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Cambios a ser confirmados:
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git restore --staged <archivo>..." para sacar del área de stage)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\color green
modificados:
 archivo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/add2.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git add
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Veamos ahora que sucede si restauramos el archivo en el área de preparación,
 a la versión de la última confirmación:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git restore --staged archivo
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Cambios no rastreados para el commit:
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git add <archivo>..." para actualizar lo que será confirmado)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git restore <archivo>..." para descartar los cambios en el directorio de trabajo)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\color red
modificados:
 archivo
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
sin cambios agregados al commit (usa "git add" y/o "git commit -a")
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/contenido.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git restore –-staged
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
diff
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git diff
\end_layout

\end_inset

 en Git se utiliza para mostrar las diferencias entre diferentes estados del proyecto.
 Principalmente,
 compara el contenido entre el directorio de trabajo y el área de preparación,
 o entre dos confirmaciones,
 ramas o cualquier otro punto en el historial de cambios.
 
\end_layout

\begin_layout Standard
Su sintaxis es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git diff [--staged | commit1 commit2] [archivo]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Si usamos el comando sin opciones,
 muestra las diferencias entre los archivos que has modificado en el directorio de trabajo y los que ya has añadido al área de preparación.
\end_layout

\begin_layout Itemize
Si agregamos la opción 
\family typewriter
–-staged
\family default
,
 muestra las diferencias entre los archivos en el área de preparación y la última confirmación realizada.
\end_layout

\begin_layout Itemize
También podemos comparar el contenido entre dos confirmaciones especificando sus respectivas sumas de verificación.
\end_layout

\begin_layout Example
Observemos las diferencias entre el directorio de trabajo y el área de preparación,
 luego de agregar contenido a un archivo:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git diff
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
diff --git a/archivo b/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
index e69de29..764df4e 100644
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
--- a/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
+++ b/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color cyan
@@ -0,0 +1 @@
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color green
+contenido
\end_layout

\end_inset


\end_layout

\begin_layout Example
Agreguemos la nueva versión al área de preparación:
 
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git add archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/add2.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git add
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora modifiquemos el contenido de nuestro archivo.
 La salida ahora sera algo similar a esto:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

echo mas contenido >> archivo && git diff
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
diff --git a/archivo b/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
index 764df4e..8c064c0 100644
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
--- a/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
+++ b/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color cyan
@@ -1 +1,2 @@
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
contenido
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color green
+mas contenido
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/mascontenido.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Agregando mas contenido al archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Si comparamos el área de preparación con la última confirmación veremos algo como esto:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git diff --staged
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
diff --git a/archivo b/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
index e69de29..764df4e 100644
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
--- a/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\size footnotesize
+++ b/archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color cyan
@@ -0,0 +1 @@
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color green
+contenido
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\strikeout on
\color lightgray
reset
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Investigue para que sirve la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

 del comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
git add
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Investigue para que sirve el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
git revert
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Investigue para que sirve el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
git blame
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Investigue para que sirve el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
git show
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Section
Trabajando con ramas
\end_layout

\begin_layout Subsection
Definición
\end_layout

\begin_layout Standard
Una rama es una línea de desarrollo independiente que permite trabajar en nuevas características,
 correcciones de errores o experimentos sin afectar el estado principal del proyecto.
 Cada rama en un repositorio Git representa una línea de tiempo separada de confirmaciones que evoluciona de forma paralela a otras ramas.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Internamente una rama es simplemente un nombre que le ponemos a una confirmación.
 Esta referencia se va actualizando con cada confirmación nueva que agregamos a la rama activa.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Git posee un puntero de referencia especial llamado 
\begin_inset Quotes fld
\end_inset


\emph on
HEAD
\emph default

\begin_inset Quotes frd
\end_inset

 que representa la rama actual.
 Puedes pensar en 
\begin_inset Quotes fld
\end_inset


\emph on
HEAD
\emph default

\begin_inset Quotes frd
\end_inset

 como el 
\begin_inset Quotes fld
\end_inset

punto de vista actual
\begin_inset Quotes frd
\end_inset

 o el 
\begin_inset Quotes fld
\end_inset

punto de referencia
\begin_inset Quotes frd
\end_inset

 en el historial de tu proyecto.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
branch
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git branch
\end_layout

\end_inset

 se utiliza para realizar operaciones relacionadas con ramas en tu repositorio.
 Puedes listar las ramas existentes y crear nuevas ramas.
\end_layout

\begin_layout Standard
Su sintaxis es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git branch [-a | nombre]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Si se utiliza sin ninguna opción,
 se listaran todas las ramas locales.
\end_layout

\begin_layout Itemize
También puede agregarse la opción 
\begin_inset Quotes fld
\end_inset


\family typewriter
-a
\family default

\begin_inset Quotes frd
\end_inset

 para ver las ramas remotas.
\end_layout

\begin_layout Itemize
Para crear una rama,
 basta con pasarle como argumento su nombre.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Debemos notar que cuando creamos una nueva rama el puntero de referencia no se mueve automáticamente,
 es decir,
 seguimos posicionados en la rama original.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Para ver las ramas locales usamos el comando sin opciones:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git branch
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
* 
\color green
master
\end_layout

\end_inset


\end_layout

\begin_layout Example
Creamos una 
\begin_inset Quotes fld
\end_inset

nueva
\begin_inset Quotes frd
\end_inset

 rama:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git branch nueva
\end_layout

\begin_layout Plain Layout

git branch
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
* 
\color green
master
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset

nueva
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
switch
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git switch
\end_layout

\end_inset

 se utiliza para cambiar entre ramas existentes.
 Simplemente basta escribir el comando seguido del nombre de la rama a la cual se pretende cambiar.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
A partir de Git 2.23,
 se recomienda usar 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git switch
\end_layout

\end_inset

 en lugar de 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git checkout
\end_layout

\end_inset

 para cambiar entre ramas,
 ya que es más fácil de entender y menos propenso a errores.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Veamos que sucede si cambiamos a la nueva rama:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git switch nueva
\end_layout

\begin_layout Plain Layout

git log
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
M archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Cambiado a rama 'nueva'
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit 980bc28d5e306ae1fad33b9731126b4964813fc4 (
\series bold
\color cyan
HEAD
\series default
\color inherit
 -> 
\color green

\begin_inset space ~
\end_inset


\series bold
nueva
\series default
\color inherit
,
 
\series bold
\color green
master
\series default
\color yellow
)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Mon Jan 22 18:37:09 2024 -0300
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Primer commit.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si observamos con atención,
 comprenderemos que por el momento ambas ramas son idénticas pero que la rama activa es la 
\begin_inset Quotes fld
\end_inset

nueva
\begin_inset Quotes frd
\end_inset

 rama.
\end_layout

\begin_layout Example
Confirmemos ahora los cambios que previamente preparamos y observemos el estado del repositorio:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git commit -m 
\begin_inset Quotes fld
\end_inset

Segundo commit.
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Plain Layout

git log
\end_layout

\begin_layout Plain Layout

cat archivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
[nueva 22df02d] Segundo commit.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
1 file changed,
 1 insertion(+)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
\color yellow
commit 22df02db5a9558bd7748c5d403cdf0ac836d8897 (
\color cyan
HEAD
\color inherit
 -> 
\begin_inset space ~
\end_inset


\color green
nueva
\color yellow
)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Date:
 Mon Jan 22 19:01:52 2024 -0300
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Segundo commit.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
\color yellow
commit 980bc28d5e306ae1fad33b9731126b4964813fc4 (
\color green
master
\color yellow
)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Date:
 Mon Jan 22 18:37:09 2024 -0300
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Primer commit.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
contenido
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
mas contenido
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nótese que el contenido del archivo difiere de la confirmación,
 pues en el momento en el que se agrego al área de preparación no incluía 
\begin_inset Quotes fld
\end_inset

mas contenido
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/commit2.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git commit
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Example
Observemos que sucede si volvemos a la rama original:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git switch master
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
error:
 Los cambios locales de los siguientes archivos serán sobrescritos por checkout:
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

archivo
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Por favor realiza un commit con los cambios o un stash antes de cambiar de rama.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Abortando
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Git sabe que nuestro archivo en el directorio de trabajo tiene información que no está en la otra rama,
 y que el cambio de rama haría que esa información se pierda.
 Agreguemos esos cambios a una confirmación y volvamos a intentarlo:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git commit -a -m 
\begin_inset Quotes fld
\end_inset

Tercer commit.
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
[nueva bab8a34] Tercer commit.
\end_layout

\begin_layout Plain Layout

\family typewriter
1 file changed,
 1 insertion(+)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/commit3.png
	lyxscale 30
	scale 29
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git commit
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git switch master
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Cambiado a rama 'master'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/switch.png
	lyxscale 30
	scale 29
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git switch
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Vale la pena notar que si observamos el contenido de nuestro archivo,
 lo veremos vacío y no con los cambios confirmados en la nueva rama.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
merge
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git merge
\end_layout

\end_inset

 en Git se utiliza para combinar los cambios de otra rama en la rama actual.
 Su sintaxis es simplemente:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP,fontsize={\small}"
inline false
status open

\begin_layout Plain Layout

git merge rama
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cuando escribimos 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git merge rama
\end_layout

\end_inset

 se incorporan en la rama actual,
 las confirmaciones de la rama indicada en el comando.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En el proceso de fusión,
 Git intenta combinar automáticamente los cambios.
 Sin embargo,
 pueden surgir conflictos que requerirán intervención manual.
 En esos casos,
 Git marca los archivos conflictivos y te pedirá que resuelvas los conflictos antes de hacer la fusión.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Incorporemos en nuestra rama actual,
 el contenido de nuestro archivo de la rama 
\begin_inset Quotes fld
\end_inset

nueva
\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git merge nueva
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Actualizando 0287d2a..bab8a34
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Fast-forward
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset

archivo | 2 
\color green
++
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset

1 file changed,
 2 insertions(+)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/merge1.png
	lyxscale 30
	scale 24
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git merge
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,fontsize={\small},style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git log
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit bab8a343850d20cb4ca72c1264acab03935f9d96 (
\color cyan
HEAD
\color inherit
 -> 
\begin_inset space ~
\end_inset


\color green
master
\color inherit
,
 
\color green
nueva
\color inherit
)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Tue Jan 23 06:57:16 2024 -0300
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Tercer commit.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit f4e744110d15d2879a7b7532fd806aa6038c9970
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Tue Jan 23 06:48:31 2024 -0300
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Segundo commit.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit 0287d2a84ab9a12e02a5ac052cc5b797525b2de3
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Tue Jan 23 05:50:05 2024 -0300
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Primer commit.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
\strikeout on
\color lightgray
rebase
\end_layout

\begin_layout Subsection

\emph off
\strikeout on
\color lightgray
Resolución de conflictos
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Agregar información sobre fusión de tres vías y resolución de conflictos.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph off
\strikeout on
\color lightgray
Flujos de trabajos
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Exercise
Investigue a que hace referencia el puntero 
\begin_inset Quotes fld
\end_inset

HEAD~n
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
Los ejercicios marcados con 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faStar
\backslash
;
\end_layout

\end_inset

 son ejercicios recomendados.
\end_layout

\end_inset

Haga un repositorio con el siguiente historial:
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/merge.png
	scale 36
	BoundingBox 0bp 0bp 590bp 206bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Lineas de subterraneo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Repositorios remotos
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://github.com/"
literal "true"

\end_inset

 GitHub,
 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://about.gitlab.com/"
literal "true"

\end_inset

 GitLab y 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://bitbucket.org/"
literal "true"

\end_inset

 Bitbucket son plataformas de desarrollo colaborativo que utilizan Git como su sistema de control de versiones subyacente.
 Ofrecen servicios para la gestión del código fuente y el desarrollo de software como la Integración Continua (CI),
 Despliegue Continuo (CD),
 interfaces web que facilitan la colaboración,
 revisión de código,
 seguimiento de problemas y otras tareas relacionadas con el desarrollo de software.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
remote
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git remote
\end_layout

\end_inset

 en Git se utiliza para gestionar conexiones remotas con repositorios remotos.
 Un repositorio remoto es una versión de tu proyecto que se almacena en otro lugar,
 ya sea en otro directorio en tu máquina local o en un servidor remoto.
\end_layout

\begin_layout Standard
Aquí está la sintaxis general del comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git remote
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git remote [-v | add nombre ruta | remove nombre]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
La opción 
\family typewriter
-v
\family default
 es comúnmente utilizada para obtener una vista detallada de los repositorios remotos configurados.
\end_layout

\begin_layout Itemize
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git remote add
\end_layout

\end_inset

 agrega un repositorio remoto,
 mientras que 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git remote remove
\end_layout

\end_inset

 sirve para quitarlos.
\end_layout

\begin_layout Example
Creemos un repositorio vacío en Gitlab y configuremos dicho repositorio como fuente remota de nuestro repositorio local:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git remote add origin https://gitlab.com/damianarielm/borrar
\end_layout

\begin_layout Plain Layout

git remote -v
\end_layout

\begin_layout Plain Layout

git branch -a
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
origin https://gitlab.com/damianarielm/borrar (fetch)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
origin https://gitlab.com/damianarielm/borrar (push)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
* 
\color green
master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset

nueva
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por el momento,
 nuestra versión remota del repositorio permanece completamente vacía.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/gitlab.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Repositorio remoto en gitlab
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
push
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git push
\end_layout

\end_inset

 se utiliza para enviar las confirmaciones locales de una rama a un repositorio remoto.
 Esta acción actualiza el estado de la rama en el repositorio remoto con los cambios locales realizados.
\end_layout

\begin_layout Standard
Aquí está la sintaxis general del comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git push [-u remoto rama]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
La opción 
\family typewriter
-u
\family default
 configura la rama remota como la rama de seguimiento de la rama local.
 Esto significa que en futuros 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git push
\end_layout

\end_inset

 o 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git pull
\end_layout

\end_inset

,
 Git sabrá a qué rama remota hacer referencia.
\end_layout

\begin_layout Itemize
Si se utiliza sin opciones,
 se enviaran los cambios a la rama remota previamente configurada.
\end_layout

\begin_layout Example
Ahora que sabemos como hacerlo,
 enviemos nuestra versión del repositorio al remoto que configuramos anteriormente:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git push -u origin master
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
advertencia:
 redirigiendo a https://gitlab.com/damianarielm/borrar.git/
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Enumerando objetos:
 9,
 listo.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Contando objetos:
 100% (9/9),
 listo.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Compresión delta usando hasta 2 hilos
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Comprimiendo objetos:
 100% (3/3),
 listo.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Escribiendo objetos:
 100% (9/9),
 668 bytes | 668.00 KiB/s,
 listo.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Total 9 (delta 0),
 reusados 0 (delta 0),
 pack-reusados 0
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
To https://gitlab.com/damianarielm/borrar
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset

* [new branch] master -> 
\begin_inset space ~
\end_inset

master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
rama 'master' configurada para rastrear 'origin/master'.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Tu rama está actualizada con 'origin/master'.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
nada para hacer commit,
 el árbol de trabajo está limpio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git branch -a
\end_layout

\begin_layout Plain Layout

git log
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
* 
\color green
master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset

nueva
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color red
\begin_inset space ~
\end_inset

remotes/origin/master
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit bab8a343850d20cb4ca72c1264acab03935f9d96 (
\color cyan
HEAD
\color inherit
 -> 
\begin_inset space ~
\end_inset


\color green
master
\color inherit
,
 
\color red
origin/master
\color inherit
,

\color green
 nueva
\color inherit
)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Tue Jan 23 06:57:16 2024 -0300
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Tercer commit.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit f4e744110d15d2879a7b7532fd806aa6038c9970
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Tue Jan 23 06:48:31 2024 -0300
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Segundo commit.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\color yellow
commit 0287d2a84ab9a12e02a5ac052cc5b797525b2de3
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Author:
 Damian Ariel Marotte <damarotte@gmail.com>
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Date:
 Tue Jan 23 05:50:05 2024 -0300
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Primer commit.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/push.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git push
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
fetch
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git fetch
\end_layout

\end_inset

 en Git se utiliza para recuperar los cambios y referencias de un repositorio remoto en tu repositorio local.
\end_layout

\begin_layout Standard
Aquí está la sintaxis general del comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git fetch [remoto] [rama]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
El primer argumento especifica el nombre del repositorio remoto del que deseas recuperar los cambios.
\end_layout

\begin_layout Itemize
El segundo argumento especifica la rama remota de la cual deseas recuperar los cambios.
 Si no se especifica una rama remota,
 Git recuperará todas las ramas remotas.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git fetch
\end_layout

\end_inset

 solo descarga los cambios del repositorio remoto,
 sin fusionarlos automáticamente con tu trabajo actual.
\end_layout

\end_inset


\end_layout

\begin_layout Example
Creemos una última confirmación desde Gitlab y observemos el estado del repositorio:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Tu rama está actualizada con 'origin/master'.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
nada para hacer commit,
 el árbol de trabajo está limpio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Git nos indica que nuestra rama local está sincronizada con la última versión conocida del repositorio remoto.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/commit4.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Creando una confirmación desde Gitlab
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para actualizar esta información debemos traer la nueva versión desde Gitlab:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git fetch
\end_layout

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Tu rama está detrás de 'origin/master' por 1 commit,
 y puede ser avanzada rápido.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(usa "git pull" para actualizar tu rama local)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
nada para hacer commit,
 el árbol de trabajo está limpio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora si podemos observar que nuestra rama local carece de la confirmación que tiene nuestra versión remota de la rama.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/fetch.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git fetch
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Si lo deseamos,
 podemos integrar estos cambios mediante una fusión:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git merge origin/master
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
Actualizando bab8a34..01090d3
\end_layout

\begin_layout Plain Layout

\family typewriter
Fast-forward
\end_layout

\begin_layout Plain Layout

\family typewriter
archivo | 1 +
\end_layout

\begin_layout Plain Layout

\family typewriter
1 file changed,
 1 insertion(+)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/git/merge2.png
	lyxscale 30
	scale 30
	BoundingBox 0bp 0bp 2875bp 1333bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\family typewriter
git merge
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

git status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
En la rama master
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
Tu rama está actualizada con 'origin/master'.
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
nada para hacer commit,
 el árbol de trabajo está limpio
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\family typewriter
\emph off
pull
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git pull
\end_layout

\end_inset

 se utiliza para recuperar los cambios de un repositorio remoto y fusionarlos automáticamente con la rama local actual.
 En esencia,
 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git pull
\end_layout

\end_inset

 combina dos operaciones:
 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git fetch
\end_layout

\end_inset

,
 que descarga los cambios del repositorio remoto a tu repositorio local,
 y 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git merge
\end_layout

\end_inset

,
 que fusiona esos cambios en tu rama local actual.
\end_layout

\begin_layout Standard
Aquí está la sintaxis general del comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git pull [remoto] [rama]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
El primer argumento especifica el nombre del repositorio remoto del que deseas recuperar los cambios.
\end_layout

\begin_layout Itemize
El segundo argumento especifica la rama remota de la cual deseas recuperar los cambios.
 Si no se especifica una rama remota,
 Git recuperará todas las ramas remotas.
\end_layout

\begin_layout Subsection

\family typewriter
\emph off
clone
\end_layout

\begin_layout Standard
El comando 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git clone
\end_layout

\end_inset

 en Git se utiliza para crear una copia local de un repositorio remoto.
 Esta copia local incluye todos los archivos,
 ramas,
 historial de confirmaciones y configuraciones del repositorio remoto.
 Es una forma común de comenzar a trabajar en un proyecto nuevo o colaborar en un proyecto existente.
\end_layout

\begin_layout Standard
Aquí está la sintaxis general del comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Recuadro
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=PHP"
inline false
status open

\begin_layout Plain Layout

git clone ruta [directorio] [--depth numero]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si no especificas un nombre de directorio local,
 Git utilizará el nombre del repositorio remoto como nombre del directorio.
\end_layout

\begin_layout Standard
La opción 
\family typewriter
--depth
\family default
 se utiliza para clonar con una profundidad limitada de historial de confirmaciones.
 Específicamente,
 te permite especificar cuántas confirmaciones de historial de la rama principal deseas clonar.
\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
En esencia,
 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git clone
\end_layout

\end_inset

 es la combinación de cuatro comandos:
 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git init
\end_layout

\end_inset

,
 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git remote add
\end_layout

\end_inset

,
 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git pull
\end_layout

\end_inset

 y 
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

git switch
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph off
\strikeout on
\color lightgray
Fork
\end_layout

\begin_layout Subsection

\emph off
\strikeout on
\color lightgray
Pull request
\end_layout

\begin_layout Subsection

\emph off
\strikeout on
\color lightgray
LFS
\end_layout

\begin_layout Chapter

\strikeout on
Contenedores
\end_layout

\begin_layout Section

\strikeout on
Simulación
\end_layout

\begin_layout Section

\strikeout on
Emulación
\end_layout

\begin_layout Section

\strikeout on
Virtualización
\end_layout

\begin_layout Section

\strikeout on
Contenedores
\end_layout

\begin_layout Chapter

\strikeout on
Otros conceptos
\end_layout

\begin_layout Section

\family typewriter
\strikeout on
venv
\end_layout

\begin_layout Section

\family typewriter
\strikeout on
\color lightgray
chroot
\end_layout

\begin_layout Section

\strikeout on
Colab
\end_layout

\begin_layout Part*
Apéndice
\end_layout

\begin_layout Chapter

\color lightgray
Instalación de linux
\end_layout

\begin_layout Section

\color lightgray
Máquina virtual
\end_layout

\begin_layout Subsection

\emph off
\color lightgray
VirtualBox
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://www.virtualbox.org/"
literal "true"

\end_inset

 VirtualBox
\begin_inset Quotes frd
\end_inset

 es un software de virtualización de código abierto desarrollado por Oracle.
 Permite instalar y ejecutar sistemas operativos diferentes,
 como versiones de Windows,
 Linux,
 macOS y otros,
 dentro de una ventana de software en tu sistema operativo principal.
\end_layout

\begin_layout Standard
Antes de instalar Linux en la máquina virtual debemos descargar una distribución desde internet.
 En la materia utilizaremos 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://lubuntu.me/"
literal "true"

\end_inset

 Lubuntu
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Creación de una máquina virtual
\end_layout

\begin_layout Standard
Para crear una nueva máquina virtual elegimos la opción 
\begin_inset Quotes fld
\end_inset


\emph on
Nueva
\emph default

\begin_inset Quotes frd
\end_inset

 en la pantalla principal.
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/virtualbox/principal.png
	lyxscale 50
	scale 36
	BoundingBox 0bp 0bp 962bp 572bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Pantalla principal de VirtualBox
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Configuración del SO
\end_layout

\begin_layout Standard
A continuación elegimos la ubicación dentro del sistema de archivos,
 así como también la distribución que vamos a instalar y la imagen de disco que descargamos.
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/virtualbox/so.png
	lyxscale 50
	scale 40
	BoundingBox 0bp 0bp 781bp 401bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Pantalla principal de VirtualBox
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Elección del hardware
\end_layout

\begin_layout Standard
En la siguiente ventana es posible elegir cuanta memoria y procesadores utilizará la máquina virtual.
 Se recomienda un mínimo de 2GB.
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/virtualbox/hardware.png
	lyxscale 50
	scale 40
	BoundingBox 0bp 0bp 781bp 401bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Configuración del hardware
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Observacion
status open

\begin_layout Plain Layout
Vale la pena notar que estos recursos no estarán disponibles para la máquina anfitriona.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Creación de un disco virtual
\end_layout

\begin_layout Standard
Ahora debemos elegir la capacidad del disco de la máquina virtual.
 Recomendamos 15GB como mínimo.
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/virtualbox/disco.png
	lyxscale 50
	scale 50
	BoundingBox 0bp 0bp 781bp 401bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Creación de un disco virtual
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Último paso
\end_layout

\begin_layout Standard
Finalmente podemos hacer click en 
\begin_inset Quotes fld
\end_inset


\emph on
Terminar
\emph default

\begin_inset Quotes frd
\end_inset

 y ya estaremos listos para usar nuestra máquina virtual.
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/virtualbox/fin.png
	lyxscale 50
	scale 50
	BoundingBox 0bp 0bp 781bp 401bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Resumen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph off
\color lightgray
Lubuntu
\end_layout

\begin_layout Subsubsection
Inicio del LiveCD
\end_layout

\begin_layout Standard
Una vez que tengamos configurada nuestra máquina virtual con el correspondiente CD de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://lubuntu.me/downloads/"
literal "true"

\end_inset

 Lubuntu
\begin_inset Quotes frd
\end_inset

 insertado,
 podemos ejecutar la misma.
 Luego de algunos minutos veremos una pantalla como esta:
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/inicio.png
	lyxscale 30
	scale 21
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Inicio del LiveCD
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Llegados a este punto,
 ya podemos dar comienzo a la instalación haciendo doble click en 
\begin_inset Quotes fld
\end_inset


\emph on
Install Lubuntu
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Comienzo de la instalación
\end_layout

\begin_layout Standard
A continuación elegimos el idioma de preferencia y presionamos el botón 
\begin_inset Quotes fld
\end_inset


\emph on
Siguiente
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/instalacion.png
	lyxscale 30
	scale 21
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Comienzo de la instalación
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Configuración regional
\end_layout

\begin_layout Standard
Ha llegado la hora de configurar la región en la que opera el dispositivo.
 El sistema operativo mostrará fechas,
 horarios y unidades de acuerdo a lo seleccionado en esta sección.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/ubicacion.png
	lyxscale 30
	scale 26
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Configuración regional
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Distribución del teclado
\end_layout

\begin_layout Standard
En esta sección podemos elegir la distribución del teclado.
 En el cuadro de texto de la zona inferior,
 podemos probar que las teclas se muestren bien.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/teclado.png
	lyxscale 30
	scale 26
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Distribución del teclado
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Particionado del disco
\end_layout

\begin_layout Standard
Para nuestra primera instalación,
 elegiremos la opción de 
\begin_inset Quotes fld
\end_inset


\emph on
borrar el disco
\emph default

\begin_inset Quotes frd
\end_inset

 como esquema de particionado.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/particiones.png
	lyxscale 30
	scale 25
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Particionado del disco
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Creación del usuario principal
\end_layout

\begin_layout Standard
Ahora debemos elegir nuestro nombre,
 nombre de usuario,
 nombre del equipo y contraseña.
 También podemos marcar la casilla de verificación si deseamos iniciar sesión en la máquina virtual sin introducir la contraseña.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/usuarios.png
	lyxscale 30
	scale 25
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Creación del usuario principal
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Resumen de los datos
\end_layout

\begin_layout Standard
Reunida toda la información de los pasos anteriores,
 podemos verificarla una vez mas antes de hacer click en 
\begin_inset Quotes fld
\end_inset


\emph on
Instalar
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/resumen.png
	lyxscale 30
	scale 26
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Resumen de los datos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Final de la instalación
\end_layout

\begin_layout Standard
Despues de varios minutos la instalación habrá finalizado,
 momento en el cual presionaremos el botón 
\begin_inset Quotes fld
\end_inset


\emph on
Hecho
\emph default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/terminar.png
	lyxscale 30
	scale 27
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Final de la instalación
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Reinicio de la máquina virtual
\end_layout

\begin_layout Standard
Finalmente,
 presionamos la tecla 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

Enter y luego reiniciamos la 
\emph on
máquina virtual
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/lubuntu/reiniciar.png
	lyxscale 30
	scale 29
	BoundingBox 0bp 0bp 1278bp 799bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Reinicio de la máquina virtual
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph off
\color lightgray
Guest Additions
\end_layout

\begin_layout Standard
Las 
\begin_inset Quotes fld
\end_inset


\emph on
Guest Additions
\emph default

\begin_inset Quotes frd
\end_inset


\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Quotes fld
\end_inset


\emph on
Guest Addittions
\emph default

\begin_inset Quotes frd
\end_inset

 significa en ingles 
\begin_inset Quotes fld
\end_inset

Agregados del huesped
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_inset

 son un conjunto de controladores y utilidades adicionales que se instalan dentro de una máquina virtual (VM) que se ejecuta en VirtualBox.
 Están diseñadas para mejorar la experiencia del usuario y la funcionalidad de la VM en general.
\end_layout

\begin_layout Standard
Algunas de las características y mejoras que proporcionan las Guest Additions incluyen:
\end_layout

\begin_layout Description
Integración
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

ratón
\begin_inset space ~
\end_inset

y
\begin_inset space ~
\end_inset

el
\begin_inset space ~
\end_inset

teclado Las Guest Additions permiten una integración más fluida del ratón y el teclado entre el sistema operativo anfitrión y el invitado.
 
\end_layout

\begin_layout Description
Soporte
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

pantalla
\begin_inset space ~
\end_inset

completa Permite habilitar el modo de pantalla completa para la VM para aprovechar al máximo el espacio de la pantalla y trabajar de manera más cómoda dentro de la máquina virtual.
\end_layout

\begin_layout Description
integración
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

portapapeles Activa la funcionalidad del portapapeles entre el sistema operativo anfitrión y el invitado,
 lo que facilita el intercambio de texto y otros datos entre ambos sistemas.
\end_layout

\begin_layout Standard
Para instalarlas,
 basta con ejecutar los siguientes comandos:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo apt update
\end_layout

\begin_layout Plain Layout

sudo apt install virtualbox-guest-x11
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Instalación en pendrive
\end_layout

\begin_layout Section

\color lightgray
Otras alternativas
\end_layout

\begin_layout Subsection

\color lightgray
Subsistema de Windows para Linux
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faWikipediaW"
target "https://es.wikipedia.org/wiki/Subsistema_de_Windows_para_Linux"
literal "true"

\end_inset

 Windows Subsystem for Linux
\begin_inset Quotes frd
\end_inset

 (WSL) es una característica de Windows que permite ejecutar un entorno de Linux directamente en Windows sin necesidad de una máquina virtual o un arranque dual.
 
\end_layout

\begin_layout Standard
WSL utiliza una capa de compatibilidad para traducir las llamadas del sistema de Linux a llamadas del sistema de Windows,
 lo que permite que las aplicaciones de Linux se ejecuten de manera nativa en el sistema operativo Windows.
 
\end_layout

\begin_layout Standard
Para instalar WSL basta con correr el siguiente comando en PowerShell:
\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

wsl --install -d ubuntu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Luego se debe ejecutar 
\begin_inset Quotes fld
\end_inset


\family typewriter
wsl
\family default

\begin_inset Quotes frd
\end_inset

 para poder utilizarlo.
\end_layout

\begin_layout Subsection

\color lightgray
Colab
\end_layout

\begin_layout Standard
Es posible utilizar un entorno de 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "\\faLink"
target "https://colab.research.google.com/"
literal "true"

\end_inset

 
\emph on
Google Colab
\emph default

\begin_inset Quotes frd
\end_inset

 para utilizar Bash.
 Para esto debemos seguir estos tres pasos:
\end_layout

\begin_layout Enumerate
Instalar el módulo de Python 
\family typewriter
colab-xterm
\family default
:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout

\family typewriter
!pip install colab-xterm 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Cargar la extensión en Colab:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout

\family typewriter
%load_ext colabxterm
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Ejecutar 
\family typewriter
xterm
\family default
:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout

\family typewriter
%xterm
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection

\strikeout on
\color lightgray
Replit
\end_layout

\begin_layout Subsection

\strikeout on
\color lightgray
CoCalc
\end_layout

\begin_layout Subsection

\strikeout on
\color lightgray
Termux
\end_layout

\begin_layout Chapter

\color lightgray
Resolución de problemas
\end_layout

\begin_layout Section

\color lightgray
Activar 
\emph on
IVT
\emph default
/
\emph on
AMD-V
\end_layout

\begin_layout Standard
IVT (Intel Virtualization Technology) y AMD-V (AMD Virtualization) son tecnologías de virtualización desarrolladas por Intel y AMD,
 respectivamente.
 Ambas tecnologías están diseñadas para mejorar el rendimiento y la eficiencia de la virtualización en sus respectivas arquitecturas de procesadores.
\end_layout

\begin_layout Standard
Para activar estas características es necesario ingresar a la configuración de la placa madre.
 Esto se logra presionando una tecla específica durante la etapa POST del arranque de la PC.
 Dependiendo del modelo esta tecla puede ser:
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 F2,
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 F10 o 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
faKeyboardO
\backslash
;
\end_layout

\end_inset

 DEL (entre otras).
\end_layout

\begin_layout Standard
Una vez allí simplemente es cuestión de navegar entre los menús hasta ubicar la opción adecuada y habilitarla.
 Finalmente se deben guardar los cambios y reiniciar el equipo.
\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/uefi.png
	lyxscale 50
	scale 32

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Interfaz UEFI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Figura
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagenes/bios.png
	lyxscale 70
	scale 43

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Interfaz BIOS
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\color lightgray
Librerías de C++
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\emph on
Visual C++ Redistributable Package
\emph default

\begin_inset Quotes frd
\end_inset

 es un conjunto de archivos y bibliotecas necesarios para que los programas desarrollados con Microsoft Visual C++ funcionen correctamente en una computadora.
 Cuando instalas un programa en Windows que fue creado con Visual C++,
 es posible que necesites instalar también estos 
\begin_inset Quotes fld
\end_inset

paquetes redistribuibles
\begin_inset Quotes frd
\end_inset

 si aún no están en tu sistema.
\end_layout

\begin_layout Standard
Puedes descargar la última versión de esta librería desde este 
\begin_inset CommandInset href
LatexCommand href
name "\\faLink \\; enlace"
target "https://aka.ms/vs/17/release/vc_redist.x64.exe"
literal "true"

\end_inset

.
\end_layout

\begin_layout Section

\color lightgray
Poner 
\family typewriter
man
\family default
 en español
\end_layout

\begin_layout Standard
Por defecto,
 la documentación de Linux se encuentra en idioma ingles.
 Para ponerla en idioma español debe utilizarse el siguiente comando:
\end_layout

\begin_layout Standard
\begin_inset Flex Bash
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={github-dark}"
inline false
status open

\begin_layout Plain Layout

sudo apt update
\end_layout

\begin_layout Plain Layout

sudo apt install manpages-es
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\color lightgray
Actualizar Kernel para WSL
\end_layout

\begin_layout Standard
Si Windows no tiene actualizado el kernel de Linux para WSL,
 es probable que aparezca un error a la hora de instalar WSL:
\end_layout

\begin_layout Standard
\begin_inset Flex Salida
status open

\begin_layout Plain Layout

\family typewriter
\size small
Installing,
 this may take a few minutes...
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
WslRegisterDistribution failed with error:
 0x800701bc
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Error:
 0x800701bc WSL 2 requiere una actualizaci¾n de su componente de kernel.
 Para obtener informaci¾n,
 visita https://aka.ms/wsl2kernel
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
Press any key to continue...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para solucionarlo,
 basta con actualizar el nucleo y volver a instalar:
\end_layout

\begin_layout Standard
\begin_inset Flex PowerShell
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash,style={solarized-dark}"
inline false
status open

\begin_layout Plain Layout

wsl --update
\end_layout

\begin_layout Plain Layout

wsl --install -d ubuntu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

\strikeout on
\color lightgray
Programando un shell
\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Linea de comandos
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\normalsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comando = input()
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(comando,
 [comando])
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Variable PATH
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\normalsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def buscar(comando):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{comando}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return comando
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def ejecutar(programa):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(comando),
 [comando])
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comando = input()
\end_layout

\begin_layout Plain Layout

    ejecutar(comando)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Manejo de argumentos
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\normalsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def interpretar(comando):
\end_layout

\begin_layout Plain Layout

    programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

    return programa,
 [programa] + argumentos
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comando = input()
\end_layout

\begin_layout Plain Layout

    programa,
 argumentos = interpretar(comando)
\end_layout

\begin_layout Plain Layout

    ejecutar(programa,
 argumentos)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Cambiar de directorio
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\normalsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def interpretar(comando):
\end_layout

\begin_layout Plain Layout

    comando = comando.replace("~",
 os.getenv("HOME"))
\end_layout

\begin_layout Plain Layout

    programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

    return programa,
 [programa] + argumentos
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def comando_cd(argumentos):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        directorio = os.getenv("HOME")
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        directorio = argumentos[1]
\end_layout

\begin_layout Plain Layout

    os.chdir(directorio)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comando = input()
\end_layout

\begin_layout Plain Layout

    programa,
 argumentos = interpretar(comando)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    if programa == "cd":
\end_layout

\begin_layout Plain Layout

        comando_cd(argumentos)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        ejecutar(programa,
 argumentos)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Prompt
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\small},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def prompt():
\end_layout

\begin_layout Plain Layout

    cwd = os.getcwd()
\end_layout

\begin_layout Plain Layout

    username = os.getlogin()
\end_layout

\begin_layout Plain Layout

    hostname = os.uname().nodename
\end_layout

\begin_layout Plain Layout

    print(f"{username}@{hostname}:{cwd}$",
 end =" ")
\end_layout

\begin_layout Plain Layout

    return input()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def interpretar(comando):
\end_layout

\begin_layout Plain Layout

    comando = comando.replace("~",
 os.getenv("HOME"))
\end_layout

\begin_layout Plain Layout

    programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

    return programa,
 [programa] + argumentos
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def comando_cd(argumentos):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        directorio = os.getenv("HOME")
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        directorio = argumentos[1]
\end_layout

\begin_layout Plain Layout

    os.chdir(directorio)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comando = prompt()
\end_layout

\begin_layout Plain Layout

    programa,
 argumentos = interpretar(comando)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    if programa == "cd":
\end_layout

\begin_layout Plain Layout

        comando_cd(argumentos)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        ejecutar(programa,
 argumentos)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Alias
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\footnotesize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

def prompt():
\end_layout

\begin_layout Plain Layout

    cwd = os.getcwd()
\end_layout

\begin_layout Plain Layout

    username = os.getlogin()
\end_layout

\begin_layout Plain Layout

    hostname = os.uname().nodename
\end_layout

\begin_layout Plain Layout

    print(f"{username}@{hostname}:{cwd}$",
 end =" ")
\end_layout

\begin_layout Plain Layout

    return input()
\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

def interpretar(comando):
\end_layout

\begin_layout Plain Layout

    comando = comando.replace("~",
 os.getenv("HOME"))
\end_layout

\begin_layout Plain Layout

    programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

    if programa in alias:
\end_layout

\begin_layout Plain Layout

        programa = alias[programa].split()[0]
\end_layout

\begin_layout Plain Layout

        argumentos = alias[programa].split()[1:] + argumentos
\end_layout

\begin_layout Plain Layout

    return programa,
 [programa] + argumentos
\end_layout

\begin_layout Plain Layout

def comando_cd(argumentos):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        directorio = os.getenv("HOME")
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        directorio = argumentos[1]
\end_layout

\begin_layout Plain Layout

    os.chdir(directorio)
\end_layout

\begin_layout Plain Layout

def comando_alias(argumentos,
 alias):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        print(alias)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        nombre,
 programa = argumentos[1].split("=")
\end_layout

\begin_layout Plain Layout

        alias[nombre] = programa + " " + " ".join(argumentos[2:])
\end_layout

\begin_layout Plain Layout

    return alias
\end_layout

\begin_layout Plain Layout

alias = {}
\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comando = prompt()
\end_layout

\begin_layout Plain Layout

    programa,
 argumentos = interpretar(comando)
\end_layout

\begin_layout Plain Layout

    if programa == "cd":
\end_layout

\begin_layout Plain Layout

        comando_cd(argumentos)
\end_layout

\begin_layout Plain Layout

    elif programa == "alias":
\end_layout

\begin_layout Plain Layout

        comando_alias(argumentos,
 alias)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        ejecutar(programa,
 argumentos)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Segundo plano
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\scriptsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def prompt():
\end_layout

\begin_layout Plain Layout

    cwd = os.getcwd()
\end_layout

\begin_layout Plain Layout

    username = os.getlogin()
\end_layout

\begin_layout Plain Layout

    hostname = os.uname().nodename
\end_layout

\begin_layout Plain Layout

    print(f"{username}@{hostname}:{cwd}$",
 end =" ")
\end_layout

\begin_layout Plain Layout

    return input()
\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos,
 background):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    elif not background:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

def interpretar(comando):
\end_layout

\begin_layout Plain Layout

    background = comando[-1] == "&"
\end_layout

\begin_layout Plain Layout

    if background:
 comando = comando[:-1]
\end_layout

\begin_layout Plain Layout

    comando = comando.replace("~",
 os.getenv("HOME"))
\end_layout

\begin_layout Plain Layout

    programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    if programa in alias:
\end_layout

\begin_layout Plain Layout

        programa = alias[programa].split()[0]
\end_layout

\begin_layout Plain Layout

        argumentos = alias[programa].split()[1:] + argumentos
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    return programa,
 [programa] + argumentos,
 background
\end_layout

\begin_layout Plain Layout

def comando_cd(argumentos):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        directorio = os.getenv("HOME")
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        directorio = argumentos[1]
\end_layout

\begin_layout Plain Layout

    os.chdir(directorio)
\end_layout

\begin_layout Plain Layout

def comando_alias(argumentos,
 alias):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        print(alias)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        nombre,
 programa = argumentos[1].split("=")
\end_layout

\begin_layout Plain Layout

        alias[nombre] = programa + " " + " ".join(argumentos[2:])
\end_layout

\begin_layout Plain Layout

    return alias
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

alias = {}
\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comando = prompt()
\end_layout

\begin_layout Plain Layout

    programa,
 argumentos,
 background = interpretar(comando)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    if programa == "cd":
\end_layout

\begin_layout Plain Layout

        comando_cd(argumentos)
\end_layout

\begin_layout Plain Layout

    elif programa == "alias":
\end_layout

\begin_layout Plain Layout

        comando_alias(argumentos,
 alias)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        ejecutar(programa,
 argumentos,
 background)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Secuenciación
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\scriptsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def prompt():
\end_layout

\begin_layout Plain Layout

    cwd = os.getcwd()
\end_layout

\begin_layout Plain Layout

    username = os.getlogin()
\end_layout

\begin_layout Plain Layout

    hostname = os.uname().nodename
\end_layout

\begin_layout Plain Layout

    print(f"{username}@{hostname}:{cwd}$",
 end =" ")
\end_layout

\begin_layout Plain Layout

    return input()
\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos,
 background):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    elif not background:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

def interpretar(comandos):
\end_layout

\begin_layout Plain Layout

    for comando in comandos.split(";"):
\end_layout

\begin_layout Plain Layout

        background = comando[-1] == "&"
\end_layout

\begin_layout Plain Layout

        if background:
 comando = comando[:-1]
\end_layout

\begin_layout Plain Layout

        comando = comando.replace("~",
 os.getenv("HOME"))
\end_layout

\begin_layout Plain Layout

        programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        if programa in alias:
\end_layout

\begin_layout Plain Layout

            programa = alias[programa].split()[0]
\end_layout

\begin_layout Plain Layout

            argumentos = alias[programa].split()[1:] + argumentos
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        yield programa,
 [programa] + argumentos,
 background
\end_layout

\begin_layout Plain Layout

def comando_cd(argumentos):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        directorio = os.getenv("HOME")
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        directorio = argumentos[1]
\end_layout

\begin_layout Plain Layout

    os.chdir(directorio)
\end_layout

\begin_layout Plain Layout

def comando_alias(argumentos,
 alias):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        print(alias)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        nombre,
 programa = argumentos[1].split("=")
\end_layout

\begin_layout Plain Layout

        alias[nombre] = programa + " " + " ".join(argumentos[2:])
\end_layout

\begin_layout Plain Layout

    return alias
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

alias = {}
\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    comandos = prompt()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    for programa,
 argumentos,
 background in interpretar(comandos):
\end_layout

\begin_layout Plain Layout

        if programa == "cd":
\end_layout

\begin_layout Plain Layout

            comando_cd(argumentos)
\end_layout

\begin_layout Plain Layout

        elif programa == "alias":
\end_layout

\begin_layout Plain Layout

            comando_alias(argumentos,
 alias)
\end_layout

\begin_layout Plain Layout

        else:
\end_layout

\begin_layout Plain Layout

            ejecutar(programa,
 argumentos,
 background)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Exit
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\scriptsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def prompt():
\end_layout

\begin_layout Plain Layout

    cwd = os.getcwd()
\end_layout

\begin_layout Plain Layout

    username = os.getlogin()
\end_layout

\begin_layout Plain Layout

    hostname = os.uname().nodename
\end_layout

\begin_layout Plain Layout

    print(f"{username}@{hostname}:{cwd}$",
 end =" ")
\end_layout

\begin_layout Plain Layout

    return input()
\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
\end_layout

\begin_layout Plain Layout

            return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos,
 background):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    elif not background:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

def interpretar(comandos):
\end_layout

\begin_layout Plain Layout

    for comando in comandos.split(";"):
\end_layout

\begin_layout Plain Layout

        background = comando[-1] == "&"
\end_layout

\begin_layout Plain Layout

        if background:
 comando = comando[:-1]
\end_layout

\begin_layout Plain Layout

        comando = comando.replace("~",
 os.getenv("HOME"))
\end_layout

\begin_layout Plain Layout

        programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        if programa in alias:
\end_layout

\begin_layout Plain Layout

            programa = alias[programa].split()[0]
\end_layout

\begin_layout Plain Layout

            argumentos = alias[programa].split()[1:] + argumentos
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        yield programa,
 [programa] + argumentos,
 background
\end_layout

\begin_layout Plain Layout

def comando_cd(argumentos):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        directorio = os.getenv("HOME")
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        directorio = argumentos[1]
\end_layout

\begin_layout Plain Layout

    os.chdir(directorio)
\end_layout

\begin_layout Plain Layout

def comando_alias(argumentos,
 alias):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        print(alias)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        nombre,
 programa = argumentos[1].split("=")
\end_layout

\begin_layout Plain Layout

        alias[nombre] = programa + " " + " ".join(argumentos[2:])
\end_layout

\begin_layout Plain Layout

    return alias
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

alias = {}
\end_layout

\begin_layout Plain Layout

comandos = ""
\end_layout

\begin_layout Plain Layout

while comandos != "exit":
\end_layout

\begin_layout Plain Layout

    comandos = prompt()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    for programa,
 argumentos,
 background in interpretar(comandos):
\end_layout

\begin_layout Plain Layout

        if programa == "cd":
\end_layout

\begin_layout Plain Layout

            comando_cd(argumentos)
\end_layout

\begin_layout Plain Layout

        elif programa == "alias":
\end_layout

\begin_layout Plain Layout

            comando_alias(argumentos,
 alias)
\end_layout

\begin_layout Plain Layout

        elif programa != "exit":
\end_layout

\begin_layout Plain Layout

            ejecutar(programa,
 argumentos,
 background)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\strikeout on
\color lightgray
Historial
\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,numbers=left,fontsize={\scriptsize},numbersep={8pt},xleftmargin=8pt"
inline false
status open

\begin_layout Plain Layout

import os
\end_layout

\begin_layout Plain Layout

def prompt():
\end_layout

\begin_layout Plain Layout

    cwd = os.getcwd()
\end_layout

\begin_layout Plain Layout

    username = os.getlogin()
\end_layout

\begin_layout Plain Layout

    hostname = os.uname().nodename
\end_layout

\begin_layout Plain Layout

    print(f"{username}@{hostname}:{cwd}$",
 end =" ")
\end_layout

\begin_layout Plain Layout

    return input()
\end_layout

\begin_layout Plain Layout

def buscar(programa):
\end_layout

\begin_layout Plain Layout

    path = os.getenv("PATH")
\end_layout

\begin_layout Plain Layout

    for directorio in path.split(":"):
\end_layout

\begin_layout Plain Layout

        ruta = f"{directorio}/{programa}"
\end_layout

\begin_layout Plain Layout

        if os.path.isfile(ruta):
 return ruta
\end_layout

\begin_layout Plain Layout

    return programa
\end_layout

\begin_layout Plain Layout

def ejecutar(programa,
 argumentos,
 background):
\end_layout

\begin_layout Plain Layout

    pid = os.fork()
\end_layout

\begin_layout Plain Layout

    if pid == 0:
\end_layout

\begin_layout Plain Layout

        os.execv(buscar(programa),
 argumentos)
\end_layout

\begin_layout Plain Layout

    elif not background:
\end_layout

\begin_layout Plain Layout

        os.waitid(os.P_PID,
 pid,
 os.WEXITED)
\end_layout

\begin_layout Plain Layout

def interpretar(comandos,
 historial):
\end_layout

\begin_layout Plain Layout

    for comando in comandos.split(";"):
\end_layout

\begin_layout Plain Layout

        background = comando[-1] == "&"
\end_layout

\begin_layout Plain Layout

        if background:
 comando = comando[:-1]
\end_layout

\begin_layout Plain Layout

        comando = comando.replace("~",
 os.getenv("HOME"))
\end_layout

\begin_layout Plain Layout

        comando = comando.replace("!!",
 historial[-1])
\end_layout

\begin_layout Plain Layout

        if comando[0] == "!":
 comando = historial[int(comando[1:])]
\end_layout

\begin_layout Plain Layout

        programa,
 *argumentos = comando.split()
\end_layout

\begin_layout Plain Layout

        if programa in alias:
\end_layout

\begin_layout Plain Layout

            programa = alias[programa].split()[0]
\end_layout

\begin_layout Plain Layout

            argumentos = alias[programa].split()[1:] + argumentos
\end_layout

\begin_layout Plain Layout

        yield programa,
 [programa] + argumentos,
 background
\end_layout

\begin_layout Plain Layout

def comando_cd(argumentos):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        directorio = os.getenv("HOME")
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        directorio = argumentos[1]
\end_layout

\begin_layout Plain Layout

    os.chdir(directorio)
\end_layout

\begin_layout Plain Layout

def comando_alias(argumentos,
 alias):
\end_layout

\begin_layout Plain Layout

    if not argumentos[1:]:
\end_layout

\begin_layout Plain Layout

        print(alias)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        nombre,
 programa = argumentos[1].split("=")
\end_layout

\begin_layout Plain Layout

        alias[nombre] = programa + " " + " ".join(argumentos[2:])
\end_layout

\begin_layout Plain Layout

    return alias
\end_layout

\begin_layout Plain Layout

alias = {}
\end_layout

\begin_layout Plain Layout

comandos = ""
\end_layout

\begin_layout Plain Layout

historial = []
\end_layout

\begin_layout Plain Layout

while comandos != "exit":
\end_layout

\begin_layout Plain Layout

    comandos = prompt()
\end_layout

\begin_layout Plain Layout

    if comandos[0] != "!":
 historial.append(comandos)
\end_layout

\begin_layout Plain Layout

    for programa,
 argumentos,
 background in interpretar(comandos,
 historial):
\end_layout

\begin_layout Plain Layout

        if programa == "cd":
\end_layout

\begin_layout Plain Layout

            comando_cd(argumentos)
\end_layout

\begin_layout Plain Layout

        elif programa == "alias":
\end_layout

\begin_layout Plain Layout

            comando_alias(argumentos,
 alias)
\end_layout

\begin_layout Plain Layout

        elif programa == "history":
\end_layout

\begin_layout Plain Layout

            for n,
 comando in enumerate(historial):
\end_layout

\begin_layout Plain Layout

                print(f"{n} {comando}")
\end_layout

\begin_layout Plain Layout

        elif programa != "exit":
\end_layout

\begin_layout Plain Layout

            ejecutar(programa,
 argumentos,
 background)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

Paul E.
 Ceruzzi - Computing:
 A Concise History.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Brian Ward - How Linux Works.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Daniel J.
 Barret - Efficient Linux at the Command Line.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"

\end_inset

Anna Skoulikari - Learning Git.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Instalar Archlinux
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Protocolo XKB
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Pdb
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Daniel J.
 Barrett - Linux Pocket Guide (3rd edition)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
William Shotts - The Linux Command Line
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Jon Loeliger - Version Control with Git
\end_layout

\end_inset


\end_layout

\end_body
\end_document

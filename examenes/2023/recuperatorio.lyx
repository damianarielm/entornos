#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ../apunte/lyx
\use_default_options true
\begin_modules
theorems-ams
theorems-chap
multicol
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
T.U.I.A.
\begin_inset Newline newline
\end_inset

U.N.R.
\end_layout

\begin_layout Center Header

\series bold
Entorno de Programación
\series default

\begin_inset Newline newline
\end_inset

Comisión 2
\end_layout

\begin_layout Right Header
Recuperatorio
\begin_inset Newline newline
\end_inset

13/6/2023
\end_layout

\begin_layout Standard
Nombre y apellido:
\begin_inset space \hfill{}
\end_inset

DNI:
\begin_inset space \hspace*{}
\length 7em
\end_inset


\end_layout

\begin_layout Enumerate
Escriba un comando para crear un archivo con el contenido de 
\emph on
todos los archivos
\emph default
 del directorio actual.
\end_layout

\begin_deeper
\begin_layout Solution*
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

cat * > archivo
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Un archivo contiene información en dos columnas separadas por 
\emph on
un espacio
\emph default
: cantidades y nombres de productos.
 Escriba un comando para mostrar en pantalla el nombre del producto con
 mayor cantidad.
\end_layout

\begin_deeper
\begin_layout Solution*
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

sort -nr archivo | head -n 1 | cut -d 
\begin_inset Quotes fld
\end_inset

 
\begin_inset Quotes fld
\end_inset

 -f 2
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Escriba un comando para encontrar lineas de un archivo, que 
\emph on
no terminen
\emph default
 en punto y coma (
\begin_inset Quotes fld
\end_inset


\family typewriter
;
\family default

\begin_inset Quotes frd
\end_inset

).
\end_layout

\begin_deeper
\begin_layout Solution*
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

grep -v 
\begin_inset Quotes fld
\end_inset

;$
\begin_inset Quotes frd
\end_inset

 archivo
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Escriba un comando para que 
\emph on
ningún usuario
\emph default
 tenga 
\emph on
ningún permiso
\emph default
 en los archivos que terminan en 
\begin_inset Quotes fld
\end_inset


\family typewriter
.key
\family default

\begin_inset Quotes frd
\end_inset

 de la carpeta actual.
\end_layout

\begin_deeper
\begin_layout Solution*
\begin_inset listings
lstparams "language=bash"
inline true
status open

\begin_layout Plain Layout

chmod 0 *.key
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Considere el siguiente script:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash"
inline false
status open

\begin_layout Plain Layout

[ $# -ne 1 ] && exit 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

I=1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while [ $I -le $1 ]; do
\end_layout

\begin_layout Plain Layout

    echo $I
\end_layout

\begin_layout Plain Layout

    I=$(($I + 1))
\end_layout

\begin_layout Plain Layout

done
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

exit 0
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Enumerate
¿Cuál es el propósito del programa?
\end_layout

\begin_layout Enumerate
¿Qué programa cumple con la misma función?
\end_layout

\begin_layout Enumerate
¿Qué representan los diferentes códigos de salida?
\end_layout

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Crear una secuencia de números ascendentes.
\end_layout

\begin_layout Enumerate

\family typewriter
seq
\end_layout

\begin_layout Enumerate
El cero representa ejecución exitosa y el uno representa falta de argumentos.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
El siguiente programa debería determinar si un numero es par, pero tiene
 errores.
 Corríjalo.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash"
inline false
status open

\begin_layout Plain Layout

[$# -eq 1] && exit 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if test $(($1 % 2 -eq 0)); then
\end_layout

\begin_layout Plain Layout

    echo Par
\end_layout

\begin_layout Plain Layout

else
\end_layout

\begin_layout Plain Layout

    echo Impar
\end_layout

\begin_layout Plain Layout

fi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Codigo
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=bash"
inline false
status open

\begin_layout Plain Layout

[ $# -ne 1 ] && exit 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if test $(($1 % 2)) -eq 0; then
\end_layout

\begin_layout Plain Layout

    echo Par
\end_layout

\begin_layout Plain Layout

else
\end_layout

\begin_layout Plain Layout

    echo Impar
\end_layout

\begin_layout Plain Layout

fi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
